.MCALL	.MODULE
.MODULE	PC,RELEASE=V01,VERSION=00,COMMENT=<PAF Commander>

	.MCALL	.LOCK	.SERR
	.MCALL	.PURGE	.LOOKU	.READW
	.MCALL	.SETTO	.PRINT	.EXIT
	.MCALL	.JSWDF	.SCMDF	.ROFDF
	.DSABL	GBL
	.GLOBL	.10	RAD
	.GLOBL	PP$LOA	PP$UNL	HR	BRDI
	.GLOBL	ON.HND	PUT.HN	OFF.HN
	.GLOBL	INIEXT	EXENTE
	.GLOBL	INIINI	S.F9
	.GLOBL	SETPAL
	.GLOBL	HDIG	HLINE
	.GLOBL	REP	WINPKE	NEXTKE	ENALT	ALT
	.GLOBL	GETDIR	UNPACK	.UNPAC	PRPACK	MINI
	.GLOBL	DEF$TA	DEF$07	CNVDEV	ASSDK
	.GLOBL	L.GOTO	L.PRI	L.DEV	CHAR
	.GLOBL	S.ENT	BACK
	.GLOBL	SL.PUT
	.GLOBL	SEARCH
	.GLOBL	SORT	DEFSEL	INSERT	GPL	GMI
	.GLOBL	GSEL	SSEL	GSCROF	SSCROF
	.GLOBL	DEVICE	DEVTR1
	.GLOBL	HELP	EDIT	VIEW	MENU
	.GLOBL	RENMOV	COPY	UNPRO	PRO	DELETE
	.GLOBL	S.RENM	S.COPY	S.UNPR	S.PRO	S.DELE
	.GLOBL	A.F1	A.F2	A.F5	A.F7	A.F8
	.GLOBL	A.F9	A.F10	S.F10

	.INCLU	"SCRMAC"
	.INCLU	"DIAMAC"

.SBTTL Constants definition

	.JSWDF
	.SCMDF
	.ROFDF

LINES	==	17.

MAXFIL	==	150.
ENTSIZ	==	7*2

KB$SIZ	==	100

VOLLEN	==	12.

BRIEF	==	1
FULL	==	2
INFO	==	   200
SAVED	=	 40000
ONOFF	==	100000

BYNAME	==	 2
BYEXT	==	 4
BYDATE	==	 6
BYSIZE	==	10

;----------------------------------------------
	.ASECT
	.=510
	.WORD	2$-1$
1$:	.ASCIZ	"UNL PC"
2$:	.EVEN
	.IIF	GE	<.-600> .ERROR	; Illegal assect #510
	.PSECT
;----------------------------------------------

.SBTTL	Main programm

.MACRO	.LABEL	ADDR,CODE
	.WORD	ADDR-.,CODE
.ENDM

DISP::	TST	(R0)+
	BEQ	NOTF
	CMP	(R0)+,(SP)
	BNE	DISP
	TST	-(R0)
	ADD	-(R0),R0
NOTF:	RTS	R0

PCSTART::
	.LOCK
	MOV	@#SYSPTR,R0
	MOV	$USRLC(R0),R0
	TST	-(R0)
	.SETTO
	CMP	#...,R0
	BLO	1$
	.PRINT	#T.MEM
	JMP	SETTO

1$:	.SERR

	CALL	PP$LOA

.HR::	BR	.
	.WORD	HR

	CALL	ON.HND
	BCC	1$
	CALL	INIINI
1$:	CALL	SETPAL

	CALL	DEF$TAB

	MOV	$PANEL,R5
	MOV	#^RDK ,R0
2$:	CALL	CNVDEV
	MOV	R0,@DEV(R5)
	MOV	DEVA(R5),R1
	CALL	RAD
	ADD	-(R5),R5
	MOV	@DEV(R5),R0
	COMB	#0
	BNE	2$

	MOV	#PROMPT,R1
	CALL	RAD
	CLRB	LINE
LEN	==	. + 2
	CLR	#0
X	==	. + 2
	CLR	#0
	CALL	L.DEV
	CALL	L.PRI
	CALL	L.GOTO

	CALL	HDIG
	CALL	HLINE
	CALL	DEF$07

	CALL	INIEXT

	MOV	#BEGDAT,R1
	MOV	#<ENDDAT-BEGDAT>/2,R0
3$:	CLR	(R1)+
	SOB	R0,3$

ENTRY::
	MOV	$PANEL,R5

	MOVB	#2,(PC)+
CX:	.WORD
1$:	MOV	R5,R0
	ADD	-(R0),R0
	TST	MODE(R0)
	BMI	2$
	TSTB	MODE(R0)
	BPL	2$
	BISB	RREAD(R5),RDRAW(R0)
	CALL	REREAD
2$:	ADD	-(R5),R5
	DECB	CX
	BNE	1$

	MOVB	#2,CX
3$:	CALL	REREAD
	ADD	-(R5),R5
	DECB	CX
	BNE	3$

.TAB:	TST	MODE(R5)
	BPL	1$
	ADD	-(R5),R5
	TST	MODE(R5)
	BPL	1$
	ADD	-(R5),R5
1$:	CMP	$PANEL,R5
	BEQ	2$
	MOV	R5,$PANEL
	CALL	INVCAP
2$:	CALL	CORRMODE
	CALL	L.DEV

KEYIN::	TST	REP
	BNE	TTI
	TSTB	RDRAW(R5)
	BEQ	1$
	CLRB	RDRAW(R5)
	CALL	CURSOR
	CALL	DUMP
1$:	CMP	R5,O.R5
	BNE	2$
	CMP	SCROL(R5),O.SCROL
	BNE	2$
	CMP	OFFS(R5),O.OFFS
	BEQ	3$
2$:	CALL	CURSOR
	MOV	R5,O.R5
	MOV	SCROL(R5),O.SCROL
	MOV	OFFS(R5),O.OFFS
	CALL	CURSOR
3$:	CALL	MINIST
TTI::	TST	MODE(R5)
	BPL	.INPKEY
	MOV	R5,R0
	ADD	-(R0),R0
	TST	MODE(R0)
	BMI	.INPKEY
	MOV	R0,R5
	MOV	R5,$PANEL
	BR	.TAB

.INPKEY::
	COMB	@#ENALT	  ;;;	JMP @#INP /SEARCH/
	.WMZ
	CALL	WINPKEY
	.WMZ
	COMB	ENALT
..INPKEY::
	TSTB	ALT
	BEQ	2$
	JSR	R0,DISP
	.LABEL	S.ENT	,200
	.LABEL	BACK	,230
	.LABEL	A.F1	, 33
	.LABEL	A.F2	,202
	.LABEL	A.F5	,205
	.LABEL	A.F7	,207
	.LABEL	A.F8	,210
	.LABEL	A.F9	,211
	.LABEL	A.F10	,212
	.WORD
	BR	6$
2$:	JSR	R0,DISP
;	.LABEL	HELP	,201
	.LABEL	MENU	,211
	.LABEL	S.F10	,212!40
	.LABEL	$DONE	,212
	.LABEL	S.F9	,211!40
	.LABEL	PCENTER	,200
	.LABEL	S.ENT	,200!40
	.LABEL	S.O	,'o
	.LABEL	S..F1	, 13
	.LABEL	S..F2	,202!40
	.WORD
6$:	TST	MODE(R5)
	BMI	3$
	TSTB	MODE(R5)
	BMI	4$
	TST	(R5)
	BEQ	4$

	TSTB	ALT
	BNE	3$	;;;;
;	BEQ	5$
;	JSR	R0,DISP
;	.WORD
;	BR	3$
5$:	JSR	R0,DISP
	.LABEL	UP	,214
	.LABEL	DOWN	,215
	.LABEL	LEFT	,216
	.LABEL	RIGHT	,217
	.LABEL	GPL	,220
	.LABEL	GMI	,221
	.LABEL	INSERT	,222

	.LABEL	EDIT	,202
	.LABEL	VIEW	,203
	.LABEL	RENMOV	,204
	.LABEL	COPY	,205
	.LABEL	UNPRO	,206
	.LABEL	PRO	,207
	.LABEL	DELETE	,210
	.LABEL	S.RENM	,204!40
	.LABEL	S.COPY	,205!40
	.LABEL	S.UNPR	,206!40
	.LABEL	S.PRO	,207!40
	.LABEL	S.DELE	,210!40
	.WORD
4$:	JSR	R0,DISP
	.LABEL	TAB	,11
	.LABEL	S.L	,'l
	.LABEL	S.R	,'r
	.LABEL	S.RR	,300
	.LABEL	S.RR	,301
	.LABEL	S.RR	,302
	.LABEL	S.RR	,303
	.LABEL	S.P	,'p
	.WORD
3$:	TSTB	ALT
	BEQ	7$
	JMP	SEARCH
7$:	JMP	CHAR

TAB:	CALL	INVCAP
	ADD	-(R5),R5
	CALL	INVCAP
	MOV	R5,$PANEL
	JMP	.TAB

UP:	DEC	OFFS(R5)
	BGE	1$
	INCB	RDRAW(R5)
	CLR	OFFS(R5)
	DEC	SCROL(R5)
	BGE	1$
	DECB	RDRAW(R5)
	CLR	SCROL(R5)
1$:	BR	.KEYIN

DOWN::	INC	OFFS(R5)
	MOV	SCROL(R5),R0
	ADD	OFFS(R5),R0
	CMP	R0,(R5)
	BEQ	1$
	CMP	OFFS(R5),.LIN3
	BNE	2$
	INCB	RDRAW(R5)
	INC	SCROL(R5)
1$:	DEC	OFFS(R5)
2$:	BR	.KEYIN

LEFT:	CMP	OFFS(R5),#LINES
	BGE	1$
	CMP	SCROL(R5),#LINES
	BGE	1$
	TST	SCROL(R5)
	BEQ	2$
	INCB	RDRAW(R5)
	CLR	SCROL(R5)
1$:	SUB	#LINES,OFFS(R5)
	BGE	3$
	ADD	#LINES,OFFS(R5)
	TST	SCROL(R5)
	BEQ	3$
	DECB	RDRAW(R5)
	SUB	#LINES,SCROL(R5)
	BGE	3$
2$:	CLR	OFFS(R5)
3$:	BR	.KEYIN

RIGHT:	CMPB	MODE(R5),#FULL
	BEQ	10$
	CMP	OFFS(R5),.LIN2
	BMI	1$
10$:	MOV	(R5),R0
	SUB	SCROL(R5),R0
	CMP	R0,.LIN3
	BGT	2$
	SUB	OFFS(R5),R0
	DEC	R0
	ADD	R0,OFFS(R5)
	BR	4$
1$:	ADD	#LINES,OFFS(R5)
	CMP	OFFS(R5),.LIN3
	BMI	3$
	SUB	#LINES,OFFS(R5)
2$:	INCB	RDRAW(R5)
	ADD	#LINES,SCROL(R5)
	MOV	(R5),R0
	SUB	SCROL(R5),R0
	SUB	.LIN3,R0
	BGE	3$
	ADD	R0,SCROL(R5)
	BR	4$
3$:	MOV	SCROL(R5),R0
	ADD	OFFS(R5),R0
	INC	R0
	CMP	R0,(R5)
	BMI	4$
	SUB	(R5),R0
	SUB	R0,OFFS(R5)
4$:
.KEYIN:	JMP	KEYIN

S.O::
CTRLO	==	. + 2
	COMB	#0
	BEQ	2$

	CLR	R0
3$:	TST	MODE(R5)
	BMI	4$
	INC	R0
4$:	ADD	-(R5),R5
	COMB	#0
	BNE	3$
	TST	R0
	BNE	5$
	CLRB	CTRLO
	BIC	#ONOFF,MODE(R5)
	INCB	RREAD(R5)
	BR	SHIFT

5$:	CALL	W01
1$:	MOV	MODE(R5),R0
	MOV	R0,R1
	ASR	R0
	BIC	#^CSAVED,R0
	BIC	#SAVED,R1
	BIS	R0,R1
	BIS	#ONOFF,R1
	MOV	R1,MODE(R5)
	ADD	-(R5),R5
	COMB	#0
	BNE	1$
	BR	SHIFT

2$:	MOV	MODE(R5),R0
	MOV	R0,R1
	ASL	R0
	BIC	#^CONOFF,R0
	BIC	#ONOFF,R1
	BIS	R0,R1
	MOV	R1,MODE(R5)
	INCB	RREAD(R5)
	ADD	-(R5),R5
	COMB	#0
	BNE	2$
	BR	SHIFT
S.L::	MOV	R5,R1
	ADD	-(R1),R1
	MOV	#INFO,R0
	XOR	R0,MODE(R1) 
	BIC	#ONOFF,MODE(R1)
	INCB	RREAD(R1)
	BR	SHIFT
S.R:	INCB	RREAD(R5)
	BR	SHIFT

S.RR:	NOP
	.WMZ
	CLR	R1
	SOB	R1,.
	SOB	R1,.
	SOB	R1,.
	.WMZ

	CALL	NEXTKEY
	CMPB	R1,#300
	BLO	SET$WAIT
CLR$WAIT:
	MOV	#400+<<SET$WAIT-<S.RR+2>>/2>,S.RR
	BR	.RR
SET$WAIT:
	MOV	#240,S.RR
.RR:
	ADD	#^RMZ0-300,R0
1$:	MOV	MODE(R5),R1
	BMI	3$
	MOV	R5,R4
	TSTB	R1
	BPL	2$
	ADD	-(R4),R4
2$:	CMP	R0,@DEV(R4)
	BNE	3$	
	INCB	RREAD(R5)
3$:	ADD	-(R5),R5
	COM	#0
	BNE	1$
	BR	SHIFT

S.P::	MOV	R5,R1
	ADD	-(R1),R1
	BR	CONOFF
S..F1:	MOV	#$0,R1
	BR	CONOFF
S..F2:	MOV	#$1,R1
CONOFF:	MOV	#ONOFF,R0
	XOR	R0,MODE(R1)
	ADD	#401,RREAD(R1)
	CLRB	CTRLO
SHIFT:	JMP	ENTRY

$DONE::	.DIALOG	#D.QUIT
	DEC	R1
	BEQ	1$
	CALL	L.GOTO
	JMP	KEYIN

1$:	CALL	OFF.HND
	BCS	DONE
	BR	CMD

PCENTER::
	TST	LEN
	BNE	STENTER
	CALL	EXENTER
	BCC	STENTER
	JMP	KEYIN

STENTER::
	CALL	L.PRI
	CALL	L.GOTO
	CALL	SL.PUT
	MOV	#LINE,R1
	MOV	#512,R0
1$:	CMPB	@R1,#'\
	BEQ	2$
	CMPB	@R1,#'-
	BNE	3$
2$:	MOVB	#15,(R0)+
	MOVB	#12,@R1
3$:	MOVB	(R1)+,(R0)+
	BNE	1$
	SUB	#512,R0
	MOV	R0,@#510
	CALL	PUT.HND
CMD:	BIS	#CHNIF$,@#JSW

DONE:	CALL	W01
	.WCLR	#WIDTH-5,#0,#5
	CALL	CLRBAR
	CALL	PP$UNL
EXIT:
	MOV	#<CLR$END-CLR$BEGIN>/2,R0
	MOV	#CLR$END,R1
	MOV	@#USERTOP,R2
1$:	MOV	-(R1),-(R2)
	SOB	R0,1$
	JMP	@R1

CLR$BEGIN:
	MOV	#1000,R2
	SUB	R2,R1
	CLC
	ROR	R1
1$:	CLR	(R2)+
	SOB	R1,1$
	.EXIT
CLR$END:

SETTO::	CALL	OFF.HND
	BCS	EXIT
	BIS	#CHNIF$,@#JSW
	BR	EXIT

W01:
	TST	$0+MODE
	BPL	1$
	TST	$1+MODE
	BPL	2$
	BR	4$

1$:	TST	$1+MODE
	BPL	3$
	.W0
	BR	4$
2$:	.W1
	BR	4$
3$:	.W01
4$:	RETURN

REREAD:
	CALL	GSCROFF
	TST	MODE(R5)
	BMI	1$

	MOV	@DEV(R5),R0
	CALL	CNVDEV
	MOV	R0,@DEV(R5)
	MOV	DEVA(R5),R1
	CALL	RAD
	CALL	CORRMODE

	TSTB	RREAD(R5)
	BEQ	1$

	TSTB	MODE(R5)
	BMI	2$
	CALL	BORDER
6$:	CALL	GSEL
	CALL	GETDIR
	MFPS	-(SP)
	CALL	SSEL
	MTPS	(SP)+
	BCC	3$
	CLR	RREAD(R5)
	CALL	SORT
	CALL	SSCROFF
	MOV	#T.F3,R1
	CALL	DEVTR1
	.DIALOG	#D.EREAD
	DEC	R1
	BEQ	6$
	DEC	R1
	BNE	4$
	TST	(SP)+
	JMP	DEVICE

1$:	TSTB	RDRAW(R5)
	BEQ	5$

	TST	MODE(R5)
	BPL	2$
	CALL	CLRPAN
	BR	5$

2$:	CALL	BORDER
	TSTB	MODE(R5)
	BMI	4$
	TSTB	RDRAW(R5)
	BMI	3$
	TSTB	RREAD(R5)
	BEQ	7$
3$:	CALL	SORT
7$:	CALL	SSCROFF
4$:	CALL	DUMP
5$:	CLR	RREAD(R5)
	RETURN

CORRMODE:
	MOV	R5,R4
	TSTB	MODE(R5)
	BPL	1$
	ADD	-(R4),R4

1$:	MOV	DEVA(R4),R1
	MOV	#PROMPT,R2
	MOV	#3,R0
2$:	MOVB	(R1)+,(R2)+
	SOB	R0,2$

	MOV	@DEV(R4),R0
	CALL	ASSDK

	CMPB	MODE(R4),#BRIEF
	BEQ	3$
	MOV	#LINES,.LIN2
	MOV	#LINES,.LIN3
	RETURN

3$:	MOV	#LINES*2,(PC)+
.LIN2:	.WORD
	MOV	#LINES*3,(PC)+
.LIN3::	.WORD
	RETURN

CURSOR::
	MOV	R5,-(SP)
	MOV	O.R5,R5
	BEQ	.RET
	TST	(R5)
	BEQ	.RET
	BIT	#INFO!ONOFF,MODE(R5)
	BNE	.RET
	MOV	O.OFFS,R1
	CMPB	MODE(R5),#FULL
	BEQ	1$

	CLR	R0
	DIV	#LINES,R0
	MOV	R0,R3
	MUL	#13.,R3
	INC	R3
	INC	R1
	INC	R1
	ADD	BAX(R5),R3
	.WSWAB	R3,R1,#12.
	BR	.RET

1$:	MOV	#1,R3
	ADD	BAX(R5),R3
	INC	R1
	INC	R1
	.WSWAB	R3,R1,#38.
.RET:	MOV	(SP)+,R5
	RETURN

CLRPAN:
	TST	BAX(R5)
	BNE	1$
	.W0
	RETURN
1$:	.W1
	RETURN

BORDER:	.WATTR	#^B0110
	MOV	DEVA(R5),R1
	MOV	#BRDAB,R2
	MOV	#BRDAF,R3
	MOV	#3,R0
1$:	MOVB	(R1),(R2)+
	MOVB	(R1)+,(R3)+
	SOB	R0,1$

	MOV	BAX(R5),R1
	CLR	R2

	MOVB	MODE(R5),R3
	BMI	.INFO
	CMP	R3,#BRIEF
	BNE	.FULL
	JMP	.BRIEF

.FULL:	.WPUT	#BRD1F,R1,R2,#WIDTH2
	INC	R2

	MOV	#1+LINES,R0
1$:	.WPUT	#BRD2F,R1,R2,#WIDTH2
	INC	R2
	SOB	R0,1$

	.WPUT	#BRD3F,R1,R2,#WIDTH2
	INC	R2
	.WPUT	#BRD4F,R1,R2,#WIDTH2
	INC	R2
	.WPUT	#BRD5,R1,R2,#WIDTH2
	MOV	#1,R2
	ADD	#5,R1
	.WATTR	#^B0111
2$:	.WPUT	#T.NAME,R1,R2,#4
	ADD	#10.,R1
	.WPUT	#T.SIZE,R1,R2,#4.
	ADD	#9.,R1
	.WPUT	#T.DATE,R1,R2,#4.
	ADD	#9.,R1
	.WPUT	#T.DBLK,R1,R2,#5.
	BR	.BRD

.INFO:	MOV	#BRDI,R3
	MOV	#5,R0
1$:	.WPUT	R3,R1,R2,#WIDTH2
	INC	R2
	ADD	#WIDTH2,R3
	SOB	R0,1$
	MOV	#LINES-1,R0
2$:	.WPUT	#BRD4,R1,R2,#WIDTH2
	INC	R2
	SOB	R0,2$
	.WPUT	#BRD5,R1,R2,#WIDTH2
	BR	.BRD

.BRIEF:	.WPUT	#BRD1B,R1,R2,#WIDTH2
	INC	R2

	MOV	#1+LINES,R0
1$:	.WPUT	#BRD2,R1,R2,#WIDTH2
	INC	R2
	SOB	R0,1$

	.WPUT	#BRD3,R1,R2,#WIDTH2
	INC	R2
	.WPUT	#BRD4,R1,R2,#WIDTH2
	INC	R2
	.WPUT	#BRD5,R1,R2,#WIDTH2
	.WATTR	#^B0111
	MOV	#1,R2
	MOV	#3,R0
	ADD	#5,R1
2$:	.WPUT	#T.NAME,R1,R2,#4.
	ADD	#13.,R1
	SOB	R0,2$

.BRD:	CMP	R5,$PANEL
	BNE	RET

INVCAP:	TST	MODE(R5)
	BMI	RET
	MOV	#12.+6,R0
	ADD	BAX(R5),R0
	TSTB	MODE(R5)
	BMI	1$
	.WINV	R0,#0,#5
	BR	RET

1$:	DEC	R0
	.WINV	R0,#0,#6
RET:	RETURN

DUMP:	CMP	O.R5,R5
	BNE	1$
	CLR	O.R5
1$:	TSTB	MODE(R5)
	BMI	10$
	JMP	NINFO

10$:	.WATTR	#^B0110
	MOV	#5.,R2
	ADD	BAX(R5),R2
	ADD	-(R5),R5
	MOV	#5.,R4
	MOV	#T.INFO,R0
	MOV	#15.,R3

	.WPUT	R0,R2,R4,R3
	ADD	R3,R0
	ADD	#3,R4

	MOV	#3,R1
2$:	.WPUT	R0,R2,R4,R3
	INC	R4
	ADD	R3,R0
	SOB	R1,2$
	INC	R4
	INC	R4

3$:	.WPUT	R0,R2,R4,R3
	INC	R4
	ADD	R3,R0
	COMB	#0
	BNE	3$
	INC	R4

	MOV	#3,R1
4$:	.WPUT	R0,R2,R4,R3
	INC	R4
	ADD	R3,R0
	SOB	R1,4$
	INC	R4

	.WPUT	R0,R2,R4,R3

	.WATTR	#^B0111
	MOV	#5.,R4
	MOV	#VOLLEN,R3
	ADD	#15.+1.,R2
	.WPUT	DEVA(R5),R2,R4,#3
	ADD	#3,R4

	.PURGE	#0
	.LOOKU	#AREA,#0,DEV(R5)
	BCS	6$
	MOV	#BUFF,R1
	.READW	#AREA,#0,R1,#400,#1
	BCS	6$

	MOV	R1,R0
	ADD	#730,R0
	MOV	R4,-(SP)
	MOV	#3,R1
5$:	.WPUT	R0,R2,R4,R3
	INC	R4
	ADD	R3,R0
	SOB	R1,5$
	MOV	(SP)+,R4

6$:	ADD	#5,R4

	MOV	@R5,R0
 	MOV	#NUM+2,R1
	MOV	#3,R3
	CALL	.10
	.WPUT	R0,R2,R4,R3
	INC	R4

	MOV	USED(R5),R0
 	MOV	#NUM,R1
	MOV	#5,R3
	CALL	.10
	.WPUT	R0,R2,R4,R3
	ADD	#2,R4

	MOV	HOLES(R5),R0
 	MOV	#NUM+2,R1
	MOV	#3,R3
	CALL	.10
	.WPUT	R0,R2,R4,R3
	INC	R4

	MOV	LHOLE(R5),R0
 	MOV	#NUM,R1
	MOV	#5,R3
	CALL	.10
	.WPUT	R0,R2,R4,R3
	INC	R4

	MOV	TOTAL(R5),R0
	SUB	USED(R5),R0
 	MOV	#NUM,R1
	MOV	#5,R3
	CALL	.10
	.WPUT	R0,R2,R4,R3
	ADD	#2,R4

	MOV	TOTAL(R5),R0
	CALL	.10
	.WPUT	R0,R2,R4,R3
	ADD	-(R5),R5
	RETURN

NINFO:	TST	(R5)
	BNE	1$
	RETURN

1$:	MOV	SCROL(R5),R2
	ASL	R2
	ADD	PTRS(R5),R2

	MOV	(R5),R4
	SUB	SCROL(R5),R4
	CMP	R4,.LIN3
	BLT	2$
	MOV	.LIN3,R4

2$:	MOV	#2,R0
	ADD	BAX(R5),R0

	CMPB	MODE(R5),#FULL
	BNE	NFULL

	MOV	#2,R3
3$:	MOV	R2,-(SP)
	MOV	(R2),R2
	CALL	UNPACK
	MOV	#MINI,R1
	.WATTR	#^B0110
	BIT	#1,(R2)
	BEQ	4$
	.WATTR	#^B0111
4$:	CALL	FPUT
	INC	R3
	MOV	(SP)+,R2
	TST	(R2)+
	SOB	R4,3$

	BR	MINIST
NFULL:
	CMPB	MODE(R5),#BRIEF
	BNE	NBRIEF

1$:	MOV	#2,R3
2$:	MOV	R2,-(SP)
	MOV	(R2),R2
	CALL	.UNPACK
	.WATTR	#^B0110
	BIT	#1,(R2)
	BEQ	3$
	.WATTR	#^B0111
3$:	.WPUT	#MINI,R0,R3,#10.
	MOV	(SP)+,R2
	TST	(R2)+
	INC	R3
	CMP	R3,#2+LINES
	BNE	4$
	MOV	#2,R3
	ADD	#13.,R0
4$:	SOB	R4,2$
	BR	MINIST

NBRIEF:	RETURN

MINIST:	BIT	#INFO!ONOFF,MODE(R5)
	BNE	NBRIEF
	TST	(R5)
	BEQ	NBRIEF
	CALL	DEFSEL
	TST	R2
	BEQ	2$

	MOV	R4,R0
	MOV	#BLOC,R1
	MOV	#5.,R3
	CALL	.10

	MOV	BAX(R5),R4
	TST	(R4)+
	.WATTR	#^B0111
	.WCCLR	R4,#1+LINES+2,#3.
	ADD	#3.,R4
	.WPUT	R1,R4,#1+LINES+2,R3
	ADD	#5.,R4
	.WATTR	#^B0110

 	.WPUT	#T.BLIN,R4,#1+LINES+2,#1+9.+1
	ADD	#11.,R4

;   12345 blocks in 123 files
; 012345678901234567890123456789

	MOV	R2,R0
	MOV	#3.,R3
	CALL	.10
	.WATTR	#^B0111
	.WPUT	R1,R4,#1+LINES+2,R3
	ADD	R3,R4
	.WATTR	#^B0110

	.WPUT	#T.FS,R4,#1+LINES+2,#1+5.+8.
	BR	..RET

2$:	MOV	SCROL(R5),R2
	ADD	OFFS(R5),R2
	ASL	R2
	ADD	PTRS(R5),R2
	MOV	(R2),R2
	CALL	UNPACK
	CALL	PRPACK
	MOV	#MINI,R1
	MOV	#2,R0
	ADD	BAX(R5),R0
	MOV	#1+LINES+2,R3
	.WATTR	#^B0110
	CALL	FPUT
	ADD	#10.,R0
	.WCCLR	R0,R3,#2.
	ADD	#2.+5.,R0
	.WCCLR	R0,R3,#3.
	ADD	#3.+9.,R0
	.WCCLR	R0,R3,#2.
..RET:	RETURN

UPACK::	MOV	SCROL(R5),R2
	ADD	OFFS(R5),R2
	ASL	R2
	ADD	PTRS(R5),R2
	MOV	(R2),R2
	CALL	.UNPACK
	RETURN

FPUT::	MOV	R0,-(SP)
	.WPUT	R1,R0,R3,#10.
	ADD	#10.,R1
	ADD	#10.+2.,R0
	.WPUT	R1,R0,R3,#5.
	ADD	#5.,R1
	ADD	#5.+3.,R0
	.WPUT	R1,R0,R3,#9.
	ADD	#9.,R1
	ADD	#9.+2.,R0
	.WPUT	R1,R0,R3,#5.
	MOV	(SP)+,R0
	RETURN

CLRBAR:	.WCLR	#0,#23.,#WIDTH
	RETURN

.MACRO	.EXT	CHAR,N
	.REPT	N
		.BYTE	200!CHAR
	.ENDR
.ENDM

BRD1B::	.EXT	50,1
	.EXT	72,12.
	.EXT	70,1
	.EXT	72,4.
	.BYTE	40
BRDAB:	.ASCII	"XX0"
	.BYTE	40
	.EXT	72,3.
	.EXT	70,1
	.EXT	72,12.
	.EXT	77,1

BRD1F:	.EXT	50,1
	.EXT	72,12.
	.EXT	70,1
	.EXT	72,4.
	.BYTE	40
BRDAF:	.ASCII	"XX0"
	.BYTE	40
	.EXT	72,9.
	.EXT	70,1
	.EXT	72,6.
	.EXT	77,1

BRD2F:	.EXT	44,1
	.ASCII	"            "
	.EXT	67,1
	.ASCII	"      "
	.EXT	67,1
	.ASCII	"           "
	.EXT	67,1
	.ASCII	"      "
	.EXT	44,1

BRD3F:	.EXT	42,1
	.EXT	65,12.
	.EXT	41,1
	.EXT	65,6.
	.EXT	41,1
	.EXT	65,11.
	.EXT	41,1
	.EXT	65,6.
	.EXT	40,1

BRD4F:	.EXT	44,1
	.ASCII	"                                      "
	.EXT	44,1

BRD2:	.EXT	44,1
	.ASCII	"            "
	.EXT	67,1
	.ASCII	"            "
	.EXT	67,1
	.ASCII	"            "
	.EXT	44,1

BRD3:	.EXT	42,1
	.EXT	65,12.
	.EXT	41,1
	.EXT	65,12.
	.EXT	41,1
	.EXT	65,12.
	.EXT	40,1

BRD4:	.EXT	44,1
	.ASCII	"                                      "
	.EXT	44,1

BRD5:	.EXT	66,1
	.EXT	72,38.
	.EXT	74,1

PROMPT::.ASCII	"XX0>"
MSTRLEN	==	WIDTH-4-1
LINE::	.BLKB	MSTRLEN+1

D0A:	.ASCII	"XX0"
D1A:	.ASCII	"XX0"

T.NAME:	.ASCII	"Name"
T.SIZE:	.ASCII	"Size"
T.DATE:	.ASCII	"Date"
T.DBLK:	.ASCII	"Block"

T.INFO:	.ASCII	"       Device :"
	.ASCII	"    Volume ID :"
	.ASCII	"        Owner :"
	.ASCII	"       System :"
	.ASCII	"        Files :"
	.ASCII	"  Used blocks :"
	.ASCII	"        Holes :"
	.ASCII	" Largest hole :"
	.ASCII	"Unused blocks :"
	.ASCII	" Total blocks :"

T.BLIN:	.ASCII	" blocks in "
T.FS:	.ASCII	" files        "

BLOC:	.ASCII	"     "
		;123454321
NUM:	.ASCII	"         "

	.EVEN

O.R5::		.WORD
O.SCRO::	.WORD
O.OFFS::	.WORD

$PANEL::	.WORD	$0

D0:	.RAD50	"DK          "
D1:	.RAD50	"SY          "

.MACRO	.ENUM	LABEL SIZE
		LABEL	== 	..
	.IF B <SIZE>
		..	==	.. + 2
	.IFF
		..	==	.. + <SIZE>
	.ENDC
.ENDM

.. == 2
.ENUM	HOLES
.ENUM	TOTAL
.ENUM	LHOLE
.ENUM	USED
.ENUM	SCROL
.ENUM	OFFS
.ENUM	SEL
.ENUM	PTRS
.ENUM	DIR
.ENUM	LDEV
.ENUM	LSODEV
.ENUM	DEV
.ENUM	DEVA
.ENUM	MODE
.ENUM	TSORT
.ENUM	BAX
.ENUM	RREAD,1
.ENUM	RDRAW,1
.ENUM	START
.ENUM	RECSIZ,0

	.WORD	$1-.
$0::	.WORD	0	; FILES
	.WORD	0	; HOLES
	.WORD	0	; TOTAL
	.WORD	0	; L/ARGEST/HOLE
	.WORD	0	; USED
	.WORD	0	; SCROL
	.WORD	0	; OFFS
	.WORD	$0SEL	; SEL
	.WORD	$0PTRS	; PTRS
	.WORD	$0DIR	; DIR
	.WORD	0	; L/AST/DEV
	.WORD	0	; L/AST/S/CROL/O/FFS/DEV
	.WORD	D0	; DEV
	.WORD	D0A	; DEVA/SCII/
	.WORD	BRIEF	; MODE
	.WORD	0	; TSORT
	.WORD	0	; BAX
	.BYTE	1	; REREAD
	.BYTE	0	; REDRAW
	.WORD	1	; START

	.WORD	$0-.
$1::	.WORD	0
	.WORD	0
	.WORD	0
	.WORD	0
	.WORD	0
	.WORD	0
	.WORD	0
	.WORD	$1SEL
	.WORD	$1PTRS
	.WORD	$1DIR
	.WORD	0
	.WORD	0
	.WORD	D1
	.WORD	D1A
	.WORD	BRIEF
	.WORD	0
	.WORD	WIDTH2
	.BYTE	1
	.BYTE	0
	.WORD	1

AREA::	.BLKW	6
ADDR::	.BLKW	6

..	==	.

BEGDAT	=	..

.ENUM	$0PTRS	2*MAXFIL
.ENUM	$1PTRS	2*MAXFIL

.ENUM	$0DIR	ENTSIZ*MAXFIL
.ENUM	$1DIR	ENTSIZ*MAXFIL

.ENUM	$0SEL	<<3+1+<3*MAXFIL>>*2>
.ENUM	$1SEL	<<3+1+<3*MAXFIL>>*2>

ENDDAT	=	..

.ENUM	BUFF	2000

EXLEN	==	10.+2.
EXMSL	==	80.-6.

.ENUM	EXTAB	EXLEN*<2+EXMSL>

PACK	==	..
.ENUM	P0
.ENUM	P1
.ENUM	P2
.ENUM	P3
.ENUM	STR	WIDTH

.ENUM	KB$BUF	KB$SIZ

.ENUM	SWORDS
.ENUM	SBLOCKS
.ENUM	TOP

...	==	.. + <<16.-3> * 1000>

T.MEM::		.ASCII	"There is not enough memory"
T.DH::		.ASCII	" in "
T.CPPP::	.ASCII	"CP RAM. Aborting... "<200>
T.TLDH::	.ASCIZ	"to load device driver"
		.EVEN

	.END	PCSTART
                                                                                                                                                               