; THE TURBO TEXT EDITOR
; FOR TURBO BASIC IDE
; WRITTEN BY GERASIMOV OLEG (C) 1995

.INCLUD /IDE.MLB/
        Define
        .RelDef E




.PSECT  SYSTEM

$EWP::  MOVB    #377,C.IDEN
        COLOR   CYAN,BLUE
        MOV     ROL.HD,R1
        ADD     #103460+23.,R1
        MOV     #2630,R0
        MOV     #<11.*21.>,R2
5$:     MOV     R1,(R0)+
        ADD     #81.,R1
        TST     (R0)+
        SOB     R2,5$
        CALL    EDHIDE                          ; ПРОЦЕДУРА РИСОВАНИЯ ОКНА
        LOC     0,1                             ; РЕДАКТОРА
        MOV     #TTBUF,R1                       ; ВЕРХНЯЯ СТРОЧКА
REL     MOV     #UL,R2
        MOV     #5,R3
1$:     MOVB    (R2)+,(R1)+
        SOB     R3,1$
        MOV     #74.,R3
2$:     MOVB    #'═,(R1)+
        SOB     R3,2$
        MOVB    #'╗,(R1)+
        CLRB    (R1)+
REL     MOV     #EFNAM,R0
        PUSH    R0
3$:     TSTB    (R0)+
        BNE     3$
        SUB     (SP),R0
        SUB     #80.,R0
        NEG     R0
        ASR     R0
        ADD     #TTBUF-1,R0
        POP     R2
        MOVB    #40,(R0)+
4$:     MOVB    (R2)+,(R0)+
        BNE     4$
        MOVB    #40,-(R0)
        CALL    $PRTZ
        MOV     #21.,R4
$$C:    MOV     #TTBUF,R1
        MOV     (PC)+,(R1)+
        .BYTE   '║,33
        MOV     (PC)+,(R1)+
        .BYTE   207,204
        CLRB    (R1)+
        CALL    $PRTZ                           ; СРЕДНИЕ СТРОКИ
        SOB     R4,$$C
        LOC     0,22.
        MOV     #TTBUF,R1
        Movb    #'╚,(r1)+
        MOV     #17.,R3
2$:     Movb    #'═,(r1)+
        SOB     R3,2$
        CLRB    (R1)+
        CALL    $PRTZ


        LOC     78.,22.
        MOV     #'─,R0
        EMT     42
        MOV     #'┘,R0
        EMT     42



REL     MOV     #ESLHOR,R5
        CALL    SCRBLP

REL     MOV     #ESLVER,R5
        CALL    SCRBLP


1$:     COLOR   YELLOW,BLUE
        PUSH    ED.Y
        CLR     ED.Y
        CALL    $TOUT                           ; ВЫВЕСТИ ТЕКСТ В ОКНО
        POP     ED.Y
        CALL    EDSHOW

        Loc     0.,23.
        Color   Black,Cyan
REL     MOV     #DL2,R1
        CALL    PR
        CLRB    C.IDEN
        CALL    $LCOP
        RETURN

TsChn1:
        Call    $Push
        Color   Cyan,Blue
        Loc     2.,22.
        Movb    #'*,r0
        Tstb    ChngId
        Bne     1$
        Movb    #'═,r0
1$:     Emt     42
        Call    RstCol
        Call    $Pop
        Return





$EDIT::
        CLR     ED.X                            ; РЕДАКТОР ТЕКСТА
        CLR     ED.Y
        CALL    $CURON
        MOV     #LBUF,LB.PTR
        CALL    $LCOP
$$RS:
$RST:


        MOV     LB.PTR,R0
        SUB     #LBUF,R0
        SUB     ROL.HD,R0
        CMP     R0,#78.
        BLO     2$
        BLT     1$
        MOV     #77.,R0
        BR      3$
1$:     CLR     R0
3$:     MOV     R0,LB.PTR
        ADD     ROL.HD,LB.PTR
        ADD     #LBUF,LB.PTR

2$:
        MOV     R0,ED.X

        CALL    $C.PRT
        Call    TsChn1
REL     MOV     #ESLVER,R5
        MOV     MX.LIN,6(R5)
        SUB     #20.,6(R5)
        CALL    SCRBLM
        COLOR   YELLOW,BLUE

        CALL    $LC.ED
        CLRB    C.MOVE
        EMT     22
        FLUSH
REL     PUSH    #$RST
REL     KEYJMP  #EDJMP

;******************************************************************************
;       Ввод отображаемого символа

$EDS::  Cmpb    R0,#40                  ; Код символа меньше 40
        Blo     1$                      ; Да выход

        Cmpb    R0,#FK1                 ; Проверка на функциональные клавиши
        Blo     3$
        Cmpb    R0,#FK10
        Bhi     3$                      ; Если нажата функциональная клавиша
        Jmp     FKJMP                   ; то переход к обработчику

3$:     Cmp     #10,R5                  ; Проверка ALT-регистра
        Bne     5$                      ; Нет - продолжить
        Jmp     AlJmp                   ; иначе обработчик комбинаций ALT-<буува>

5$:     Cmpb    R0,#'@                  ; Символ буква ?
        Blo     2$
        Bis     RSLT,R0                 ; Если буква - привести к нужному регистру

2$:     Call    $INS                    ; Вставить символ в текст
        Call    $Prtl                   ; Распечаиать конец строки
        Push    ESW                     ; Сохранение ESW.
        Bis     #200,ESW
        Call    $CR.RG                  ; Сдвиг курсора вправо
        Pop     ESW                     ; Восстановить ESW
1$:     Return                          ; Выход из процедуры

;******************************************************************************
;       Переключение русского регистра

$EdRs:: Mov     #200,R0                 ; Доплнение для кода символа
        Br      $101                    ;

;******************************************************************************
;       Переключение латинского регистра

$EdLt:: Clr     R0                      ; Очистить дополнение кода символа

$101:   Cmp     R0,RsLt                 ; Регистр не изменился
        Beq     1$                      ; Да - выход
        Mov     R0,RsLt                 ; Иначе обновить переменные
        Swab    @#7220                  ; Системные переменные
        Swab    @#7222
1$:     Return

;****************** ЗАБОЙ *******************

$EDDL:: IF      LB.PTR = #LBUF THEN 11$
        BIT     #10,ESW
        BEQ     4$
        MOV     LB.PTR,R4
2$:     IF      -(R4) = #40 THEN 2$ (B)
        IF      R4 }= #LBUF THEN 4$
        SUB     LB.PTR,R4
        MOV     R4,$DC+2
        CALL    $DEL
        MOV     #LBUF,LB.PTR
        CLR     ED.X
        BR      5$
4$:     CALL    $DEL
        CALL    $CR.LF
5$:     MOV     LB.PTR,R4
        CALL    $LC.ED
        COLOR   YELLOW,BLUE
        CALL    $PRTL
        JMP     $11

11$:    CALL    $LPALL
        PUSH    R3
        CALL    $CR.UP
        POP     R5
        BCS     10$
        CALL    TSTMXL
        BHIS    10$
        DEC     MX.LIN
        MOV     R3,LB.PTR
        INC     ED.Y
        CALL    $GETLP
        MOV     #177010,R5
        MOV     R0,(R5)

9$:     MOVB    2(R5),(R3)+
        BEQ     7$
        INC     (R5)
        IF      R3 {} #LBUF+400 THEN 9$
7$:     MOVB    #40,-(R3)
        CLR     R2
        CALL    $LPUTN
        DEC     ED.Y
        CALL    $LPALL
        CALL    $TOUT
        CALL    $LCOP
10$:    RETURN

;***************** ВЛЕВО ********************
$EDL::
REL     JMP     @L.REG(R5)

$CR.LF: Cmp     LB.PTR,#LBUF
        Beq     $4
        Dec     LB.PTR
        Dec     ED.X
        Bpl     $11
        Inc     Ed.X
        Dec     ROL.HD
        Call    $GETS
        Call    $RHD
        Br      $11

$CR.LD: IF      LB.PTR } #LBUF THEN $1
$4:     BIT     #200,ESW
        BNE     $11
        CALL    $CR.UP
        Bcs     $11
        MOV     R3,LB.PTR
        BR      $11

$1:     MOV     #LBUF,LB.PTR
        BR      $11


;***************** ВПРАВО *******************
$EDR::
REL     JMP     @R.REG(R5)

$CR.RG: IF      LB.PTR } #LBUF+374 THEN $11
$9:     INC     LB.PTR
        IF      ED.X { #77. THEN $2
        INC     ROL.HD
        CALL    $GETS
        CALL    $RHD
$2:     INC     ED.X
        MOV     LB.PTR,R0
        DEC     R0
$12:    BIT     #200,ESW
        BNE     $11
1$:     IF      (R0)+ = #40 THEN 1$ (B)
        IF      R0 { #LBUF+377 THEN $11
        CALL    $CR.DN
        BCS     $13
        MOV     #LBUF,LB.PTR

$11:    MOV     LB.PTR,MX.PTR
        RETURN

$13:    DEC     LB.PTR
        BR      $11
;************ КОНЕЦ СТРОКИ ***************
$CR.RD: MOV     #LBUF+400,R0
3$:     IF      -(R0) = #40 THEN 3$ (B)
        INC     R0
        CMP     R0,LB.PTR
        BNE     2$
        MOV     LB.PTR,R0
        BR      $12
2$:     MOV     R0,LB.PTR
1$:     BR      $11

;************* СЛОВО ВЛЕВО ***************
$CR.LS:
        CMP     LB.PTR,#LBUF
        BEQ     $4
        MOV     LB.PTR,R1
1$:     MOVB    -(R1),R0
        CALL    $BTTST
        BCS     1$
2$:     MOVB    -(R1),R0
        CALL    $BTTST
        BCC     2$
        INC     R1
        MOV     R1,LB.PTR
        BR      $11
;************ СЛОВО ВПРАВО ***************

$CR.RS:
        MOV     LB.PTR,R1
        MOV     R1,R2
1$:     MOVB    (R1)+,R0
        CALL    $BTTST
        BCC     1$
2$:     MOVB    (R1)+,R0
        CALL    $BTTST
        BCS     2$
        DEC     R1
        MOV     R1,LB.PTR
        CMP     R1,#LBUF+376
        BLOS    3$
        BIT     #200,ESW
        BNE     4$
        MOV     #LBUF,MX.PTR
        JMP     $CR.DN
4$:     MOV     R2,LB.PTR
3$:     BR      $11

$Cr.In:
        Mov     #40,r0
        Call    $InAl
        Jmp     $PrtL


$Cr.Dl:
        Inc     Lb.Ptr
        Call    $Del
        Dec     Lb.Ptr
        Dec     r4
        Jmp     $PrtL



;***************** ВВЕРХ ********************
$EDU::
REL     JMP     @U.REG(R5)

$CR.UP: CLR     R5
        CALL    $LPUT
        IF      ED.Y = #0 THEN 1$
        DEC     ED.Y
        BR      $5
1$:     IF      ROL.GD = #0 THEN $99
        COM     R5
REL     MOV     #SL.LEN+19.,R0
        MOV     #19.,R2
2$:     MOVB    -(R0),1(R0)
        SOB     R2,2$
        Mov     #177010,r1
        MOV     SL.PTR,(r1)
        Dec     (r1)
3$:     Dec     (r1)
        Tstb    2(r1)
        Bne     3$
        Inc     (r1)
        Mov     (r1),Sl.Ptr
        DEC     ROL.GD
REL     MOV     #ROLUP,R0
        BR      $5
$99:    SEC
        RETURN
;***************** ВНИЗ *********************
$EDD::
REL     JMP     @D.REG(R5)

$CR.DN: CALL    $LPUT
        CALL    TSTMXL
        BHIS    $99
        CLR     R5
        IF      ED.Y } #18. THEN 1$
        INC     ED.Y
        BR      $5
1$:     COM     R5
REL     MOV     #SL.LEN,R0
        .MOVB   (R0),R1
        ADD     R1,SL.PTR
        MOV     #19.,R1
2$:     MOVB    1(R0),(R0)+
        SOB     R1,2$
        INC     ROL.GD
REL     MOV     #ROLDN,R0

$5:     CALL    $LCOP
        TST     R5
        BEQ     5$
        PUSH    R3
        MOVB    #377,C.MOVE
        CALL    $HLLC
        INC     R3
        MOV     R3,@#22656
        MOV     #79.,@#22674
        Call    StrOut
        CALL    (R0)
        POP     R3
5$:     MOV     ED.Y,R0
        .WORD   110360
REL     .WORD   SL.LEN
        ADD     #LBUF-1,R3
        BIT     #200,ESW
        BNE     4$
        MOV     R3,R2
        IF      R2 { MX.PTR THEN 3$
4$:     MOV     MX.PTR,R2
3$:     MOV     R2,LB.PTR
1$:     CLC
        RETURN



;****************** ВВОД ********************
$EDE::  Cmp     r5,#4
        Beq     $19
        MOV     LB.PTR,R0
        CLR     4$+2
        BIT     #4,ESW
        BEQ     9$
        MOV     #LBUF,R1
3$:     IF      (R1)+ = #40 THEN 3$ (B)
        SUB     #LBUF+1,R1
        CMP     R1,#377
        BLOS    8$
        CLR     R1
8$:     MOV     R1,4$+2
        BEQ     9$
        IF      R1 { ED.X THEN 6$
        SUB     ED.X,R0
        BR      9$
6$:     MOV     #LBUF+400,R2
4$:     MOVB    -(R2),2(R2)
        IF      R2 {} R0 THEN 4$
5$:     MOVB    #40,(R2)+
        SOB     R1,5$
9$:     MOV     R0,R1
1$:     IF      -(R0) = #40 THEN 1$ (B)
        MOV     R0,R2
        SUB     R1,R2
        INC     R0
        MOV     R0,LB.PTR
        CLR     R0
        CALL    $INAL
        MOV     R2,$DC+2
        SUB     R2,LB.PTR
        CALL    $DEL
        CALL    $LPUT
        CALL    $TOUT
        MOV     #LBUF,MX.PTR
        ADD     4$+2,MX.PTR
        ADD     ROL.HD,MX.PTR
        INC     MX.LIN
        CLR     R5
        JMP     $CR.DN

;**************** Ctrl-Enter ****************
$19:
        Call    $Lcop
        Push    Ed.X
        Clr     Ed.X
        Call    $Lc.Ed
        Pop     Ed.X
StrOut: Mov     #79.,R.Put
        Mov     Rol.Hd,r4
        Add     #Lbuf,r4
        Jmp     $PrtL


;**************** Page Down *****************
$PG.DN::
        CALL    $LPUT
        MOV     ROL.GD,R1
        ADD     ED.Y,R1
        ADD     #20.,R1
        BR      $106

;*************** Page Up *******************
$PG.UP:
        CALL    $LPUT
        MOV     ROL.GD,R1
        ADD     ED.Y,R1
        SUB     #20.,R1
        BR      $106

;************ Top of text ******************
$TX.UP::
        CALL    $LPUT
        CLR     R1
        BR      $106
;*********** Bottom of text *****************
$TX.DN:
        CALL    $LPUT
        MOV     MX.LIN,R1
        MOV     #19.,ED.Y
$106:   CALL    LCLNUM
        CALL    $LCOP
        RETURN



;*************** Search up ******************
$SR.UP:
        MOV     #1,FSW1
$104:   CALL    $CUROF
        MOV     #2,FSW3
        CALL    $LPUT
        CALL    $SRC
        CALL    $CURON
        CALL    $LCOP
        RETURN
;************* Search down ******************
$SR.DN:
        CLR     FSW1
        BR      $104



;**************** INSERT *******************
$EDI:   MOV     #2,R0
        XOR     R0,ESW
        RETURN
;*************** Ctrl-Y ********************
$EDCY:: CALL    TSTMXL
        BHIS    $88
        DEC     MX.LIN
        CLR     R2
        CALL    $LPUTN
$6:     CALL    $TOUT
        CALL    $LCOP
$88:    RETURN
;*************** Ctrl-N ********************
$EDCN:: PUSH    LB.PTR
        MOV     #LBUF,LB.PTR
        CLR     R0
        CALL    $INAL
        POP     LB.PTR
        CALL    $LPALL
        INC     MX.LIN
        BR      $6
;*************** Ctrl-W ********************
$EDCW:: CALL    $LPUT
        CALL    F81
        CALL    $LCOP
        RETURN
;***************** F10 *********************

$INS:   BIT     #2,ESW
        BEQ     $$N
        BIT     #400,ESW
        BEQ     $INAL
        IF      @LB.PTR = #40 THEN $$N (B)
$INAL:  MOV     #1400,R5
        MOV     R5,R4
        SUB     LB.PTR,R4
2$:     MOVB    -(R5),1(R5)
        SOB     R4,2$
$$N:    MOVB    R0,@LB.PTR
$$P:    MOV     LB.PTR,R4
        MOVB    #377,EDFLG
        RETURN

$DEL:   MOV     LB.PTR,R5
$DC:    MOVB    (R5)+,-2(R5)
        IF      R5 { #LBUF+401 THEN $DC
        ADD     $DC+2,R5
1$:     MOVB    #40,(R5)+
        IF      R5 { #LBUF+400 THEN 1$
        MOV     #-2,$DC+2
        BR      $$P

TSTMXL: MOV     ED.Y,R0
        ADD     ROL.GD,R0
        CMP     R0,MX.LIN
        RETURN



$LC.ED::
        Push    Ed.X
        Inc     (Sp)
        Push    Ed.Y
        Add     #2,(Sp)

        Call    $Locat
        Return



$GETS:  MOV     #177010,R4
        MOV     LB.PTR,-(SP)
        SUB     #LBUF,(SP)
        MOV     SL.PTR,(R4)
        MOV     @#2626,R1
        SUB     #2630,R1
        CLR     R0
        DIV     #44.,R0
        MOV     R0,R1
REL     MOV     #XSIM,R3
        ADD     R3,R1
        ADD     #21.,R3
REL     MOV     #SL.LEN,R5
        MOV     #20.,6$
        MOV     #20.,R0
        SUB     ED.Y,R0
9$:     .MOVB   (R5)+,R2
        IF      (SP) { R2 THEN 4$
        MOVB    #40,(R1)+
        BR      1$
4$:     ADD     (SP),(R4)
        MOVB    2(R4),(R1)+
        SUB     (SP),(R4)
1$:     ADD     R2,(R4)
        CMP     6$,R0
        BNE     11$
        MOVB    @LB.PTR,-1(R1)
11$:    CMP     R1,R3
        BNE     7$
        SUB     #21.,R1
7$:     DEC     (PC)+
6$:     .WORD   20.
        BNE     9$
        CLRB    (R1)+
        TST     (SP)+
        RETURN

$RHD::  CALL    $PUSH                           ; ЛЕВЫЙ/ПРАВЫЙ РУЛОН
        MOVB    #377,C.MOVE
        MOV     ROL.HD,R1
        MOV     #177010,R5
        MOV     #177014,R4
        MOV     #YELLOW,2(R4)
        SUB     #6,SP
        MOV     #2630,R0
        ADD     #103460+23.,R1
        IF      (R0) = R1 THEN $$REX
REL     MOV     #XSIM,R3
        MOV     #78.,8$
        SUB     ED.X,8$
        MOV     #21.,9$
2$:     MOV     #11.,R2
        MOVB    (R3)+,(SP)
        MOV     R3,4(SP)
        .MOVB   (SP),R3
        ASL     R3
        MOV     14142(R3),R3
1$:     MOV     (R0),(R5)
        MOV     (R4),(SP)
        ADD     #79.,(R5)
        MOV     (R4),2(SP)
        MOV     R1,(R0)+
        MOV     R1,(R5)
        MOV     (SP),(R4)
        ADD     #79.,(R5)
        MOV     2(SP),(R4)
8$=.+2
        SUB     #0,(R5)
        MOVB    (R3)+,(SP)
        MOV     (SP),10(R4)
        ADD     #81.,R1
        TST     (R0)+
        SOB     R2,1$
        MOV     4(SP),R3
9$=.+2
        DEC     #0
        BNE     2$
$$REX:  ADD     #6,SP
REL     MOV     #ESLHOR,R5
        CALL    SCRBLM


        CALL    $POP
        Return

ROLDN::
        CALL    $PUSH
        LOC     79.,21.
        MOV     #201,R0
        CALL    TWait
        CALL    B$HIDE
        MOV     @#2626,R0
        ADD     #1560,R0
        CMP     R0,#4464
        BCS     2$
        BHI     1$
        MOV     #2630,@#4462
        BR      3$
1$:     SUB     #1634,R0
2$:     MOV     R0,-2(R0)
3$:     ADD     #54,R0
        CMP     R0,#4464
        BLOS    4$
        SUB     #1634,R0
4$:     MOV     #4464,-(R0)
        MOV     @#2626,R0
        ADD     #54,R0
        CMP     R0,#4464
        BCS     5$
        SUB     #1634,R0
5$:     MOV     R0,@#2626
        MOV     #200,R0
        LOC     79.,2.
        CALL    EMT42
$110:   MOV     #206,R0
        CALL    $111
        CALL    RSTCOL

        CALL    $POP
        RETURN

ROLUP::
        CALL    $PUSH
        LOC     79.,2.
        MOV     #200,R0
        CALL    TWait
        CALL    B$HIDE
        MOV     @#2626,R0
        ADD     #1560,R0
        CMP     R0,#4464
        BCS     2$
        BHI     1$
        MOV     #2630,@#4462
        BR      3$
1$:     SUB     #1634,R0
2$:     MOV     R0,-2(R0)
3$:     SUB     #54,R0
        CMP     R0,#2630
        BHI     4$
        ADD     #1634,R0
4$:     MOV     #4464,-(R0)
        MOV     @#2626,R0
        SUB     #54,R0
        CMP     R0,#2630
        BCC     5$
        ADD     #1634,R0
5$:     MOV     R0,@#2626
        MOV     #201,R0
        LOC     79.,21.
        CALL    EMT42
        BR      $110









B$HIDE:
        Call    $CHide
        PUSH    R0
        COLOR   BLUE,CYAN
        MOV     #204,R0
        CALL    EMT42
        CALL    $HLLC
        ADD     #79.,R3
        MOV     R3,@#22656
        POP     R0
        CALL    EMT42


        MOV     #204,R0
$111:
        PUSH    #79.
        MOV     ESLVER+10,-(SP)
        ADD     #3.,(SP)
        CMPB    (SP),#20.
        BLOS    1$
        MOVB    #20.,(SP)
1$:     CALL    $LOCAT
        CALL    EMT42
        RETURN



EDHIDE::MOV     PLG2,R0
        ASL     R0
REL     MOV     COLRS(R0),R0
        MOV     R0,@#EDXPL
        MOV     R0,@#EDXPL+2
        RETURN

EDSHOW::MOV     @#2470,@#EDXPL
        MOV     @#2472,@#EDXPL+2
        RETURN


$TOUT::                                 ; ВЫВОД ТЕКСТА ИЗ ПАМЯТИ НА ЭКРАН
REL     MOV     #SL.LEN,R1
        ADD     ED.Y,R1
        MOVB    #377,(R1)
        CLR     ED.X
        PUSH    ED.Y
        MOVB    #377,C.IDEN
        MOV     #LBUF,R4
        ADD     ROL.HD,R4


3$:     .MOVB   (R1),R3
        SUB     ROL.HD,R3
        DEC     R3
        MOV     R3,R.PUT
        CALL    $LCOP
        MOVB    R3,(R1)+
        CALL    $LC.ED
        CALL    $PRTL
        INC     ED.Y
        IF      ED.Y { #20. THEN 3$
        POP     ED.Y
        CLRB    C.IDEN
        RETURN

$LCOP:  PUSH    <R0,R4,R5,R1>                   ; КОПИРОВАНИЕ СТРОКИ ИЗ ПАМЯТИ
        CLRB    EDFLG
        CALL    $GETLP
        MOV     #177010,R4                      ; В БУФРЕР РЕДАКТОРА
        MOV     #177012,R5
        MOV     R0,(R4)
        MOV     #LBUF,R3
        MOV     #400,R1
2$:     MOVB    (R5),(R3)+
        BEQ     3$
7$:     INC     (R4)
        SOB     R1,2$
3$:     MOV     #40,R0
        MOVB    R0,-1(R3)
        PUSH    R3
        MOV     #LBUF+400,R1
        SUB     R3,R1
        BEQ     4$
1$:     MOVB    R0,(R3)+
        SOB     R1,1$
4$:     POP     R3
        SUB     #LBUF,R3
        INC     (R4)
        POP     <R1,R5,R4,R0>
        RETURN


$GETLP::
REL     MOV     #SL.LEN,R1
        MOV     SL.PTR,R0
        MOV     ED.Y,R4
        BEQ     1$
2$:     .MOVB   (R1)+,R5
        ADD     R5,R0
        SOB     R4,2$
1$:     RETURN

$LPUT:  IF      EDFLG {} #0 THEN $LPALL (B)
        RETURN
$LPALL: MOV     #-1,R2
$LPUTN: CLRB    EDFLG
        CALL    $PUSH

        MOV     ED.Y,R0
REL     MOVB    SL.LEN(R0),-(SP)
        IF      R2 }= #0 THEN 8$
        MOV     #LBUF+400,R2
9$:     IF      -(R2) = #40 THEN 9$ (B)
        SUB     #LBUF-2,R2
8$:     .WORD   110260
REL     .WORD   SL.LEN
        .MOVB   (SP)+,R3
        CALL    $GETLP
        SUB     R2,R3
        BEQ     30$
        MOV     #177010,R5
        MOV     #177012,R4
        CALL    PZUOFF
        MOV     R0,R1
        PUSH    R0
        ADD     R2,R1
        MOV     DN.PTR,(R5)
        MOV     (R5),R0
        IF      R3 } #0 THEN 40$
        SUB     R3,R0
        INC     R0
        SUB     R0,R1
        NEG     R1
        INC     R1
        ASR     R1
        BCC     3$

2$:     MOVB    (R4),-(R0)
        DEC     (R5)
3$:     MOVB    (R4),-(R0)
        DEC     (R5)
        SOB     R1,2$
5$:     CALL    PZUON
        POP     R0
        SUB     R3,DN.PTR
30$:    CALL    PZUOFF
        MOV     R0,R5
        TST     R2
        BEQ     32$
        MOV     #LBUF,R1
31$:    MOVB    (R1)+,(R5)+
        SOB     R2,31$
        CLRB    -1(R5)
32$:    CALL    PZUON
        CLRB    EDFLG
        Movb    #377,ChngId
        Call    $Pop
        Return
40$:    MOV     R1,(R5)
        ADD     R3,(R5)
        SUB     (R5),R0
        INC     R0
        ASR     R0
        BCC     42$
41$:    MOVB    (R4),(R1)+
        INC     (R5)
42$:    MOVB    (R4),(R1)+
        INC     (R5)
        SOB     R0,41$
        BR      5$

$PRTL:: Push    r0
        COLOR   YELLOW,BLUE
        Pop     r0
$Prl1:: CALL    $PUSH
        MOV     R4,R1
        MOV     @#22674,R3
        DEC     R3
        ADD     R3,R1
        MOV     R.PUT,R0
        MOV     #78.,R.PUT
        CMP     R0,R3
        BHI     4$
        MOV     #40,R5
3$:     IF      -(R1) = R5 THEN 3$ (B)
        INC     R1
        ADD     R4,R0
        CMP     R1,R0
        BHIS    4$
        MOV     R0,R1
4$:     SUB     R4,R1
        BEQ     9$

        MOV     #177010,R5
        MOV     #177024,R3
        MOV     @#22666,R2
        MOV     @#22656,(R5)
        CLR     -(SP)
5$:     .MOVB   (R4)+,R0
        CMPB    #40,R0
        BNE     1$
        INC     (SP)
        BR      2$
1$:     TST     (SP)
        BEQ     13$
        CALL    10$
13$:    CALL    $$PRS
2$:     SOB     R1,5$
        TST     (SP)
        BEQ     15$
        CALL    10$
15$:    TST     (SP)+
9$:     CALL    $POP
        Return

10$:    PUSH    <R0,R1>
        MOV     #11.,R1

12$:    MOV     6(SP),R0
        PUSH    (R5)
11$:    CLR     (R3)
        INC     (R5)
        SOB     R0,11$
        POP     (R5)
        ADD     R2,(R5)
        SOB     R1,12$
        SUB     #<11.*81.>,(R5)
        ADD     6(SP),(R5)
        POP     <R1,R0>
        CLR     2(SP)
        RETURN

$$PRS:
        ASL     R0
        MOV     14142(R0),R0
        PUSH    R1
        .REPT   11.
        MOVB    (R0)+,R1
        MOV     R1,(R3)
        ADD     R2,(R5)
        .ENDR
        SUB     #<11.*81.>-1,(R5)
        POP     R1
        RETURN

EMT42::
        PUSH    <R5,R3,R2,R0>
        MOV     #177010,R5
        MOV     #177024,R3
        MOV     @#22656,(R5)
        MOV     @#22666,R2
        CALL    $$PRS
        POP     <R0,R2,R3,R5>
        Return



$HLLC::
        PUSH    R0
        MOV     @#2626,R0
        SUB     #54,R0
        CMP     R0,#2630
        BCC     5$
        ADD     #1634,R0
5$:     MOV     (R0),R3
        POP     R0
        RETURN

$C.PRT::
        COLOR   CYAN,BLUE
        MOVB    #377,C.MOVE
        MOV     #TTBUF+11.,R4
        MOV     #11.,R0
1$:     MOVB    #'═,-(R4)
        SOB     R0,1$
        MOV     R4,@#T1PTR
        CMP     (R4)+,(R4)+
        MOVB    #':,(R4)
        MOV     ED.X,R1
        ADD     ROL.HD,R1
        CALL    $D.CNV
REL     MOV     #DEC.BF+6,R5
2$:     MOVB    -(R5),-(R4)
        CMPB    #40,(R4)
        BNE     2$
        MOV     ED.Y,R1
        ADD     ROL.GD,R1
        CALL    $D.CNV
        MOV     #TTBUF+5,R4
3$:     MOVB    (R5)+,(R4)+
        CMPB    #40,-1(R4)
        BNE     3$
        JSR     R4,$$LC
        .BYTE   22.,4.
        MOV     #TTBUF+11.,R1
        CALL    $$PR
        LOC     76.,0.
REL     MOV     #TLT,R1
        TST     RSLT
        BEQ     4$
        ADD     #TRS-TLT,R1
4$:     COLOR   (R1)+
        CALL    PR
        RETURN

$BTTST::
        PUSH    <R0,R1,R2>
        BIC     #177600,R0
        MOV     R0,R1
        ASH     #-3,R0
        BIC     #177760,R1
        MOV     #1,R2
        BIC     R2,R0
        ASH     R1,R2
        CLC
        .WORD   30260
REL     .WORD   BITMAP
        BNE     1$
        SEC
1$:     POP     <R2,R1,R0>
        RETURN

$FND::                                  ; R1 - АДРЕС
        MOV     FSW3,R0
        DEC     R0
        BMI     1$
        BEQ     2$
        CALL    $GETLP
        ADD     LB.PTR,R0
        SUB     #LBUF,R0
        BR      4$
1$:     MOV     UP.PTR,R0
        BR      4$
2$:     MOV     DN.PTR,R0
4$:     MOV     R0,@#177010
REL     MOV     #FDBUF+40.,R3
1$:     CMPB    #40,-(R3)
        BEQ     1$


REL     MOV     #FDBUF,R0
        SUB     R0,R3
        BMI     10$
        INC     R3
        CALL    $LCASE
        MOV     #1,R2
        TST     FSW1
        BEQ     5$
        NEG     R2
5$:     MOV     #177012,R5
        MOV     #177010,R4
        ADD     R2,(R4)
4$:     PUSH    <(R4),R0,R3>
3$:     MOV     (R5),R1
        INC     (R4)
        CALL    $CCNV
        CMPB    (R0)+,R1
        BNE     2$
        SOB     R3,3$
        MOV     (R4),R0
6$:     POP     R3
        CMP     (SP)+,(SP)+
        CLC
        RETURN                          ; НАШЕЛ
2$:     POP     <R3,R0,(R4)>
1$:     ADD     R2,(R4)
        TST     R2
        BMI     9$
        CMP     (R4),DN.PTR
        BLO     4$
10$:    SEC
        RETURN
9$:     CMP     (R4),UP.PTR
        BHI     4$
        BR      10$
$LCASE: PUSH    R3
1$:     MOVB    (R0),R1
        CALL    $CCNV
        MOVB    R1,(R0)+
        SOB     R3,1$
        POP     R3
        SUB     R3,R0
$CCNV:  BIT     #3,FSW4
        BEQ     4$
1$:     BIT     #1,FSW4
        BEQ     2$
        CMPB    R1,#300
        BLE     2$
        BIC     #200,R1
2$:     BIT     #2,FSW4
        BEQ     4$
        CMPB    R1,#77
        BLOS    4$
        BIC     #40,R1
4$:     RETURN


$GABSN::PUSH    R3                      ; ПРОЦЕДУРА ВЫДАЧИ НОМЕРА СТРОКИ
                                        ; УКАЗАТЕЛЮ
                                        ; ВХОД R0 -> СТРОКА
                                        ; ВЫХОД R1 = НОМЕР
                                        ; R0 -> НАЧАЛО СТРОКИ
                                        ; ВЫЧИСЛЕНИЕ БЛИЖАЙЩЕГО УКАЗАТЕЛЯ
                                        ; С ИЗВЕСТНЫМ НОМЕРОМ СТРОКИ
        MOV     #177010,R4
        MOV     #177012,R5
        MOV     SL.PTR,(R4)
        MOV     ROL.GD,R1
        CMP     (R4),R0
        BEQ     11$
        BHI     10$
2$:     MOV     (R4),R3
        DEC     (R4)
1$:     INC     (R4)
        TST     (R5)
        BNE     1$
        CMP     (R4),R0
        BHIS    3$
        INC     R1
        INC     (R4)
        BR      2$
3$:     MOV     R3,R0
11$:    POP     R3
        RETURN
10$:    DEC     (R4)
13$:    DEC     R1
12$:    DEC     (R4)
        TSTB    (R5)
        BNE     12$
        CMP     (R4),R0
        BHI     13$
        MOV     (R4),R0
        INC     R0
        BR      11$



$GABSP::
        CMP     R1,MX.LIN
        BLOS    2$
        BGE     3$
        CLR     R1
        BR      2$
3$:     MOV     MX.LIN,R1



2$:     PUSH    R3
        MOV     #177010,R4
        MOV     #177012,R5
        MOV     SL.PTR,(R4)
        MOV     ROL.GD,R3
        CMP     R3,R1
        BHIS    10$

        TST     -(SP)

        DEC     (R4)
        DEC     R3

5$:     INC     R3
        MOV     (R4),(SP)
1$:     INC     (R4)
        TST     (R5)
        BNE     1$
        CMP     R3,R1
        BNE     5$
        POP     <R0,R3>
        INC     R0
        RETURN



10$:
        DEC     (R4)
13$:    CMP     R3,R1
        BEQ     11$

        DEC     R3

12$:    DEC     (R4)
        TSTB    (R5)
        BNE     12$
        BR      13$

11$:    MOV     (R4),R0
        INC     R0
        POP     R3
        RETURN




                                ; ПРЕОБРАЗОВАНИЕ ASCII -> DEC
                                ; ВХОД : R2 -> СТРОКА
                                ; ВЫХОД : R5 = ЧИСЛО
                                ; БИТ C = 1 , ЕСЛИ ОШИБКА
$DEC.C::
        CLR     R5
1$:     CMPB    #40,(R2)+
        BEQ     1$
        DEC     R2
2$:     MOVB    (R2)+,R1
        SUB     #'0,R1
        BMI     10$
        CMPB    R1,#9.
        BHI     10$
        MUL     #10.,R5
        ADD     R1,R5
        BR      2$
10$:    TSTB    -(R2)
        BEQ     12$
        CMPB    #40,(R2)
        BEQ     12$
11$:    SEC
        RETURN
12$:    CLC
        RETURN


LCLNUM::                                ; УСТАНОВКА НА СТРОКУ С АБСОЛЮТНЫМ
                                        ; НОМЕРОМ
                                        ; ВХОД : R1 = НОМЕР СТРОКИ
                                        ;        R0 -> НАЧАЛО СТРОКИ

        CMP     R1,MX.LIN
        BLOS    6$
        BGE     7$
        CLR     R1
        BR      6$
7$:     MOV     MX.LIN,R1
6$:     CALL    $CUROF
        MOV     ROL.GD,R4
        CMP     R4,R1
        BHI     3$
        ADD     #20.,R4
        CMP     R4,R1
        BLOS    3$
        MOV     R1,R0
        ADD     #20.,R0
        SUB     R4,R0
        MOV     R0,ED.Y
        BR      4$


3$:     PUSH    <R2,R3>
        COLOR   YELLOW,BLUE
        MOV     ED.Y,R2
        CMP     R2,R1
        BHI     1$
        SUB     R2,R1
        BR      2$
1$:     CLR     R2
2$:     CALL    $GABSP
        MOV     R0,SL.PTR
        MOV     R1,ROL.GD
        CLR     ED.Y
        CALL    $TOUT
        MOV     R2,ED.Y
        POP     <R3,R2>
4$:     CALL    $CURON

        RETURN


FKJMP:                                  ; Переход по функциональной клавише
        CALL    $LPUT                   ; Сохранить строку текста
        CLRB    C.MOVE                  ; Запретить перемещение курсора
        CALL    $CUROFF                 ; Выключить курсор
        TST     (SP)+
        MUL     #12,R5
        SUB     #204,R0
        ASL     R0
        ADD     R0,R5
REL     CALL    @TFK(R5)

$$1:    CALL    $CURON
        CALL    $LCOP
        JMP     $$RS

RTS:    RETURN


ALJMP::
        Call    $Lput
        BIC     #240,R0
        CMPB    #'X,R0
        BNE     1$
        Tst     (Sp)+
        Call    $CurOf
        Call    F19
        Call    $CurOn
        Jmp     $$Rs

1$:
Rel     Mov     #UAk,r5
        Clr     r4
1$:     Tstb    (r5)
        Beq     2$
        Cmpb    r0,(r5)+
        Beq     3$
        Inc     r4
        Br      1$
2$:     Return

3$:     Mov     r4,Wpnt
Rel     Mov     #Main,R4
        Mov     #177777,EntFlg
        Tst     (Sp)+
        Call    UpMn1
        Jmp     $$1









JKN9:
        TST     (SP)+
REL     UPMENU  #MAIN
        JMP     $$1












.PSECT  DATA
TLT:    .COLOR  BLUE,CYAN
        .ASCIZ  /Лат/
TRS:    .COLOR  BLUE,YELLOW
        .ASCIZ  /Рус/
Uak:

.If     Eq      Version-Beta
        .Asciz  /TIESRCDOWH/
.Iff
        .Asciz  /=IPKNS/
.EndC
        .Even

TFK:

REL     .WORD   <O1Hlp,F13  ,F11  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,JKN9 >
REL     .WORD   <O2Hlp,F02  ,F03  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,F01  >
REL     .WORD   <O3Hlp,F45  ,RTS  ,F61  ,RTS  ,RTS  ,RTS  ,RTS  ,F41  ,RTS  >
REL     .WORD   <O4Hlp,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  >
REL     .WORD   <O5Hlp,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,RTS  ,F51  ,RTS  >









EDJMP:: .BYTE   12.,LEFT,RIGHT,UP,DOWN,ENTER
        .BYTE   DEL,RUS,LAT,INS,31,10,27
        .EVEN

REL     .WORD   $EDL
REL     .WORD   $EDR
REL     .WORD   $EDU
REL     .WORD   $EDD
REL     .WORD   $EDE
REL     .WORD   $EDDL
REL     .WORD   $EDRS
REL     .WORD   $EDLT
REL     .WORD   $EDI
REL     .WORD   $EDCY
REL     .WORD   $EDCN
REL     .WORD   $EDCW

REL     .WORD   $EDS


L.REG:
REL     .WORD   $CR.LF                  ; NORMAL
REL     .WORD   $CR.DL                  ; SHIFT
REL     .WORD   $CR.LD                  ; CTRL
REL     .WORD   $RET                    ; GRAF
REL     .WORD   $CR.LS                  ; ALT

R.REG:
REL     .WORD   $CR.RG
REL     .WORD   $CR.IN
REL     .WORD   $CR.RD
REL     .WORD   $RET
REL     .WORD   $CR.RS

U.REG:
REL     .WORD   $CR.UP
REL     .WORD   $RET
REL     .WORD   $TX.UP
REL     .WORD   $SR.UP
REL     .WORD   $PG.UP

D.REG:
REL     .WORD   $CR.DN
REL     .WORD   $RET
REL     .WORD   $TX.DN
REL     .WORD   $SR.DN
REL     .WORD   $PG.DN

BITMAP::                                ; БИТОВАЯ КАРТА СИМВОЛОВ РАЗДЕЛИТЕЛЕЙ
        .WORD   ^B0000000000000000
        .WORD   ^B0000000000000000
        .WORD   ^B0110110010110010
        .WORD   ^B1101011111111111
        .WORD   ^B1111111111111111
        .WORD   ^B1001011111111111
        .WORD   ^B1111111111111111
        .WORD   ^B0000011111111111



        .END
                                                                                                                                                                                                                                                                                                                                                       