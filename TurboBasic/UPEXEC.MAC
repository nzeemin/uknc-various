;******************************************************************************
;*                           Функции основого меню                            *
;*                              Файл: UpExec.Mac                              *
;*                         Проект Turbo Basic для УКНЦ                        *
;*                    Свободное распространение (Free Ware)                   *
;*                       Герасимов Олег (095) 373-91-49                       *
;******************************************************************************


.Include /IDE.MLB/			; Подключение маробиблиотеки

	Define				; Определение популярных констант
	.RelDef	B			; Определение релокатора для модуля

.Psect	System				; Программная секция

;******************************************************************************
;*	Функция "О программе" (About)					      *
;******************************************************************************

F01::
Rel	Window	#About			; Открыть окно
$Ret::	Return				; Возврат

;******************************************************************************
;*                            Функции Transfer                                *
;******************************************************************************

F02::
Rel	Mov	#TrfNm1,r1
	Br	Transfer

F03::
Rel	Mov	#TrfNm2,r1
	Br	Transfer

;******************************************************************************
;*	Трансфер                                                              *
;*	Вход : r1 -> имя файла *.tbo                                          *
;******************************************************************************

Transfer::
	Tst	Psw1			; Режим 8 - цвета на экране
	Beq	1$
	Push	r1			; Да - сохранить текст в своп файле
	Call	VLook
	Pop	r1
1$:	Call	$Ncopy			; Передать имя файла в ЦП
	CpCall	#17.			; Вызов трансфера ЦП с именем
	Movb	#377,TrsFlg		; Флаг трансфера
	Jmp	Exec			; Запуск программы

;******************************************************************************
;*	Функция	"Открыть файл..." (Open file...)			      *
;******************************************************************************

F11::
	Mov	#100,nHelp		; Контекст справки для окна
Rel	Mov	#$OpF,Ds.Ptr		; Выбор функции списка файлов
Rel	Window	#OpenD			; Вызов диалогового окна
	Return				; Возврат

;******************************************************************************
;*	Функция Opf окна "Открыть файл"					      *
;******************************************************************************

$OpF::
	Call	$12			; Обработка введеного имени
	Cmp	(Sp)+,(Sp)+		; Восстановление стека
	Call	$LoadF			; Вызов загрузчика
$9:	Clr	Rol.HD			; Обнуление скролеров 
	Clr	Rol.GD
	Clr	Ed.X			; Обнулении координат курсора
	Clr	Ed.Y
$13:	Call	$Cls			; Oчистка экрана
	Jmp	$EWP			; Вывод фрагмента текста на экран
;	Return				; Возврат

;******************************************************************************
;*	Функция "Новый" (New)						      *
;******************************************************************************

F12::
	Call	$New			; Создать новый файл Noname.Bas
	Br	$9			; Отображение на экране	

;******************************************************************************
;	Функция "Сохранить" (Save)					      *
;******************************************************************************

F13::
	Tstb	NoNmId			; Имя файла определено ?
	Bne	F14			; Нет - "Save as..."
	Jmp	$SaveF			; Записать файл на диск
;	Return				; Возврат

;******************************************************************************
;	Функция "Сохранить как..." (Save as...)				      *
;******************************************************************************

F14::
	Mov	#100,nHelp		; Контекст помощи для окна
Rel	Mov	#$SvF,Ds.Ptr		; Выбор функции каталога
Rel	Window	#SaveD			; Вызов диалогового окна "Save file"
$10:	Return				; Возврат

;******************************************************************************
;*	Функция Svf окна "Сохранить файл"				      *
;******************************************************************************

$SvF::
	Clrb	NoNmId			; Сброс признака безымяного файла
	Call	$12			; Обработка введенного имени
	Cmp	(Sp)+,(Sp)+		; Восстановление стека
	Mov	#FArea,R0		; Копирование имени в заголовок
Rel	Mov	#EFNam,R1
1$:	Movb	(R0)+,(R1)+
	Bne	1$
	Call	$SaveF			; Сохранить на диске
	Jmp	$13			; Обновить экран		

;******************************************************************************
;*	Обработка имени файла						      *
;******************************************************************************

$12:	Mov	#Farea,r1		; Копирование имени в промежуточный буфер
	Mov	#16.,r2			; В имени максимум 16 символов
1$:	Movb	Lbuf-Farea(r1),(r1)+
	Sob	r2,1$
	Mov	#Farea,R1		; Указатель на имя файла.
	Call	$NCopy			; Переслать имя в ЦП и проверить
	Tstb	Ferr			; Имя с ошибкой ?
	Bne	3$			; Да - возврат в окно.
	Tstb	Ferr+1			; Вместо имени введена маска ?
	Bne	2$			; Да - вызов функции просмотра каталога
	Wclose				; Закрыть диалоговое окно
	Return

2$:	Call	Sdrv			; Изменить маску по умолчанию
	Jmp	DrPr1			; Вывод обновленого каталога в окно

3$:	Tst	(Sp)+			; Возврат в окно при неправильном имени
	Return

;******************************************************************************
;*	Внутреняя функция смены маски по умолчанию			      *
;******************************************************************************

Sdrv:	
	Jsr	R5,PpCp			; Копирование из ПП в ЦП
	.Word	<DefAlt/2>,FArea,7
	Return				; Возврат

;******************************************************************************
;*	Функция "Сохранить все" (Save all)                                    *
;******************************************************************************

F15::
	Call	F13			; Сохранить текст
	Jmp	F75			; Сохранить установки

;******************************************************************************
;	Функция "Выход в Rt11" (Exit)
;******************************************************************************

F19::	Call	TstAsv			; Автозапись
	Tstb	ChngId			; Текст был изменен ?
	Beq	Qui
Rel	Window	#TsChD			; Да - Окно с предупреждением.	
	Return
SfQ::	Call	F13
Qui::	Tst	(Sp)+
	Clr	@#177026		; Восстановление РЗП.
	Call	NmScr			; Восстановление экрана
	Call	RSTFNT			; Восстановление шрифта
	Mov	SysPl,@#2470		; Восстановление палитры
	Mov	SysPl+2,@#2472
	Mov	SysPl,@#4700
	Mov	SysPl+2,@#4702
	Call	NmKey			; Восстановление клавиатуры
	Mov	OldTm,@#100		; Восстановление сетевого таймера
OldTr	==.+2
	Mov	#0,@#34			; Восстановление вектора Emt
OldKb	==.+2
	Mov	#0,@#300
	Call	CurClr			; Сброс курсора
Rel	Mov	#Begin,R1		; Освобождение памяти
	Call	@#176300
	Mov	#14.,FFFF		; Командa ЦП - выход
	CALL	$$DSCL
	Real
	Tst	(SP)+			; Восстановбение Sp
        Mtps	#0			; Низкий приоритет процессора
        Return				; Возврат


F31::					; "FIND..."

        BIT     #100,ESW
        BEQ     1$
        CALL    $GCPTR
        MOV     R0,FB.PTR
        MOVB    #1,FB.PTR+5
        BR      $1
1$:
REL     MOV     #FDBUF,FB.PTR
        MOVB    #3,FB.PTR+5
	Mov	#101,nHelp
$1:REL  WINDOW  #FINDD
        RETURN

$FNDEX::
        MOV     #LBUF,R0
REL     MOV     #FDBUF,R1
        MOV     #40.,R2
1$:     MOVB    (R0)+,(R1)+
        SOB     R2,1$
F33::					; "SEARCH AGAIN"
$SRC::  
REL	TSTB	@#FDBUF
	BEQ	2$
	CALL    $FND
        BCS     2$
        MOV     R0,R2
        CALL    $GABSN
        SUB     R2,R0
        NEG     R0
        SUB     R3,R0
        PUSH    R0
        ADD     #LBUF,R0
        MOV     R0,LB.PTR
        MOV     R0,MX.PTR
	CLR	ED.Y
	CALL	LCLNUM
        MOV     R3,R2
        MOV     ED.Y,R3
        TST     (R3)+
        POP     R1
        SUB     ROL.HD,R1
        MOV     R1,ED.X
        MOV     R1,R0
        ADD     R2,R0
        
        CMP     R0,#77.
        BHIS    6$
        TST     R1
        BMI     6$

        CALL    $LC.ED
        INC     R1
        CALL    $INV
        CALL    $PUSH
5$:     TRAP    0
        CMP     @#7206,@#7210
        BEQ     5$
        CALL    $POP
	CALL	$INV


6$:     RETURN




2$:
REL     WINDOW  #NOTI
        RETURN




F34::
REL	WINDOW	#GOLNM
$2:	RETURN

$GOLIN::
	MOV	#LBUF,R2
	CALL	$DEC.C
	BCS	$2
	CLR	ED.Y
	MOV	R5,R1
	Jmp	LCLNUM



F35::					; "SHOW LAST ERROR"

	MOV     CM.ERN,R5
	BEQ	2$
	CALL	GETMS1
	MOV	WBPNT,R4
	MOV	(PC)+,(R4)+
	.BYTE	0,1.
	MOV	(PC)+,(R4)+
	.BYTE	80.,1.
	TST	(R4)+
	CALL	$SAVE
	COLOR	YELLOW,BLUE
	MOV	CM.ERL,R1
	CALL	$GABSP
	MOV	#10.,ED.Y
	CALL	LCLNUM
	COLOR	BLACK,YELLOW
	LOC	0,1.
	CALL	$PRTZ
	MOV	ED.Y,R3
	ADD	#2,R3
	MOV	#1,R1
	MOV	#78.,R2
	PUSH	<R3,R2,R1>
	CALL	$INV
	CALL	$LC.ED
	CALL	$CURON
1$:	Emt	22
	WCLOSE
	Cmp	r0,#Fk1
	Bne	3$
	Mov	Cm.Ern,nHelp
	Add	#1000,nHelp
	Call	GetHlp

3$:	POP	<R1,R2,R3>
	CALL	$INV
2$:	RETURN
	
	

F41::					; "RUN"
	Call	TstAsv
	TST	PSW1
	BEQ	1$
	CALL	VLOOK
1$:	Clrb	RWait
	CALL	F511
	BCS	$100
	Clrb	TrsFlg
EXEC::	CALL    NMSCR
REL	MOV	#BASPL,R0
	TST	PSW1
	BEQ	1$
	CLR	@#177026
	ADD	#<SYSPL-BASPL>,R0
        
1$:
	MOV	(R0),@#2470
	MOV     2(R0),@#2472
	MOV	(R0),@#4700
	MOV	2(R0),@#4702
	Mov	#-1,RN.FLG

	
	CALL    NMKEY

	.Irp	i,<7234,7514,7774,10254,10534>
	Clr	@#i+216
	.Endr
	
	Call	Bs.Exe
	
	Mov	#405,r0
	.Irp	i,<7234,7514,7774,10254,10534>
	Mov	r0,@#i+216
	.Endr
	
	
	
	Clr	Rn.Flg
	Tstb	TrsFlg
	Bne	$6
	Mov	Ferr,Cm.Ern
	Mov	#Number/2,@#177010
	Mov	@#177014,Cm.Erl
	Color	7,1
	
	Call	ReKey
Rel	Mov	#EbStr,R1
	Emt	46
	Flush
	Emt	22
	Br	$7
	
$6:	Call	ReKey
$7:	CALL	RESCR
	CALL	$BGPRT
        TST	PSW1
        BEQ	10$
        CALL	VUNLOOK

        
10$:	CALL    $EWP
	Tstb	TrsFlg
        Bne	$100
	TST	CM.ERN
	BNE     $102
$100:   RETURN


$102:	MOV	CM.ERN,R5
	CALL	GETMSG
	Mov	Cm.Ern,r0
	Add	#1000,r0
	Mov	r0,nHelp

REL	WINDOW	#DBGD
	Return

ErHl::	Tst	Psw3
	Bne	1$
	Jmp	F35	
1$:	RETURN


	

F45::					; "PROGRAMM RESET"
	CpCall	#16.
	Return

F51::					; "COMPILE"
	Movb	#377,RWait
F511:
REL	WINDOW	#COMPD
	Push	<#13.,#2.>
	Call	$Wloc
Rel	Print	#EfNam
	Push	<#13.,#3.>
	Call	$Wloc
Rel	Print	#EfNam
	Call	$Ncopy
	
	Mov	#DbgID/2,@#177010
	Movb	PSW3,@#177014
	Movb	Psw4,@#177015
	
	MOV     UP.PTR,CM.PTR
	CLR	CM.NUM
	MOV	#177777,CM.FLG
        CpCall	#7
	CLR     CM.FLG
	MOV	FERR,CM.ERN
	MOV	#NUMBER/2,@#177010
	MOV	@#177014,CM.ERL
	DEC	CM.ERL
	PUSH	<#1,#12.>
	CALL	$WLOC
	MOV	#TTBUF+39.,R1
	CLRB	(R1)
	MOV	#39.,R0
1$:	MOVB	#40,-(R1)
	SOB	R0,1$
	TST	(R1)+
REL	MOV	#SUCSTR,R2
	TST	FERR
	BEQ	3$
	ADD	#ERRSIR-SUCSTR,R2
3$:	MOVB	(R2)+,(R1)+
	BNE	3$
	MOVB	#40,-(R1)
	MOV	#TTBUF+15.,R1
REL	MOV	#PRKEYT,R2
2$:	MOVB	(R2)+,(R1)+
	BNE	2$
	MOVB	#40,-(R1)
	COLOR	YELLOW,BLUE
	CALL	$PRTZ
	Tst	Ferr
	Bne	1$
	Tstb	RWait
	Beq	3$
1$:	EMT	22
3$:	WCLOSE
	TST	FERR
	BEQ	4$
	Cmpb	#Escape,r0
	Beq	5$
	CALL	F35
5$:	SEC
4$:	RETURN
	

	
F61::					; "EVALUATE/MODIFY"
REL	WINDOW	#EVLMDD
	RETURN

$EVLT::

	Jsr	r5,PpCp
	.Word	<Buf/2>,Lbuf,20.
	Jsr	r5,PpCp
	.Word	<Buf/2+30.>,Lbuf+100.,20.
	
	Tst	@#177062
	Push	@#330
	Mov	#LBuf+50.,TPTR
Rel	Mov	#TtGET,@#330
	Mov	#200,@#332
	CpCall	#15.
	Pop	@#330
	MOV	TPTR,R0
	Mov	Ferr,r5
	Beq	1$
	Call	GetMs1
	Mov	#Lbuf+50.,r0
	Mov	#TtBuf,r1
3$:	Movb	(r1)+,(r0)+
	Cmp	r1,r4
	Bne	3$


1$:	MOVB	#40,(R0)+
	CMPB	R0,#LBUF+87.
	BLOS	1$
	
	CLRB	@#LBUF+87.
	PUSH	<#2,#5>
	CALL	$WLOC
	COLOR	YELLOW,BLUE
	PRINT	#LBUF+50.
	MOVB	#40,@#LBUF+87.
	RETURN
	
	
TTGET:
	Push	R0
	Mov	@#177062,R0
	Cmp	r0,#40
	Blo	1$
	Cmp	TPtr,#Lbuf+87.
	Bhis	1$
	Movb	R0,@TPTR
	Inc	TPTR
1$:	Pop	R0
	Rti

TPTR:	.BLKW	1	



PpCp::
	Push	<r0,r1>
	Mov	(r5)+,@#177010
	Mov	(r5)+,r0
	Mov	(r5)+,r1
1$:	Mov	(r0)+,@#177014
	Inc	@#177010
	Sob	r1,1$
	Pop	<r1,r0>
	Rts	r5
	



	
	
	
			


.If	Eq	Version-Beta
F71::					; "COMPILER"
	Mov	#102,nHelp
REL     WINDOW  #COMPO
        RETURN
.EndC

	
F741::					; "PREFERENCES"
	Mov	#103,nHelp
REL	WINDOW	#PREFM 
        RETURN

F742::					; "EDITOR"
REL     WINDOW  #EDITD
        RETURN

F744::					; "PALLETE"
REL     WINDOW  #PALETE
        RETURN

$SPMN::
        JSR     %5,$SPPL
        .BYTE   0,4,6,7
        RETURN

$SPCL::
        JSR     %5,$SPPL
        .BYTE   0,1,5,6
        RETURN


F75::					; "SAVE DESKTOP"
Rel	Mov	#Dls,R1
	Call	DnPrt
Rel	Print	#Dld	

REL	MOV	#DSFILE,R1
	CALL	$NCOPY
	MOVB	#10.,FFFF
	CALL	C1CALL
	BCS	$200
	MOV	BBUF,@#177010
REL	MOV	#DSCTOP,R4
	MOV	#<ENDPP-DSCTOP>/2,R3
	MOV	R3,FLEN
	CLR	FBLK
1$:	MOV	(R4)+,@#177014
	INC	@#177010
	SOB	R3,1$
	MOVB	#4,FFFF
	CALL	C1CALL
	BCS	$200
	MOVB	#1,FFFF
	CALL	C1CALL
$200:	JMP	DLCREA






	RETURN
F81::					; "REFRESH DISPLAY"
        CALL    $CLS
        CALL    $EWP
        RETURN

F91::					; "CONTENS"
	Mov	#2,nHelp
	Jmp	GetHlp


F95::					; "USING HELP"
        Mov	#1,nHelp
	Jmp	GetHlp
        
        
        

$GCPTR::
        CALL    $GETLP
        MOV     LB.PTR,R4
        SUB     #LBUF,R4
        CMPB    (R1),R4
        BHI     1$
        .MOVB   (R1),R4
        DEC     R0
1$:     ADD     R4,R0
        RETURN


VUNLOOK::
Rel	Mov	#Ldswfl,r1
	Call	DnPrt	

REL	MOV	#SWNSC,R1
	CALL	$NCOPY
	MOVB	#9.,FFFF
	CALL	C1CALL
	BCS	13$
	CLR	FBLK
	MOV	#177010,R5
	MOV	#177014,R4
	MOV	#PLEN/2,(R5)
	SWAB	(r4)
	ASL	(r4)
	ADD	#100000,(r4)
	MOV	(R4),F.LEN
	MOV	#100000,R3
	
	
	
2$:	
	MOV	F.LEN,R0
	SUB	R3,R0
	CMP	R0,#20000
	BLO	3$
	MOV	#20000,R0
3$:	ASR	R0
	MOV	R0,FLEN	
	CALL	PZUON
	MOVB	#2,FFFF
	CALL	C1CALL
	BCS	13$
	ADD	#20,FBLK
	MOV	BBUF,(R5)
	MOV	#10000,R1
	CALL	PZUOFF
1$:	MOV	(R4),(R3)+
	INC	(R5)
	CMP	R3,F.LEN
	BHIS	10$
	SOB	R1,1$
	BR	2$
10$:	CALL	PZUON
	MOVB	#1,FFFF
	CALL	C1CALL
13$:	JMP	DLCREA
	

	
	
	
	

	



VLOOK::
Rel	Mov	#CRSWFL,r1
	Call	DnPrt
REL	MOV	#SWNSC,R1
	CALL	$NCOPY
	MOVB	#10.,FFFF
	CALL	C1CALL
	BCS	14$
	CLR	FBLK
	MOV	#3,R0
	MOV	#177010,R5
	MOV	#100000,(R5)
2$:	MOV	#10000,R2
	MOV	BBUF,R1
1$:	MOV	2(R5),R4
	SWAB	R4
	INC	(R5)
	BIS	2(R5),R4
	SWAB	R4
	INC	(R5)
	PUSH	(R5)
	MOV	R1,(R5)
	MOV	R4,4(R5)
	INC	R1
	POP	(R5)
	CMP	(R5),DN.PTR
	BHI	10$
	SOB	R2,1$
	BR	11$
10$:	MOV	#1,R0
11$:	SUB	#10000,R2
	NEG	R2
	MOV	R2,FLEN
	MOVB	#4,FFFF
	CALL	C1CALL
	BCS	14$
	ASH	#-8.,R2
	ADD	R2,FBLK
	SOB	R0,2$
	MOVB	#1,FFFF
	CALL	C1CALL
14$:	JMP	DLCREA

;	Процедура авто записи файлов
TstAsv::
	Bit	#1,Psw2
	Beq	1$
	Tstb	ChngId
	Beq	1$
	Call	F13
1$:	Bit	#2,Psw2
	Beq	2$
	Call	F75
2$:	Jmp	DlCrea

TrfNm1:	.Asciz	/DK:PAINT.TBO/
TrfNm2:	.Asciz	/DK:EDITFT.TBO/
	.Even
	.END
	     