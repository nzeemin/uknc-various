;
	.TITLE	DECOBJ

	.ASECT
	.=001000
;
;------------------------------------------------------------------------------
;
; Процедура, 44 слова на стеке
; SP000 - массив слов 0..38.
; SP116 - массив слов 1..4
; SP126 - переменная слово
L01000:	SUB	#000130, SP
L01004:	CALL	L53046			; STKCHK
; FOR SP126 := 1 TO 4
L01010:	MOV	SP, R0
L01012:	ADD	#000126, R0
L01016:	MOV	R0, -(SP)
L01020:	MOV	#000001, -(SP)
L01024:	MOV	#000004, -(SP)
L01030:	MOV	000002(SP), @000004(SP)
L01036:	CMP	@000004(SP), (SP)
L01042:	BLE	L01050
L01044:	JMP	L01114
; DO
L01050:	MOV	000134(SP), R0		; SP126
L01054:	CMP	R0, #000001		; 1
L01060:	BLT	L01070
L01062:	CMP	R0, #000004		; 4
L01066:	BLE	L01074
L01070:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L01074:	ASL	R0
L01076:	ADD	SP, R0
L01100:	CLR	000122(R0)		; SP116[SP126] := 0
; NEXT
L01104:	INC	@000004(SP)
L01110:	JMP	L01036			; CONTINUE LOOP
L01114:	ADD	#000006, SP
; END FOR
L01120:	MOV	SP, R2
L01122:	ADD	#000000, R2		; SP000
L01126:	MOV	SP, R3
L01130:	ADD	#000116, R3		; SP116
L01134:	MOV	#057032, (R3)		; -> SP116
L01140:	MOV	#050553, 000002(R3)
L01146:	EMT	355			; .RCTRLO
L01150:	MOV	#001000, @#000046
L01156:	MOV	SP, R1
L01160:	MOV	R2, -(SP)
L01162:	MOV	R3, -(SP)
L01164:	CLR	-(SP)
L01166:	EMT	344			; .CSIGEN
L01170:	MOV	R1, SP
L01172:	BLO	L01160
; FOR SP126 := 0 TO 15.
L01174:	MOV	SP, R0
L01176:	ADD	#000126, R0		; SP126
L01202:	MOV	R0, -(SP)
L01204:	CLR	-(SP)			; 0
L01206:	MOV	#000017, -(SP)		; 15.
L01212:	MOV	000002(SP), @000004(SP)
L01220:	CMP	@000004(SP), (SP)
L01224:	BLE	L01232
L01226:	JMP	L01272
; DO
L01232:	MOV	000134(SP), R0		; SP126
L01236:	CMP	R0, #000000		; 0
L01242:	BLT	L01252
L01244:	CMP	R0, #000017		; 15.
L01250:	BLE	L01256
L01252:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L01256:	ADD	R5, R0
L01260:	CLRB	(R0)			; VAR00[SP126] := 0
; NEXT
L01262:	INC	@000004(SP)
L01266:	JMP	L01220
L01272:	ADD	#000006, SP
; END FOR
L01276:	ADD	#000130, SP
L01302:	RETURN
;
; Процедура, 3 слова на стеке
; SP02 байт
; SP04 слово = 0..15
; SP06 указатель на запись 1012
L01304:	CALL	L53046			; STKCHK
; IF VAR00[SP04] <> 0
L01310:	MOV	000004(SP), R0		; SP04
L01314:	CMP	R0, #000000		; 0
L01320:	BLT	L01330
L01322:	CMP	R0, #000017		; 15.
L01326:	BLE	L01334
L01330:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L01334:	ADD	R5, R0
L01336:	TSTB	(R0)
L01340:	BNE	L01346
L01342:	JMP	L01352
L01346:	JMP	L01510
; THEN
L01352:	MOV	000006(SP), R3		; WITH SP06^
L01356:	MOV	000004(SP), 000004(R3)	; .RR04 := SP04
L01364:	CLR	000002(R3)		; .RR02 := 0
L01370:	CLR	000002(R3)		; .RR02 := 0
; IF SP02 = 1
L01374:	CMPB	000002(SP), #000001	; SP02 = 1 ?
L01402:	BEQ	L01410
L01404:	JMP	L01430
; THEN
L01410:	MOV	#177777, 000006(R3)	; .RR06 := -1
L01416:	MOV	#001000, 001010(R3)	; .RR1010 := 1
L01424:	JMP	L01456
; ELSE IF
L01430:	CMPB	000002(SP), #000002	; SP02 = 2
L01436:	BEQ	L01444
L01440:	JMP	L01456
; THEN
L01444:	CLR	000006(R3)		; .RR06 := 0
L01450:	MOV	#000001, 001010(R3)	; .RR1010 := 1
; END IF
L01456:	MOV	000004(SP), R0
L01462:	CMP	R0, #000000		; 0
L01466:	BLT	L01476
L01470:	CMP	R0, #000017		; 15.
L01474:	BLE	L01502
L01476:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L01502:	ADD	R5, R0
L01504:	MOVB	000002(SP), (R0)	; VAR00[SP04] := SP02
; END IF
L01510:	MOV	(SP), 000006(SP)
L01514:	ADD	#000006, SP
L01520:	RETURN
;
; Процедура чтения
; Параметр: SP20 запись 1012
; SP16 слово
; SP00 массив слов 0..5
; Результат: ??
L01522:	SUB	#000014, SP
L01526:	CALL	L53046			; STKCHK
L01532:	MOV	000020(SP), R3		; WITH SP20^
; IF VAR00[SP20.RR04] = 1
L01536:	MOV	000004(R3), R0
L01542:	CMP	R0, #000000		; 0
L01546:	BLT	L01556
L01550:	CMP	R0, #000017		; 15.
L01554:	BLE	L01562
L01556:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L01562:	ADD	R5, R0
L01564:	CMPB	(R0), #000001
L01570:	BEQ	L01576
L01572:	JMP	L02004
; THEN; IF
L01576:	CMP	001010(R3), #001000
L01604:	BEQ	L01612
L01606:	JMP	L01722
; THEN
L01612:	INC	000006(R3)		; SP20.RR06 := SP20.RR06 + 1
L01616:	CLR	000002(R3)		; SP20.RR02 := 0
L01622:	CLRB	(R3)			; SP20.RR00 := 0
L01624:	MOV	SP, R0
L01626:	ADD	#000000, R0
L01632:	MOV	R3, R1
L01634:	ADD	#000010, R1
L01640:	MOV	#004000, (R0)		; Code 10 - .READ/.READC/.READW
L01644:	MOVB	000004(R3), (R0)	; Channel
L01650:	MOV	000006(R3), 000002(R0)	; Buffer
L01656:	MOV	R1, 000004(R0)		; Words count
L01662:	MOV	#000400, 000006(R0)
L01670:	CLR	000010(R0)
L01674:	EMT	375			; 
L01676:	BHIS	L01716			; jump on error
L01700:	MOVB	@#000064, R0
L01704:	MOV	R0, 000002(R3)
L01710:	BNE	L01716
L01712:	INC	000000(R3)
L01716:	CLR	001010(R3)		; RR1010 := 0
; END IF
L01722:	INC	001010(R3)		; RR1010 := RR1010 + 1
; SP16 := ORD(RR10[RR1010])
L01726:	MOV	001010(R3), R0
L01732:	CMP	R0, #000001		; 1
L01736:	BLT	L01746
L01740:	CMP	R0, #001000		; 512.
L01744:	BLE	L01752
L01746:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L01752:	ADD	R3, R0
L01754:	MOVB	000007(R0), R0
L01760:	MOV	R0, @000016(SP)
; IF SP16 < 0
L01764:	TST	@000016(SP)
L01770:	BLT	L01776
L01772:	JMP	L02004
; THEN
L01776:	ADD	#000400, @000016(SP)	; SP16 := SP16 + 256.
; END IF
L02004:	MOV	000014(SP), 000020(SP)
L02012:	ADD	#000020, SP
L02016:	RETURN
;
; Процедура записи, 8 слов на стеке
L02020:	SUB	#000014, SP
L02024:	CALL	L53046			; STKCHK
L02030:	MOV	000020(SP), R3		; WITH SP020^
; IF VAR00[RR04] = CHST2
L02034:	MOV	000004(R3), R0
L02040:	CMP	R0, #000000		; 0
L02044:	BLT	L02054
L02046:	CMP	R0, #000017		; 15.
L02052:	BLE	L02060
L02054:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L02060:	ADD	R5, R0
L02062:	CMPB	(R0), #000002		; VAR00[?] = 2 ?
L02066:	BEQ	L02074
L02070:	JMP	L02262
; THEN
L02074:	MOV	001010(R3), R0
L02100:	CMP	R0, #000001		; 1
L02104:	BLT	L02114
L02106:	CMP	R0, #001000		; 512.
L02112:	BLE	L02120
L02114:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L02120:	ADD	R3, R0
L02122:	MOVB	000016(SP), 000007(R0)	; RR10[RR1010] := CHR(16)
L02130:	INC	001010(R3)		; RR1010 := RR1010 + 1
; IF RR1010 > 512.
L02134:	CMP	001010(R3), #001000
L02142:	BGT	L02150
L02144:	JMP	L02262
; THEN
L02150:	CLR	000002(R3)		; RR02 := 0
L02154:	CLRB	(R3)			; RR00 := 0
L02156:	MOV	SP, R0
L02160:	ADD	#000000, R0
L02164:	MOV	R3, R1
L02166:	ADD	#000010, R1
L02172:	MOV	#004400, (R0)		; Code 11 - .WRITE/.WRITC/.WRITW
L02176:	MOVB	000004(R3), (R0)	; Channel
L02202:	MOV	000006(R3), 000002(R0)	; Buffer
L02210:	MOV	R1, 000004(R0)		; Words count
L02214:	MOV	#000400, 000006(R0)
L02222:	CLR	000010(R0)
L02226:	EMT	375			; 
L02230:	BHIS	L02250
L02232:	MOVB	@#000064, R0
L02236:	MOV	R0, 000002(R3)
L02242:	BNE	L02250
L02244:	INC	000000(R3)
L02250:	INC	000006(R3)		; RR06 := RR06 + 1
L02254:	MOV	#000001, 001010(R3)
; END IF
L02262:	MOV	000014(SP), 000020(SP)
L02270:	ADD	#000020, SP
L02274:	RETURN
;
; Процедура
; SP02: запись 1012
L02276:	CALL	L53046			; STKCHK
L02302:	MOV	000002(SP), R3		; WITH SP02
; IF VAR00[RR04] = 0
L02306:	MOV	000004(R3), R0
L02312:	CMP	R0, #000000		; 0
L02316:	BLT	L02326
L02320:	CMP	R0, #000017		; 15.
L02324:	BLE	L02332
L02326:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L02332:	ADD	R5, R0
L02334:	TSTB	(R0)
L02336:	BEQ	L02344
L02340:	JMP	L02350
; THEN
L02344:	JMP	L02476
; ELSE IF VAR00[RR04] = 2
L02350:	MOV	000004(R3), R0
L02354:	CMP	R0, #000000		; 0
L02360:	BLT	L02370
L02362:	CMP	R0, #000017		; 15.
L02366:	BLE	L02374
L02370:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L02374:	ADD	R5, R0
L02376:	CMPB	(R0), #000002
L02402:	BEQ	L02410
L02404:	JMP	L02446
; THEN; WHILE RR1010 <> 1
L02410:	CMP	001010(R3), #000001
L02416:	BNE	L02424
L02420:	JMP	L02446
; L02020(SP02, 0)
L02424:	MOV	R3, -(SP)
L02426:	MOV	000004(SP), -(SP)
L02432:	CLR	-(SP)
L02434:	CALL	L02020			; Процедура записи
L02440:	MOV	(SP)+, R3
L02442:	JMP	L02410			; CONTINE LOOP
; VAR00[RR04] := 0
L02446:	MOV	000004(R3), R0
L02452:	CMP	R0, #000000		; 0
L02456:	BLT	L02466
L02460:	CMP	R0, #000017		; 15.
L02464:	BLE	L02472
L02466:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L02472:	ADD	R5, R0
L02474:	CLRB	(R0)
; END IF
L02476:	MOV	(SP), 000002(SP)
L02502:	ADD	#000002, SP
L02506:	RETURN
;
L02510:	JMP	L01000
L02514:	JMP	L01304
L02520:	JMP	L01522			; Процедура чтения
L02524:	JMP	L02020			; Процедура записи
L02530:	JMP	L02276
;
L02534:	MOV	(R4), R4
L02536:	MOV	(R4), R4
L02540:	MOV	(R4), R4
L02542:	MOV	(R4), R4
L02544:	MOV	(R4), R4
L02546:	MOV	(R4), R4
L02550:	MOV	(R4), R4
L02552:	MOV	(R4), R4
;
; Процедура, 1 слово аргументов
L02554:	MOV	R4, -(SP)
L02556:	JSR	R0, L53000		; SVREG
L02562:	MOV	000012(SP), R3
L02566:	MOV	000006(R3), R3
L02572:	MOV	R3, -(SP)
L02574:	MOV	000014(SP), R0
L02600:	MOV	000010(R0), -(SP)
L02604:	MOV	000016(SP), R0
L02610:	ADD	#000002, R0
L02614:	MOV	R0, -(SP)
L02616:	CALL	L02520			; Процедура чтения
L02622:	MOV	(SP)+, R3
L02624:	MOV	000012(SP), R0
L02630:	MOV	001004(R3), R1
L02634:	ADD	000002(R0), R1
L02640:	BIC	#177400, R1
L02644:	MOV	R1, 001004(R3)
L02650:	MOV	000012(SP), R0
L02654:	MOV	000002(R0), 000016(SP)
L02662:	JSR	R0, L53030		; UNREG
L02666:	ADD	#000002, SP
L02672:	RETURN
;
L02674:	MOV	(R4), R4
L02676:	MOV	(R4), R4
L02700:	MOV	(R4), R4
L02702:	MOV	(R4), R4
L02704:	MOV	(R4), R4
L02706:	MOV	(R4), R4
L02710:	MOV	(R4), R4
L02712:	MOV	(R4), R4
;
L02714:	MOV	R4, -(SP)
L02716:	JSR	R0, L53000		; SVREG
L02722:	CLR	-(SP)
L02724:	MOV	SP, R4
L02726:	ADD	#000014, R4
L02732:	CALL	L02552
L02736:	MOV	(SP)+, R0
L02740:	CLR	-(SP)
L02742:	MOV	SP, R4
L02744:	ADD	#000014, R4
L02750:	CALL	L02552
L02754:	MOV	(SP)+, R1
L02756:	SWAB	R1
L02760:	BIC	#000377, R1
L02764:	ADD	R0, R1
L02766:	MOV	R1, 000016(SP)
L02772:	JSR	R0, L53030		; UNREG
L02776:	ADD	#000002, SP
L03002:	RETURN
;
L03004:	CMP	-(SP), -(SP)
L03006:	CALL	L53046			; STKCHK
L03012:	MOV	000006(SP), R3
L03016:	CLR	001004(R3)
L03022:	CLR	-(SP)
L03024:	MOV	SP, R4
L03026:	ADD	#000002, R4
L03032:	CALL	L02554
L03036:	MOV	(SP)+, R0
L03040:	CMP	R0, #000001
L03044:	BEQ	L03052
L03046:	JMP	L03016
L03052:	CLR	-(SP)
L03054:	MOV	SP, R4
L03056:	ADD	#000002, R4
L03062:	CALL	L02554
L03066:	MOV	(SP)+, R0
L03070:	MOV	R0, (SP)
L03072:	CLR	-(SP)
L03074:	MOV	SP, R4
L03076:	ADD	#000002, R4
L03102:	CALL	L02714
L03106:	MOV	(SP)+, R0
L03110:	MOV	R0, (SP)
L03112:	MOV	(SP), R0
L03114:	ADD	#177772, R0
L03120:	MOV	R0, (R3)
L03122:	CLR	-(SP)
L03124:	MOV	SP, R4
L03126:	ADD	#000002, R4
L03132:	CALL	L02714
L03136:	MOV	(SP)+, R0
L03140:	MOV	R0, 000004(R3)
L03144:	MOV	000004(R3), 000002(R3)
; FOR
L03152:	MOV	SP, R0
L03154:	MOV	R0, -(SP)
L03156:	MOV	#000001, -(SP)
L03162:	MOV	(R3), -(SP)
L03164:	MOV	000002(SP), @000004(SP)
L03172:	CMP	@000004(SP), (SP)
L03176:	BLE	L03204
L03200:	JMP	L03266
; DO
L03204:	MOV	000006(SP), R0
L03210:	CMP	R0, #000001		; 1
L03214:	BLT	L03224
L03216:	CMP	R0, #000400		; 256.
L03222:	BLE	L03230
L03224:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L03230:	ASL	R0
L03232:	ADD	R3, R0
L03234:	CLR	-(SP)
L03236:	MOV	SP, R4
L03240:	ADD	#000010, R4
L03244:	CALL	L02554
L03250:	MOV	(SP)+, R1
L03252:	MOV	R1, 000002(R0)
; NEXT
L03256:	INC	@000004(SP)
L03262:	JMP	L03172
L03266:	ADD	#000006, SP
; END FOR
L03272:	CLR	-(SP)
L03274:	MOV	SP, R4
L03276:	ADD	#000002, R4
L03302:	CALL	L02554
L03306:	MOV	(SP)+, R0
L03310:	MOV	R0, (SP)
L03312:	TST	001004(R3)
L03316:	BNE	L03324
L03320:	JMP	L03324
L03324:	CLR	001006(R3)
L03330:	CLRB	001010(R3)
L03334:	MOV	000004(SP), 000010(SP)
L03342:	ADD	#000010, SP
L03346:	RETURN
;
L03350:	JSR	R0, L53000		; SVREG
L03354:	MOV	000014(SP), R3
L03360:	INC	001006(R3)
L03364:	MOV	001006(R3), R0
L03370:	CMP	R0, #000001		; 1
L03374:	BLT	L03404
L03376:	CMP	R0, #000400		; 256.
L03402:	BLE	L03410
L03404:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L03410:	ASL	R0
L03412:	ADD	R3, R0
L03414:	MOV	000002(R0), 000016(SP)
L03422:	CMP	001006(R3), (R3)
L03426:	BGE	L03434
L03430:	CLR	R0
L03432:	BR	L03440
L03434:	MOV	#000001, R0
L03440:	MOVB	R0, 001010(R3)
L03444:	JSR	R0, L53030		; UNREG
L03450:	MOV	(SP), 000002(SP)
L03454:	ADD	#000002, SP
L03460:	RETURN
;
L03462:	JSR	R0, L53000		; SVREG
L03466:	CLR	-(SP)
L03470:	MOV	000016(SP), -(SP)
L03474:	CALL	L03350
L03500:	MOV	(SP)+, R0
L03502:	CLR	-(SP)
L03504:	MOV	000016(SP), -(SP)
L03510:	CALL	L03350
L03514:	MOV	(SP)+, R1
L03516:	SWAB	R1
L03520:	BIC	#000377, R1
L03524:	ADD	R0, R1
L03526:	MOV	R1, 000016(SP)
L03532:	JSR	R0, L53030		; UNREG
L03536:	MOV	(SP), 000002(SP)
L03542:	ADD	#000002, SP
L03546:	RETURN
;
L03550:	JSR	R0, L53000		; SVREG
L03554:	CMPB	000014(SP), #000040
L03562:	BEQ	L03570
L03564:	JMP	L03600
; THEN
L03570:	CLR	000016(SP)
L03574:	JMP	L04054
; ELSE
L03600:	CMPB	#000101, 000014(SP)
L03606:	BLE	L03614
L03610:	CLR	R0
L03612:	BR	L03620
L03614:	MOV	#000001, R0
L03620:	CMPB	000014(SP), #000132
L03626:	BLE	L03634
L03630:	CLR	R1
L03632:	BR	L03640
L03634:	MOV	#000001, R1
L03640:	COMB	R1
L03642:	BICB	R1, R0
L03644:	BNE	L03652
L03646:	JMP	L03674
; THEN
L03652:	MOVB	000014(SP), R0
L03656:	SUB	#000101, R0
L03662:	INC	R0
L03664:	MOV	R0, 000016(SP)
L03670:	JMP	L04054
; ELSE
L03674:	CMPB	000014(SP), #000044
L03702:	BEQ	L03710
L03704:	JMP	L03722
; THEN
L03710:	MOV	#000033, 000016(SP)
L03716:	JMP	L04054
; ELSE
L03722:	CMPB	000014(SP), #000056
L03730:	BEQ	L03736
L03732:	JMP	L03750
; THEN
L03736:	MOV	#000034, 000016(SP)
L03744:	JMP	L04054
; ELSE
L03750:	CMPB	#000060, 000014(SP)
L03756:	BLE	L03764
L03760:	CLR	R0
L03762:	BR	L03770
L03764:	MOV	#000001, R0
L03770:	CMPB	000014(SP), #000071
L03776:	BLE	L04004
L04000:	CLR	R1
L04002:	BR	L04010
L04004:	MOV	#000001, R1
L04010:	COMB	R1
L04012:	BICB	R1, R0
L04014:	BNE	L04022
L04016:	JMP	L04046
; THEN
L04022:	MOVB	000014(SP), R0
L04026:	SUB	#000060, R0
L04032:	ADD	#000036, R0
L04036:	MOV	R0, 000016(SP)
L04042:	JMP	L04054
; ELSE
L04046:	MOV	#000035, 000016(SP)
; END IF
L04054:	JSR	R0, L53030		; UNREG
L04060:	MOV	(SP), 000002(SP)
L04064:	ADD	#000002, SP
L04070:	RETURN
;
L04072:	JSR	R0, L53000		; SVREG
L04076:	CLR	-(SP)
L04100:	CLR	-(SP)
L04102:	MOVB	000024(SP), (SP)
L04106:	CALL	L03550
L04112:	MOV	(SP)+, R0
L04114:	MOV	R0, -(SP)
L04116:	MOV	#000050, -(SP)
L04122:	CALL	L52676			; DOMUL
L04126:	CLR	-(SP)
L04130:	CLR	-(SP)
L04132:	MOVB	000024(SP), (SP)
L04136:	CALL	L03550
L04142:	MOV	(SP)+, R0
L04144:	ADD	(SP)+, R0
L04146:	MOV	R0, -(SP)
L04150:	MOV	#000050, -(SP)
L04154:	CALL	L52676			; DOMUL
L04160:	CLR	-(SP)
L04162:	CLR	-(SP)
L04164:	MOVB	000022(SP), (SP)
L04170:	CALL	L03550
L04174:	MOV	(SP)+, R0
L04176:	ADD	(SP)+, R0
L04200:	MOV	R0, 000022(SP)
L04204:	JSR	R0, L53030		; UNREG
L04210:	MOV	(SP), 000006(SP)
L04214:	ADD	#000006, SP
L04220:	RETURN
;
L04222:	JSR	R0, L53000		; SVREG
L04226:	TST	000014(SP)
L04232:	BEQ	L04240
L04234:	JMP	L04252
; THEN
L04240:	MOVB	#000040, 000016(SP)
L04246:	JMP	L04526
; ELSE
L04252:	CMP	#000001, 000014(SP)
L04260:	BLE	L04266
L04262:	CLR	R0
L04264:	BR	L04272
L04266:	MOV	#000001, R0
L04272:	CMP	000014(SP), #000032
L04300:	BLE	L04306
L04302:	CLR	R1
L04304:	BR	L04312
L04306:	MOV	#000001, R1
L04312:	COMB	R1
L04314:	BICB	R1, R0
L04316:	BNE	L04324
L04320:	JMP	L04346
; THEN
L04324:	MOV	000014(SP), R0
L04330:	DEC	R0
L04332:	ADD	#000101, R0
L04336:	MOVB	R0, 000016(SP)
L04342:	JMP	L04526
; ELSE
L04346:	CMP	000014(SP), #000033
L04354:	BEQ	L04362
L04356:	JMP	L04374
; THEN
L04362:	MOVB	#000044, 000016(SP)
L04370:	JMP	L04526
; ELSE
L04374:	CMP	000014(SP), #000034
L04402:	BEQ	L04410
L04404:	JMP	L04422
; THEN
L04410:	MOVB	#000056, 000016(SP)
L04416:	JMP	L04526
; ELSE
L04422:	CMP	#000036, 000014(SP)
L04430:	BLE	L04436
L04432:	CLR	R0
L04434:	BR	L04442
L04436:	MOV	#000001, R0
L04442:	CMP	000014(SP), #000047
L04450:	BLE	L04456
L04452:	CLR	R1
L04454:	BR	L04462
L04456:	MOV	#000001, R1
L04462:	COMB	R1
L04464:	BICB	R1, R0
L04466:	BNE	L04474
L04470:	JMP	L04520
; THEN
L04474:	MOV	000014(SP), R0
L04500:	ADD	#177742, R0
L04504:	ADD	#000060, R0
L04510:	MOVB	R0, 000016(SP)
L04514:	JMP	L04526
; ELSE
L04520:	MOVB	#000077, 000016(SP)
; END IF
L04526:	JSR	R0, L53030		; UNREG
L04532:	MOV	(SP), 000002(SP)
L04536:	ADD	#000002, SP
L04542:	RETURN
;
L04544:	CMP	-(SP), -(SP)
L04546:	CALL	L53046			; STKCHK
L04552:	MOV	000012(SP), 000002(SP)
; FOR
L04560:	MOV	SP, R0
L04562:	MOV	R0, -(SP)
L04564:	MOV	#000003, -(SP)
L04570:	MOV	#000001, -(SP)
L04574:	MOV	000002(SP), @000004(SP)
L04602:	CMP	@000004(SP), (SP)
L04606:	BGE	L04614
L04610:	JMP	L04724
; DO
L04614:	MOV	000014(SP), R0
L04620:	MOV	000006(SP), R1
L04624:	CMP	R1, #000001		; 1
L04630:	BLT	L04640
L04632:	CMP	R1, #000006		; 6
L04636:	BLE	L04644
L04640:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L04644:	ADD	R0, R1
L04646:	CLR	-(SP)
L04650:	MOV	000012(SP), -(SP)
L04654:	MOV	#000050, -(SP)
L04660:	CALL	L52660			; UNSMOD
L04664:	CALL	L04222
L04670:	MOVB	(SP)+, 177777(R1)
L04674:	MOV	000010(SP), -(SP)
L04700:	MOV	#000050, -(SP)
L04704:	CALL	L52640			; UNSDIV
L04710:	MOV	(SP)+, 000010(SP)
; NEXT
L04714:	DEC	@000004(SP)
L04720:	JMP	L04602
L04724:	ADD	#000006, SP
; END FOR
L04730:	MOV	000010(SP), 000002(SP)
; FOR
L04736:	MOV	SP, R0
L04740:	MOV	R0, -(SP)
L04742:	MOV	#000006, -(SP)		; 6
L04746:	MOV	#000004, -(SP)		; 4
L04752:	MOV	000002(SP), @000004(SP)
L04760:	CMP	@000004(SP), (SP)
L04764:	BGE	L04772
L04766:	JMP	L05102
; DO
L04772:	MOV	000014(SP), R0
L04776:	MOV	000006(SP), R1
L05002:	CMP	R1, #000001		; 1
L05006:	BLT	L05016
L05010:	CMP	R1, #000006		; 6
L05014:	BLE	L05022
L05016:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L05022:	ADD	R0, R1
L05024:	CLR	-(SP)
L05026:	MOV	000012(SP), -(SP)
L05032:	MOV	#000050, -(SP)
L05036:	CALL	L52660			; UNSMOD
L05042:	CALL	L04222
L05046:	MOVB	(SP)+, 177777(R1)
L05052:	MOV	000010(SP), -(SP)
L05056:	MOV	#000050, -(SP)
L05062:	CALL	L52640			; UNSDIV
L05066:	MOV	(SP)+, 000010(SP)
L05072:	DEC	@000004(SP)
L05076:	JMP	L04760
L05102:	ADD	#000006, SP
; END FOR
L05106:	MOV	000004(SP), 000012(SP)
L05114:	ADD	#000012, SP
L05120:	RETURN
;
L05122:	JSR	R0, L53000		; SVREG
L05126:	MOV	000014(SP), R0
L05132:	BIC	#177400, R0
L05136:	MOV	R0, 000016(SP)
L05142:	JSR	R0, L53030		; UNREG
L05146:	MOV	(SP), 000002(SP)
L05152:	ADD	#000002, SP
L05156:	RETURN
;
L05160:	JSR	R0, L53000		; SVREG
L05164:	MOV	000014(SP), R0
L05170:	SWAB	R0
L05172:	MOVB	R0, R0
L05174:	MOV	R0, 000016(SP)
L05200:	JSR	R0, L53030		; UNREG
L05204:	MOV	(SP), 000002(SP)
L05210:	ADD	#000002, SP
L05214:	RETURN
;
L05216:	CALL	L53046			; STKCHK
L05222:	CLR	-(SP)
L05224:	MOV	000006(SP), -(SP)
L05230:	CALL	L03462
L05234:	MOV	(SP)+, R0
L05236:	MOV	R0, -(SP)
L05240:	CLR	-(SP)
L05242:	MOV	000010(SP), -(SP)
L05246:	CALL	L03462
L05252:	MOV	(SP)+, R0
L05254:	MOV	R0, -(SP)
L05256:	MOV	000006(SP), R0
L05262:	ADD	#000002, R0
L05266:	MOV	R0, -(SP)
L05270:	CALL	L04544
L05274:	MOV	(SP), 000004(SP)
L05300:	ADD	#000004, SP
L05304:	RETURN
;
L05306:	CMP	-(SP), -(SP)
L05310:	CALL	L53046			; STKCHK
L05314:	MOV	000010(SP), R3
L05320:	MOV	000006(SP), R2
L05324:	MOV	R3, -(SP)
L05326:	MOV	R2, -(SP)
L05330:	MOV	000014(SP), -(SP)
L05334:	MOV	000014(SP), -(SP)
L05340:	CALL	L05216
L05344:	MOV	(SP)+, R2
L05346:	MOV	(SP)+, R3
L05350:	CLR	-(SP)
L05352:	MOV	000012(SP), -(SP)
L05356:	CALL	L03462
L05362:	MOV	(SP)+, R0
L05364:	MOV	R0, (SP)
L05366:	CLR	-(SP)
L05370:	MOV	000002(SP), -(SP)
L05374:	CALL	L05122
L05400:	MOV	(SP)+, R0
L05402:	MOV	R0, 000002(SP)
L05406:	MOV	000006(SP), R0
L05412:	MOVB	000002(SP), 000012(R0)
L05420:	CLR	-(SP)
L05422:	MOV	000002(SP), -(SP)
L05426:	CALL	L05160
L05432:	MOV	(SP)+, R0
L05434:	MOV	R0, 000002(SP)
L05440:	MOV	000006(SP), R0
L05444:	MOVB	000002(SP), 000010(R0)
L05452:	CLR	-(SP)
L05454:	MOV	000012(SP), -(SP)
L05460:	CALL	L03462
L05464:	MOV	(SP)+, R0
L05466:	MOV	R0, 000022(R2)
L05472:	MOV	000004(SP), 000010(SP)
L05500:	ADD	#000010, SP
L05504:	RETURN
;
L05506:	CALL	L53046			; STKCHK
L05512:	MOV	000004(SP), R3
L05516:	MOV	000002(SP), R2
L05522:	TST	001006(R3)
L05526:	BEQ	L05534
L05530:	JMP	L05562
; THEN
L05534:	CLR	-(SP)
L05536:	MOV	000006(SP), -(SP)
L05542:	CALL	L03462
L05546:	MOV	(SP)+, R0
L05550:	MOV	R0, 000024(R2)
L05554:	MOV	000024(R2), 000032(R2)
; END IF
L05562:	MOV	000032(R2), 000030(R2)
L05570:	MOV	000030(R2), R0
L05574:	BIC	#177776, R0
L05600:	MOV	R0, 000026(R2)
L05604:	MOV	001006(R3), R0
L05610:	INC	R0
L05612:	CMP	R0, (R3)
L05614:	BEQ	L05622
L05616:	JMP	L05630
; THEN
L05622:	MOV	#000001, 000026(R2)
; END IF
L05630:	TST	000026(R2)
L05634:	BEQ	L05642
L05636:	JMP	L05666
; THEN
L05642:	CLR	-(SP)
L05644:	MOV	000006(SP), -(SP)
L05650:	CALL	L03462
L05654:	MOV	(SP)+, R0
L05656:	MOV	R0, 000034(R2)
L05662:	JMP	L05706
; ELSE
L05666:	CLR	-(SP)
L05670:	MOV	000006(SP), -(SP)
L05674:	CALL	L03350
L05700:	MOV	(SP)+, R0
L05702:	MOV	R0, 000034(R2)
; END IF
L05706:	MOV	000024(R2), R0
L05712:	ADD	#177776, R0
L05716:	ADD	001006(R3), R0
L05722:	MOV	R0, 000032(R2)
L05726:	MOV	(SP), 000004(SP)
L05732:	ADD	#000004, SP
L05736:	RETURN
;
L05740:	CMP	-(SP), -(SP)
L05742:	CALL	L53046			; STKCHK
L05746:	MOV	000010(SP), R3
L05752:	MOV	000006(SP), R2
L05756:	CLR	-(SP)
L05760:	MOV	000012(SP), -(SP)
L05764:	CALL	L03462
L05770:	MOV	(SP)+, R0
L05772:	MOV	R0, (SP)
L05774:	CLR	-(SP)
L05776:	MOV	000002(SP), -(SP)
L06002:	CALL	L05122
L06006:	MOV	(SP)+, R0
L06010:	BIC	#177600, R0
L06014:	MOV	R0, 000002(SP)
L06020:	MOV	000006(SP), R0
L06024:	MOVB	000002(SP), 000036(R0)
L06032:	CLR	-(SP)
L06034:	MOV	000002(SP), -(SP)
L06040:	CALL	L05122
L06044:	MOV	(SP)+, R0
L06046:	TST	R0
L06050:	BPL	006054
L06052:	DEC	R0
L06054:	ASR	R0
L06056:	ASR	R0
L06060:	ASR	R0
L06062:	ASR	R0
L06064:	ASR	R0
L06066:	ASR	R0
L06070:	ASR	R0
L06072:	BPL	006076
L06074:	INC	R0
L06076:	MOV	R0, 000040(R2)
L06102:	CLR	-(SP)
L06104:	MOV	000002(SP), -(SP)
L06110:	CALL	L05160
L06114:	MOV	(SP)+, R0
L06116:	ADD	#177774, R0
L06122:	ADD	000024(R2), R0
L06126:	MOV	R0, 000042(R2)
L06132:	MOV	#L06742, R0
L06136:	MOV	(R0)+, 000002(R2)
L06142:	MOV	(R0)+, 000004(R2)
L06146:	MOV	(R0)+, 000006(R2)
L06152:	MOV	#L06762, -(SP)
L06156:	CALL	L52316			; PSHSET
L06162:	CLR	-(SP)
L06164:	MOVB	000036(R2), (SP)
L06170:	CALL	L52134			; DOIN
L06174:	BNE	L06202
L06176:	JMP	L06226
; THEN
L06202:	MOV	R3, -(SP)
L06204:	MOV	R2, -(SP)
L06206:	MOV	000014(SP), -(SP)
L06212:	MOV	000014(SP), -(SP)
L06216:	CALL	L05216
L06222:	MOV	(SP)+, R2
L06224:	MOV	(SP)+, R3
; END IF
L06226:	CLR	000044(R2)
L06232:	MOV	#L06752, -(SP)
L06236:	CALL	L52316			; PSHSET
L06242:	CLR	-(SP)
L06244:	MOVB	000036(R2), (SP)
L06250:	CALL	L52134			; DOIN
L06254:	BNE	L06262
L06256:	JMP	L06302
; THEN
L06262:	CLR	-(SP)
L06264:	MOV	000012(SP), -(SP)
L06270:	CALL	L03462
L06274:	MOV	(SP)+, R0
L06276:	MOV	R0, 000044(R2)
; END IF
L06302:	CMPB	000036(R2), #000017
L06310:	BEQ	L06316
L06312:	JMP	L06726
; DO
L06316:	MOV	000400(R5), 000046(R2)
L06324:	INC	000400(R5)
L06330:	CMP	000400(R5), #000024
L06336:	BGT	L06344
L06340:	JMP	L06352
; THEN
L06344:	MOV	#000001, 000400(R5)
; END IF
L06352:	CLR	-(SP)
L06354:	MOV	000012(SP), -(SP)
L06360:	CALL	L03350
L06364:	MOV	(SP)+, R0
L06366:	MOV	R0, 000002(SP)
L06372:	MOV	000400(R5), R1
L06376:	CMP	R1, #000001		; 1
L06402:	BLT	L06412
L06404:	CMP	R1, #000024		; 20.
L06410:	BLE	L06416
L06412:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L06416:	MOV	R1, -(SP)
L06420:	MOV	#000014, -(SP)
L06424:	CALL	L52624			; UNSMUL
L06430:	MOV	R5, R1
L06432:	ADD	(SP)+, R1
L06434:	ADD	#000004, R1
L06440:	MOV	000002(SP), (R1)
L06444:	CMP	000002(SP), #000016
L06452:	BEQ	L06460
L06454:	JMP	L06542
; THEN
L06460:	MOV	R3, -(SP)
L06462:	MOV	R2, -(SP)
L06464:	MOV	R1, -(SP)
L06466:	MOV	000016(SP), -(SP)
L06472:	MOV	000016(SP), -(SP)
L06476:	CALL	L05216
L06502:	MOV	(SP)+, R1
L06504:	MOV	(SP)+, R2
L06506:	MOV	(SP)+, R3
L06510:	MOV	000006(SP), R0
L06514:	MOV	000002(R0), 000002(R1)
L06522:	MOV	000004(R0), 000004(R1)
L06530:	MOV	000006(R0), 000006(R1)
L06536:	JMP	L06656
; ELSE
L06542:	CMP	000002(SP), #000017
L06550:	BEQ	L06556
L06552:	JMP	L06622
; THEN
L06556:	CLR	-(SP)
L06560:	MOV	000012(SP), -(SP)
L06564:	CALL	L03350
L06570:	MOV	(SP)+, R0
L06572:	MOV	R0, 000010(R1)
L06576:	CLR	-(SP)
L06600:	MOV	000012(SP), -(SP)
L06604:	CALL	L03462
L06610:	MOV	(SP)+, R0
L06612:	MOV	R0, 000012(R1)
L06616:	JMP	L06656
; ELSE
L06622:	CMP	000002(SP), #000020
L06630:	BEQ	L06636
L06632:	JMP	L06656
; THEN
L06636:	CLR	-(SP)
L06640:	MOV	000012(SP), -(SP)
L06644:	CALL	L03462
L06650:	MOV	(SP)+, R0
L06652:	MOV	R0, 000012(R1)
; END IF
L06656:	CMP	000002(SP), #000012
L06664:	BEQ	L06672
L06666:	CLR	R0
L06670:	BR	L06676
L06672:	MOV	#000001, R0
L06676:	CMP	000002(SP), #000013
L06704:	BEQ	L06712
L06706:	CLR	R1
L06710:	BR	L06716
L06712:	MOV	#000001, R1
L06716:	BISB	R0, R1
L06720:	BNE	L06726
L06722:	JMP	L06324
; END OF LOOP
L06726:	MOV	000004(SP), 000010(SP)
L06734:	ADD	#000010, SP
L06740:	RETURN
;
L06742:	.ASCIZ	/******/<0>
; Множество
L06752:	.WORD	060752
L06754:	.WORD	0
L06756:	.WORD	0
L06760:	.WORD	0
; Множество
L06762:	.WORD	070364
L06764:	.WORD	0
L06766:	.WORD	0
L06770:	.WORD	0
;
L06772:	CALL	L53046			; STKCHK
L06776:	MOV	R5, R3
L07000:	ADD	#000402, R3
L07004:	MOV	R5, R2
L07006:	ADD	#002436, R2
L07012:	MOVB	002426(R5), R0
L07016:	COM	R0
L07020:	MOVB	001010(R3), R1
L07024:	BICB	R0, R1
L07026:	BNE	L07034
L07030:	JMP	L07050
; THEN
L07034:	MOVB	#000004, (R2)
L07040:	CLRB	002426(R5)
L07044:	JMP	L10062
; ELSE
L07050:	TSTB	001010(R3)
L07054:	BNE	L07062
L07056:	JMP	L07160
; THEN
L07062:	MOV	R5, R0
L07064:	ADD	#001414, R0
L07070:	MOV	R5, R1
L07072:	ADD	#000402, R1
L07076:	MOV	#000405, R4
L07102:	MOV	(R0)+, (R1)+
L07104:	DEC	R4
L07106:	BNE	L07102
L07110:	CMPB	000002(R3), #000006
L07116:	BNE	L07124
L07120:	JMP	L07154
; THEN
L07124:	MOV	R3, -(SP)
L07126:	MOV	R2, -(SP)
L07130:	MOV	000006(SP), -(SP)
L07134:	MOV	R5, R0
L07136:	ADD	#001414, R0
L07142:	MOV	R0, -(SP)
L07144:	CALL	L03004
L07150:	MOV	(SP)+, R2
L07152:	MOV	(SP)+, R3
; END IF
L07154:	JMP	L07050			; END OF LOOP
;
L07160:	MOVB	000002(R3), (R2)
L07164:	MOVB	000002(R3), R0
L07170:	SUB	#000001, R0
L07174:	BGE	L07202
L07176:	JMP	L10042
; THEN
L07202:	CMP	#000005, R0
L07206:	BGE	L07214
L07210:	JMP	L10042
; THEN
L07214:	ASL	R0
L07216:	JMP	@L10046(R0)
;
L07222:	MOV	R3, -(SP)
L07224:	MOV	R2, -(SP)
L07226:	MOV	R5, R0
L07230:	ADD	#000402, R0
L07234:	MOV	R0, -(SP)
L07236:	MOV	R5, R0
L07240:	ADD	#002436, R0
L07244:	MOV	R0, -(SP)
L07246:	CALL	L05306
L07252:	MOV	(SP)+, R2
L07254:	MOV	(SP)+, R3
L07256:	JMP	L10062
;
L07262:	MOVB	#000001, 001010(R3)
L07270:	CLRB	002426(R5)
L07274:	JMP	L10062
;
L07300:	MOV	R3, -(SP)
L07302:	MOV	R2, -(SP)
L07304:	MOV	R5, R0
L07306:	ADD	#000402, R0
L07312:	MOV	R0, -(SP)
L07314:	MOV	R5, R0
L07316:	ADD	#002436, R0
L07322:	MOV	R0, -(SP)
L07324:	CALL	L05506
L07330:	MOV	(SP)+, R2
L07332:	MOV	(SP)+, R3
L07334:	MOV	R5, R1
L07336:	ADD	#001414, R1
L07342:	MOVB	002426(R5), R0
L07346:	COMB	R0
L07350:	BICB	#177776, R0
L07354:	MOVB	001010(R1), R4
L07360:	COM	R4
L07362:	BICB	R4, R0
L07364:	BNE	L07372
L07366:	JMP	L07426
; THEN
L07372:	MOV	R3, -(SP)
L07374:	MOV	R2, -(SP)
L07376:	MOV	R1, -(SP)
L07400:	MOV	000010(SP), -(SP)
L07404:	MOV	R5, R0
L07406:	ADD	#001414, R0
L07412:	MOV	R0, -(SP)
L07414:	CALL	L03004
L07420:	MOV	(SP)+, R1
L07422:	MOV	(SP)+, R2
L07424:	MOV	(SP)+, R3
; END IF
L07426:	CMPB	000002(R1), #000004
L07434:	BEQ	L07442
L07436:	JMP	L07750
; THEN
L07442:	MOVB	002426(R5), R0
L07446:	COMB	R0
L07450:	BICB	#177776, R0
L07454:	BNE	L07462
L07456:	JMP	L07530
; THEN
L07462:	MOV	R3, -(SP)
L07464:	MOV	R2, -(SP)
L07466:	MOV	R1, -(SP)
L07470:	MOV	R5, R0
L07472:	ADD	#001414, R0
L07476:	MOV	R0, -(SP)
L07500:	MOV	R5, R0
L07502:	ADD	#002436, R0
L07506:	MOV	R0, -(SP)
L07510:	CALL	L05740
L07514:	MOV	(SP)+, R1
L07516:	MOV	(SP)+, R2
L07520:	MOV	(SP)+, R3
L07522:	MOVB	#000001, 002426(R5)
; END IF
L07530:	MOV	#L10074, -(SP)
L07534:	CALL	L52316			; PSHSET
L07540:	CLR	-(SP)
L07542:	MOVB	000036(R2), (SP)
L07546:	CALL	L52134			; DOIN
L07552:	BNE	L07560
L07554:	CLR	R0
L07556:	BR	L07564
L07560:	MOV	#000001, R0
L07564:	COMB	R0
L07566:	MOVB	002426(R5), R4
L07572:	BICB	R0, R4
L07574:	BNE	L07602
L07576:	JMP	L07750
; THEN
L07602:	CMP	000042(R2), 000030(R2)
L07610:	BEQ	L07616
L07612:	JMP	L07674
; THEN
L07616:	CMP	000040(R2), #000001
L07624:	BEQ	L07632
L07626:	JMP	L07660
; THEN
L07632:	TST	000026(R2)
L07636:	BEQ	L07644
L07640:	JMP	L07660
; THEN
L07644:	DEC	001410(R5)
L07650:	CLRB	001412(R5)
L07654:	DEC	002470(R5)
; END IF
L07660:	MOVB	#000004, (R2)
L07664:	CLRB	002426(R5)
L07670:	JMP	L07750
L07674:	MOV	000030(R2), R0
L07700:	INC	R0
L07702:	CMP	000042(R2), R0
L07706:	BEQ	L07714
L07710:	JMP	L07750
L07714:	TST	000026(R2)
L07720:	BEQ	L07726
L07722:	JMP	L07750
L07726:	MOV	#000001, 000026(R2)
L07734:	DEC	001410(R5)
L07740:	CLRB	001412(R5)
L07744:	DEC	002470(R5)
L07750:	JMP	L10062
;
L07754:	TSTB	002426(R5)
L07760:	BNE	L07766
L07762:	JMP	L07776
; THEN
L07766:	CLRB	002426(R5)
L07772:	JMP	L10032
; ELSE
L07776:	MOV	R3, -(SP)
L10000:	MOV	R2, -(SP)
L10002:	MOV	R5, R0
L10004:	ADD	#000402, R0
L10010:	MOV	R0, -(SP)
L10012:	MOV	R5, R0
L10014:	ADD	#002436, R0
L10020:	MOV	R0, -(SP)
L10022:	CALL	L05740
L10026:	MOV	(SP)+, R2
L10030:	MOV	(SP)+, R3
; END IF
L10032:	JMP	L10062
L10036:	JMP	L10062
L10042:	JMP	L10062
; Таблица переходов
L10046:	.WORD	L07222
L10050:	.WORD	L07262
L10052:	.WORD	L07300
L10054:	.WORD	L07754
L10056:	.WORD	L10042
L10060:	.WORD	L10036
;
L10062:	MOV	(SP), 000002(SP)
L10066:	ADD	#000002, SP
L10072:	RETURN
; Множество
L10074:	.WORD	171176
L10076:	.WORD	0
L10100:	.WORD	0
L10102:	.WORD	0
;
L10104:	CALL	L53046			; STKCHK
L10110:	MOV	000002(SP), -(SP)
L10114:	CALL	L06772
L10120:	MOVB	002556(R5), 002506(R5)
L10126:	MOV	002560(R5), 002510(R5)
L10134:	MOV	002562(R5), 002512(R5)
L10142:	MOV	002564(R5), 002514(R5)
L10150:	MOVB	002566(R5), 002516(R5)
L10156:	MOV	R5, R0
L10160:	ADD	#002570, R0
L10164:	MOV	R0, -(SP)
L10166:	CALL	L52316			; PSHSET
L10172:	MOV	R5, R0
L10174:	ADD	#002520, R0
L10200:	MOV	R0, -(SP)
L10202:	CALL	L52360			; POPSET
L10206:	MOV	002600(R5), 002530(R5)
L10214:	MOV	002602(R5), 002532(R5)
L10222:	MOV	002604(R5), 002534(R5)
L10230:	MOV	002606(R5), 002536(R5)
L10236:	MOV	002610(R5), 002540(R5)
L10244:	MOV	002612(R5), 002542(R5)
L10252:	MOVB	002614(R5), 002544(R5)
L10260:	MOV	002616(R5), 002546(R5)
L10266:	MOV	002620(R5), 002550(R5)
L10274:	MOV	002622(R5), 002552(R5)
L10302:	MOV	002624(R5), 002554(R5)
L10310:	MOV	R5, R0
L10312:	ADD	#002626, R0
L10316:	MOV	R5, R1
L10320:	ADD	#002556, R1
L10324:	MOV	#000024, R2
L10330:	MOV	(R0)+, (R1)+
L10332:	DEC	R2
L10334:	BNE	L10330
L10336:	MOV	R5, R0
L10340:	ADD	#002436, R0
L10344:	MOV	R5, R1
L10346:	ADD	#002626, R1
L10352:	MOV	#000024, R2
L10356:	MOV	(R0)+, (R1)+
L10360:	DEC	R2
L10362:	BNE	L10356
L10364:	MOV	(SP), 000002(SP)
L10370:	ADD	#000002, SP
L10374:	RETURN
;
L10376:	JMP	L01000
L10402:	JMP	L01304
L10406:	JMP	L01522			; Процедура чтения
L10412:	JMP	L02020			; Процедура записи
L10416:	JMP	L02276
L10422:	JMP	L03004
L10426:	JMP	L05122
L10432:	JMP	L05160
L10436:	JMP	L10104
;
; Процедура, 1 слово на стеке
L10442:	CALL	L53046			; STKCHK
; IF VAR2676 = 2
L10446:	CMP	002676(R5), #000002
L10454:	BEQ	L10462
L10456:	JMP	L10504
; THEN
L10462:	MOV	R5, R0
L10464:	ADD	#002700, R0		; VAR2700
L10470:	MOV	R0, -(SP)
L10472:	MOVB	000004(SP), R0		; SP002
L10476:	MOV	R0, -(SP)
L10500:	CALL	L10412			; Процедура записи
; END IF
L10504:	MOV	(SP), 000002(SP)
L10510:	ADD	#000002, SP
L10514:	RETURN
;
L10516:	CALL	L53046			; STKCHK
L10522:	MOV	#000015, -(SP)
L10526:	CALL	L10442
L10532:	MOV	#000012, -(SP)
L10536:	CALL	L10442
L10542:	RETURN
;
L10544:	CALL	L53046			; STKCHK
L10550:	MOV	#000011, -(SP)
L10554:	CALL	L10442
L10560:	RETURN
;
L10562:	CLR	-(SP)
L10564:	CALL	L53046			; STKCHK
L10570:	MOV	#000001, (SP)
;
L10574:	CMP	(SP), #000006
L10600:	BLT	L10606
L10602:	CLR	R0
L10604:	BR	L10612
L10606:	MOV	#000001, R0
L10612:	MOV	(SP), R1
L10614:	CMP	R1, #000001		; 1
L10620:	BLT	L10630
L10622:	CMP	R1, #000006		; 6
L10626:	BLE	L10634
L10630:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L10634:	ADD	SP, R1
L10636:	CMPB	000003(R1), #000134
L10644:	BNE	L10652
L10646:	CLR	R1
L10650:	BR	L10656
L10652:	MOV	#000001, R1
L10656:	COMB	R1
L10660:	BICB	R1, R0
L10662:	BNE	L10670
L10664:	JMP	L11016
L10670:	MOV	(SP), R0
L10672:	CMP	R0, #000001		; 1
L10676:	BLT	L10706
L10700:	CMP	R0, #000006		; 6
L10704:	BLE	L10712
L10706:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L10712:	ADD	SP, R0
L10714:	CLR	-(SP)
L10716:	MOVB	000003(R0), (SP)
L10722:	CALL	L10442
L10726:	INC	(SP)
L10730:	CMP	(SP), #000006
L10734:	BEQ	L10742
L10736:	CLR	R0
L10740:	BR	L10746
L10742:	MOV	#000001, R0
L10746:	CMPB	000011(SP), #000134
L10754:	BNE	L10762
L10756:	CLR	R1
L10760:	BR	L10766
L10762:	MOV	#000001, R1
L10766:	COMB	R1
L10770:	BICB	R1, R0
L10772:	BNE	L11000
L10774:	JMP	L11012
L11000:	CLR	-(SP)
L11002:	MOVB	000013(SP), (SP)
L11006:	CALL	L10442
L11012:	JMP	L10574
;
L11016:	MOV	000002(SP), 000010(SP)
L11024:	ADD	#000010, SP
L11030:	RETURN
;
; Процдура
; На стеке одно слово
L11032:	SUB	#000020, SP
L11036:	CALL	L53046			; STKCHK
; IF
L11042:	TST	000022(SP)
L11046:	BEQ	L11054
L11050:	JMP	L11070
; THEN
L11054:	MOV	#000060, -(SP)
L11060:	CALL	L10442
L11064:	JMP	L11474
; ELSE
L11070:	MOV	000022(SP), (SP)
; FOR
L11074:	MOV	SP, R0
L11076:	ADD	#000002, R0
L11102:	MOV	R0, -(SP)
L11104:	MOV	#000006, -(SP)		; 6
L11110:	MOV	#000001, -(SP)		; 1
L11114:	MOV	000002(SP), @000004(SP)
L11122:	CMP	@000004(SP), (SP)
L11126:	BGE	L11134
L11130:	JMP	L11224
; DO
L11134:	MOV	000010(SP), R0
L11140:	CMP	R0, #000001		; 1
L11144:	BLT	L11154
L11146:	CMP	R0, #000006		; 6
L11152:	BLE	L11160
L11154:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L11160:	ASL	R0
L11162:	ADD	SP, R0
L11164:	MOV	000006(SP), R1
L11170:	BIC	#177770, R1
L11174:	MOV	R1, 000010(R0)
L11200:	ASR	000006(SP)
L11204:	ASR	000006(SP)
L11210:	ASR	000006(SP)
; NEXT
L11214:	DEC	@000004(SP)
L11220:	JMP	L11122
L11224:	ADD	#000006, SP
; END FOR
L11230:	MOV	#000001, 000002(SP)
L11236:	MOV	000002(SP), R0
L11242:	CMP	R0, #000001		; 1
L11246:	BLT	L11256
L11250:	CMP	R0, #000006		; 6
L11254:	BLE	L11262
L11256:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L11262:	ASL	R0
L11264:	ADD	SP, R0
L11266:	TST	000002(R0)
L11272:	BEQ	L11300
L11274:	JMP	L11310
L11300:	INC	000002(SP)
L11304:	JMP	L11236			; CONTINUE LOOP
; IF
L11310:	CMP	000002(SP), #000006
L11316:	BLE	L11324
L11320:	JMP	L11474
; THEN
L11324:	CMP	000002(SP), #000001
L11332:	BEQ	L11340
L11334:	JMP	L11416
; THEN
L11340:	MOV	000002(SP), R0
L11344:	CMP	R0, #000001		; 1
L11350:	BLT	L11360
L11352:	CMP	R0, #000006		; 6
L11356:	BLE	L11364
L11360:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L11364:	ASL	R0
L11366:	ADD	SP, R0
L11370:	MOV	000002(R0), R0
L11374:	BIC	#177776, R0
L11400:	ADD	#000060, R0
L11404:	MOV	R0, -(SP)
L11406:	CALL	L10442
L11412:	JMP	L11464
; ELSE
L11416:	MOV	000002(SP), R0
L11422:	CMP	R0, #000001		; 1
L11426:	BLT	L11436
L11430:	CMP	R0, #000006		; 6
L11434:	BLE	L11442
L11436:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L11442:	ASL	R0
L11444:	ADD	SP, R0
L11446:	MOV	000002(R0), R0
L11452:	ADD	#000060, R0
L11456:	MOV	R0, -(SP)
L11460:	CALL	L10442
; END IF
L11464:	INC	000002(SP)
L11470:	JMP	L11310
; END IF
L11474:	MOV	000020(SP), 000022(SP)
L11502:	ADD	#000022, SP
L11506:	RETURN
;
L11510:	CALL	L53046			; STKCHK
L11514:	CMP	000002(SP), #100000
L11522:	BLOS	L11530
L11524:	JMP	L11544
; THEN
L11530:	MOV	000002(SP), -(SP)
L11534:	CALL	L11032
L11540:	JMP	L11570
; ELSE
L11544:	MOV	#000055, -(SP)
L11550:	CALL	L10442
L11554:	MOV	000002(SP), R0
L11560:	NEG	R0
L11562:	MOV	R0, -(SP)
L11564:	CALL	L11032
; END IF
L11570:	MOV	(SP), 000002(SP)
L11574:	ADD	#000002, SP
L11600:	RETURN
;
; Процедура
; На стеке - обозначение команды, массив из 6 char
; SP00, SP02: integer
L11602:	CMP	-(SP), -(SP)
L11604:	CALL	L53046			; STKCHK
; IF SP06 <> '      '
L11610:	MOV	#L12046, R0		; "      "
L11614:	MOV	SP, R1
L11616:	ADD	#000006, R1		; SP06
L11622:	MOV	#000006, R2
L11626:	CMPB	(R0)+, (R1)+
L11630:	BNE	L11636
L11632:	DEC	R2
L11634:	BNE	L11626
L11636:	BNE	L11644
L11640:	JMP	L12032
; THEN
L11644:	MOV	#000006, (SP)
L11650:	MOV	(SP), R0
L11652:	CMP	R0, #000001		; 1
L11656:	BLT	L11666
L11660:	CMP	R0, #000006		; 6
L11664:	BLE	L11672
L11666:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L11672:	ADD	SP, R0
L11674:	CMPB	000005(R0), #000040
L11702:	BEQ	L11710
L11704:	JMP	L11716
L11710:	DEC	(SP)
L11712:	JMP	L11650
L11716:	MOV	SP, R0
L11720:	ADD	#000002, R0
L11724:	MOV	R0, -(SP)
L11726:	MOV	#000001, -(SP)
L11732:	MOV	000004(SP), -(SP)
L11736:	MOV	000002(SP), @000004(SP)
L11744:	CMP	@000004(SP), (SP)
L11750:	BLE	L11756
L11752:	JMP	L12026
; DO
L11756:	MOV	000010(SP), R0
L11762:	CMP	R0, #000001		; 1
L11766:	BLT	L11776
L11770:	CMP	R0, #000006		; 6
L11774:	BLE	L12002
L11776:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L12002:	ADD	SP, R0
L12004:	CLR	-(SP)
L12006:	MOVB	000013(R0), (SP)
L12012:	CALL	L10442
L12016:	INC	@000004(SP)
L12022:	JMP	L11744
; END OF LOOP
L12026:	ADD	#000006, SP
; END IF
L12032:	MOV	000004(SP), 000012(SP)
L12040:	ADD	#000012, SP
L12044:	RETURN
;
L12046:	.WORD	020040			; "  "
L12050:	.WORD	020040			; "  "
L12052:	.WORD	020040			; "  "
L12054:	.WORD	0
;
L12056:	CALL	L53046			; STKCHK
L12062:	MOV	#012252, R0
L12066:	MOV	SP, R1
L12070:	ADD	#000004, R1
L12074:	MOV	#000006, R2
L12100:	CMPB	(R0)+, (R1)+
L12102:	BNE	L12110
L12104:	DEC	R2
L12106:	BNE	L12100
L12110:	BNE	L12116
L12112:	JMP	L12144
L12116:	SUB	#000006, SP
L12122:	MOV	SP, R0
L12124:	MOV	000012(SP), (R0)+
L12130:	MOV	000014(SP), (R0)+
L12134:	MOV	000016(SP), (R0)+
L12140:	CALL	L11602
L12144:	TST	000002(SP)
L12150:	BGT	L12156
L12152:	JMP	L12202
; THEN
L12156:	MOV	#000053, -(SP)
L12162:	CALL	L10442
L12166:	MOV	000002(SP), -(SP)
L12172:	CALL	L11032
L12176:	JMP	L12240
; ELSE
L12202:	TST	000002(SP)
L12206:	BLT	L12214
L12210:	JMP	L12240
; THEN
L12214:	MOV	#000055, -(SP)
L12220:	CALL	L10442
L12224:	MOV	000002(SP), R0
L12230:	NEG	R0
L12232:	MOV	R0, -(SP)
L12234:	CALL	L11032
; END IF
L12240:	MOV	(SP), 000010(SP)
L12244:	ADD	#000010, SP
L12250:	RETURN
;
L12252:	CMP	R0, @-(SP)
L12254:	BIC	(R1), R1
L12256:	CMP	@000000(R1), (R3)+
L12262:	CLR	-(SP)
L12264:	CALL	L53046			; STKCHK
L12270:	CLR	004370(R5)
L12274:	MOV	#012674, R0
L12300:	MOV	SP, R1
L12302:	ADD	#000004, R1
L12306:	MOV	#000006, R2
L12312:	CMPB	(R0)+, (R1)+
L12314:	BNE	L12322
L12316:	DEC	R2
L12320:	BNE	L12312
L12322:	BNE	L12330
L12324:	JMP	L12660
; THEN
L12330:	CLRB	(SP)
L12332:	CMP	004370(R5), 004366(R5)
L12340:	BLT	L12346
L12342:	CLR	R0
L12344:	BR	L12352
L12346:	MOV	#000001, R0
L12352:	MOVB	(SP), R1
L12354:	COMB	R1
L12356:	BICB	#177776, R1
L12362:	COMB	R1
L12364:	BICB	R1, R0
L12366:	BNE	L12374
L12370:	JMP	L12510
; THEN
L12374:	INC	004370(R5)
L12400:	MOV	004370(R5), R0
L12404:	CMP	R0, #000000		; 0
L12410:	BLT	L12420
L12412:	CMP	R0, #000030		; 24.
L12416:	BLE	L12424
L12420:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L12424:	MOV	R0, -(SP)
L12426:	MOV	#000014, -(SP)		; 12.
L12432:	CALL	L52624			; UNSMUL
L12436:	MOV	R5, R0
L12440:	ADD	(SP)+, R0
L12442:	MOV	SP, R1
L12444:	ADD	#000004, R1
L12450:	ADD	#003712, R0
L12454:	MOV	#000006, R2
L12460:	CMPB	(R1)+, (R0)+
L12462:	BNE	L12470
L12464:	DEC	R2
L12466:	BNE	L12460
L12470:	BEQ	L12476
L12472:	CLR	R0
L12474:	BR	L12502
L12476:	MOV	#000001, R0
L12502:	MOVB	R0, (SP)
L12504:	JMP	L12332			; CONTINUE LOOP
; END OF LOOP
L12510:	MOVB	(SP), R0
L12512:	COMB	R0
L12514:	BICB	#177776, R0
L12520:	BNE	L12526
L12522:	JMP	L12660
; THEN
L12526:	CMP	004366(R5), #000030
L12534:	BLT	L12542
L12536:	JMP	L12654
; THEN
L12542:	INC	004366(R5)
L12546:	MOV	004366(R5), 004370(R5)
L12554:	MOV	004370(R5), R3
L12560:	CMP	R3, #000000		; 0
L12564:	BLT	L12574
L12566:	CMP	R3, #000030		; 24.
L12572:	BLE	L12600
L12574:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L12600:	MOV	R3, -(SP)
L12602:	MOV	#000014, -(SP)		; 12.
L12606:	CALL	L52624			; UNSMUL
L12612:	MOV	R5, R3
L12614:	ADD	(SP)+, R3
L12616:	ADD	#003712, R3
L12622:	MOV	R3, R0
L12624:	MOV	000004(SP), (R0)+
L12630:	MOV	000006(SP), (R0)+
L12634:	MOV	000010(SP), (R0)+
L12640:	CLR	000010(R3)
L12644:	CLR	000012(R3)
L12650:	JMP	L12660
; ELSE
L12654:	CLR	004370(R5)
; END IF
L12660:	MOV	000002(SP), 000010(SP)
L12666:	ADD	#000010, SP
L12672:	RETURN
;
L12674:	.WORD	020056
L12676:	.WORD	041101
L12700:	.WORD	027123
L12702:	.WORD	000000
;
L12704:	JSR	R0, L53000		; SVREG
L12710:	SUB	#000006, SP
L12714:	MOV	SP, R0
L12716:	MOV	000022(SP), (R0)+
L12722:	MOV	000024(SP), (R0)+
L12726:	MOV	000026(SP), (R0)+
L12732:	CALL	L12262
L12736:	TST	004370(R5)
L12742:	BNE	L12750
L12744:	JMP	L13072
; THEN
L12750:	MOV	004370(R5), R0
L12754:	CMP	R0, #000000		; 0
L12760:	BLT	L12770
L12762:	CMP	R0, #000030		; 24.
L12766:	BLE	L12774
L12770:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L12774:	MOV	R0, -(SP)
L12776:	MOV	#000014, -(SP)		; 12.
L13002:	CALL	L52624			; UNSMUL
L13006:	MOV	R5, R0
L13010:	ADD	(SP)+, R0
L13012:	MOV	#L13110, R1		; "      "
L13016:	ADD	#003712, R0
L13022:	MOV	#000006, R2
L13026:	CMPB	(R1)+, (R0)+
L13030:	BNE	L13036
L13032:	DEC	R2
L13034:	BNE	L13026
L13036:	BEQ	L13044
L13040:	JMP	L13056
; THEN
L13044:	MOVB	#000056, 000022(SP)
L13052:	JMP	L13072
; ELSE
L13056:	MOV	004370(R5), R0
L13062:	ADD	#000100, R0
L13066:	MOVB	R0, 000022(SP)
; END IF
L13072:	JSR	R0, L53030		; UNREG
L13076:	MOV	(SP), 000006(SP)
L13102:	ADD	#000006, SP
L13106:	RETURN
;
L13110:	.WORD	020040			; "  "
L13112:	.WORD	020040			; "  "
L13114:	.WORD	020040			; "  "
L13116:	.WORD	0
;
; Функция
L13120:	CLR	-(SP)
L13122:	CALL	L53046			; STKCHK
; IF
L13126:	CMP	007200(R5), #000144	; VAR7200 < 100. ?
L13134:	BLT	L13142
L13136:	JMP	L13274
; THEN
L13142:	INC	007200(R5)		; INC(VAR7200)
L13146:	MOV	007200(R5), 007202(R5)	; VAR7202 := VAR7200
L13154:	MOV	007202(R5), R3
L13160:	CMP	R3, #000000		; 0
L13164:	BLT	L13174
L13166:	CMP	R3, #000144		; 100.
L13172:	BLE	L13200
L13174:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L13200:	MOV	R3, -(SP)
L13202:	MOV	#000016, -(SP)		; 14.
L13206:	CALL	L52624			; UNSMUL
L13212:	MOV	R5, R3
L13214:	ADD	(SP)+, R3
L13216:	ADD	#004372, R3		; VAR4372[VAR7202]
L13222:	MOV	R3, R0
L13224:	MOV	000014(SP), (R0)+	; +000
L13230:	MOV	000016(SP), (R0)+	; +002
L13234:	MOV	000020(SP), (R0)+	; +004
L13240:	MOV	000006(SP), 000006(R3)
L13246:	MOV	000010(SP), 000010(R3)
L13254:	MOV	000012(SP), 000012(R3)
L13262:	MOV	000004(SP), 000014(R3)
L13270:	JMP	L13300
; ELSE
L13274:	CLR	007202(R5)		; VAR7202 := 0
; END IF
L13300:	MOV	000002(SP), 000020(SP)
L13306:	ADD	#000020, SP
L13312:	RETURN
;
L13314:	CLR	-(SP)
L13316:	JSR	R0, L53000		; SVREG
L13322:	SUB	#000006, SP
L13326:	MOV	SP, R0
L13330:	MOV	000026(SP), (R0)+
L13334:	MOV	000030(SP), (R0)+
L13340:	MOV	000032(SP), (R0)+
L13344:	CALL	L12262
L13350:	CLR	052350(R5)
L13354:	CLRB	000012(SP)
; DO
L13360:	MOV	052350(R5), 052352(R5)
L13366:	MOV	052350(R5), R3
L13372:	CMP	R3, #000000		; 0
L13376:	BLT	L13406
L13400:	CMP	R3, #001750		; 1000.
L13404:	BLE	L13412
L13406:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L13412:	MOV	R3, -(SP)
L13414:	MOV	#000022, -(SP)		; 18.
L13420:	CALL	L52624			; UNSMUL
L13424:	MOV	R5, R3
L13426:	ADD	(SP)+, R3
L13430:	ADD	#007204, R3
L13434:	MOV	004370(R5), R0
L13440:	SUB	000004(R3), R0
L13444:	MOV	R0, 052354(R5)
L13450:	TST	052354(R5)
L13454:	BLT	L13462
L13456:	JMP	L13472
; THEN
L13462:	MOV	(R3), 052350(R5)
L13466:	JMP	L13606
; ELSE
L13472:	TST	052354(R5)
L13476:	BGT	L13504
L13500:	JMP	L13516
L13504:	MOV	000002(R3), 052350(R5)
L13512:	JMP	L13606
L13516:	MOV	000016(SP), R0
L13522:	SUB	000006(R3), R0
L13526:	MOV	R0, 052354(R5)
L13532:	TST	052354(R5)
L13536:	BLT	L13544
L13540:	JMP	L13554
; THEN
L13544:	MOV	(R3), 052350(R5)
L13550:	JMP	L13606
; ELSE
L13554:	TST	052354(R5)
L13560:	BGT	L13566
L13562:	JMP	L13600
; THEN
L13566:	MOV	000002(R3), 052350(R5)
L13574:	JMP	L13606
; ELSE
L13600:	MOVB	#000001, 000012(SP)
; END IF
L13606:	CMP	052350(R5), 052352(R5)
L13614:	BLE	L13622
L13616:	CLR	R0
L13620:	BR	L13626
L13622:	MOV	#000001, R0
L13626:	BISB	000012(SP), R0
L13632:	BNE	L13640
L13634:	JMP	L13360			; CONTINUE LOOP
; END OF LOOP
L13640:	MOVB	000012(SP), 000026(SP)
L13646:	JSR	R0, L53030		; UNREG
L13652:	MOV	000002(SP), 000012(SP)
L13660:	ADD	#000012, SP
L13664:	RETURN
;
L13666:	CALL	L53046			; STKCHK
L13672:	SUB	#000006, SP
L13676:	MOV	SP, R0
L13700:	MOV	000012(SP), (R0)+
L13704:	MOV	000014(SP), (R0)+
L13710:	MOV	000016(SP), (R0)+
L13714:	CALL	L12262
L13720:	MOV	004370(R5), R0
L13724:	CMP	R0, #000000		; 0
L13730:	BLT	L13740
L13732:	CMP	R0, #000030		; 24.
L13736:	BLE	L13744
L13740:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L13744:	MOV	R0, -(SP)
L13746:	MOV	#000014, -(SP)		; 12.
L13752:	CALL	L52624			; UNSMUL
L13756:	MOV	R5, R0
L13760:	ADD	(SP)+, R0
L13762:	CMP	000002(SP), 003720(R0)
L13770:	BLOS	L13776
L13772:	CLR	R0
L13774:	BR	L14002
L13776:	MOV	#000001, R0
L14002:	CMP	000002(SP), #077777
L14010:	BLOS	L14016
L14012:	CLR	R1
L14014:	BR	L14022
L14016:	MOV	#000001, R1
L14022:	COMB	R1
L14024:	BICB	R1, R0
L14026:	BNE	L14034
L14030:	JMP	L14564
; THEN
L14034:	CLR	-(SP)
L14036:	SUB	#000006, SP
L14042:	MOV	SP, R0
L14044:	MOV	000014(SP), (R0)+
L14050:	MOV	000016(SP), (R0)+
L14054:	MOV	000020(SP), (R0)+
L14060:	MOV	000012(SP), -(SP)
L14064:	CALL	L13314
L14070:	MOVB	(SP)+, R0
L14072:	COMB	R0
L14074:	BICB	#177776, R0
L14100:	BNE	L14106
L14102:	JMP	L14446
; THEN IF
L14106:	CMP	052346(R5), #001750	; LABELS < 1000. ?
L14114:	BLT	L14122
L14116:	JMP	L14442
; THEN
L14122:	INC	052346(R5)		; INC(LABELS)
L14126:	MOV	052346(R5), 052350(R5)	; VAR52350 := LABELS
L14134:	MOV	052350(R5), R3
L14140:	CMP	R3, #000000		; 0
L14144:	BLT	L14154
L14146:	CMP	R3, #001750		; 1000.
L14152:	BLE	L14160
L14154:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14160:	MOV	R3, -(SP)
L14162:	MOV	#000022, -(SP)		; 18.
L14166:	CALL	L52624			; UNSMUL
L14172:	MOV	R5, R3
L14174:	ADD	(SP)+, R3
L14176:	ADD	#007204, R3
L14202:	CLR	(R3)
L14204:	TST	052354(R5)
L14210:	BLT	L14216
L14212:	JMP	L14230
; THEN
L14216:	MOV	052352(R5), 000002(R3)
L14224:	JMP	L14300
; ELSE
L14230:	MOV	052352(R5), R0
L14234:	CMP	R0, #000000		; 0
L14240:	BLT	L14250
L14242:	CMP	R0, #001750		; 1000.
L14246:	BLE	L14254
L14250:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14254:	MOV	R0, -(SP)
L14256:	MOV	#000022, -(SP)		; 18.
L14262:	CALL	L52624			; UNSMUL
L14266:	MOV	R5, R0
L14270:	ADD	(SP)+, R0
L14272:	MOV	007206(R0), 000002(R3)
; END IF
L14300:	MOV	004370(R5), 000004(R3)
L14306:	MOV	000002(SP), 000006(R3)
L14314:	MOV	R5, R0
L14316:	ADD	#052356, R0
L14322:	MOV	R0, -(SP)
L14324:	CALL	L52316			; PSHSET
L14330:	MOV	R3, R0
L14332:	ADD	#000010, R0
L14336:	MOV	R0, -(SP)
L14340:	CALL	L52360			; POPSET
L14344:	MOV	052352(R5), R3
L14350:	CMP	R3, #000000		; 0
L14354:	BLT	L14364
L14356:	CMP	R3, #001750		; 1000.
L14362:	BLE	L14370
L14364:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14370:	MOV	R3, -(SP)
L14372:	MOV	#000022, -(SP)		; 18.
L14376:	CALL	L52624			; UNSMUL
L14402:	MOV	R5, R3
L14404:	ADD	(SP)+, R3
L14406:	ADD	#007204, R3
L14412:	TST	052354(R5)
L14416:	BLT	L14424
L14420:	JMP	L14434
; THEN
L14424:	MOV	052350(R5), (R3)
L14430:	JMP	L14442
; ELSE
L14434:	MOV	052350(R5), 000002(R3)
; END IF
L14442:	JMP	L14564
; ELSE
L14446:	MOV	052350(R5), R3
L14452:	CMP	R3, #000000		; 0
L14456:	BLT	L14466
L14460:	CMP	R3, #001750		; 1000.
L14464:	BLE	L14472
L14466:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14472:	MOV	R3, -(SP)
L14474:	MOV	#000022, -(SP)		; 18.
L14500:	CALL	L52624			; UNSMUL
L14504:	MOV	R5, R3
L14506:	ADD	(SP)+, R3
L14510:	ADD	#007204, R3
L14514:	MOV	R3, R0
L14516:	ADD	#000010, R0
L14522:	MOV	R0, -(SP)
L14524:	CALL	L52316			; PSHSET
L14530:	MOV	R5, R0
L14532:	ADD	#052356, R0
L14536:	MOV	R0, -(SP)
L14540:	CALL	L52316			; PSHSET
L14544:	CALL	L52236			; SETOR
L14550:	MOV	R3, R0
L14552:	ADD	#000010, R0
L14556:	MOV	R0, -(SP)
L14560:	CALL	L52360			; POPSET
; END IF
L14564:	MOV	(SP), 000010(SP)
L14570:	ADD	#000010, SP
L14574:	RETURN
;
L14576:	CALL	L53046			; STKCHK
L14602:	MOV	000002(SP), R3
L14606:	CMP	R3, #000000		; 0
L14612:	BLT	L14622
L14614:	CMP	R3, #001750		; 1000.
L14620:	BLE	L14626
L14622:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14626:	MOV	R3, -(SP)
L14630:	MOV	#000022, -(SP)		; 18.
L14634:	CALL	L52624			; UNSMUL
L14640:	MOV	R5, R3
L14642:	ADD	(SP)+, R3
L14644:	ADD	#007204, R3
L14650:	MOV	000002(R3), 052350(R5)
L14656:	CMP	052350(R5), 000002(SP)
L14664:	BGT	L14672
L14666:	JMP	L15022
; THEN
L14672:	MOV	052350(R5), R0
L14676:	CMP	R0, #000000		; 0
L14702:	BLT	L14712
L14704:	CMP	R0, #001750		; 1000.
L14710:	BLE	L14716
L14712:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14716:	MOV	R0, -(SP)
L14720:	MOV	#000022, -(SP)		; 18.
L14724:	CALL	L52624			; UNSMUL
L14730:	MOV	R5, R0
L14732:	ADD	(SP)+, R0
L14734:	TST	007204(R0)
L14740:	BNE	L14746
L14742:	JMP	L15022
; THEN
L14746:	MOV	052350(R5), R0
L14752:	CMP	R0, #000000		; 0
L14756:	BLT	L14766
L14760:	CMP	R0, #001750		; 1000.
L14764:	BLE	L14772
L14766:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L14772:	MOV	R0, -(SP)
L14774:	MOV	#000022, -(SP)		; 18.
L15000:	CALL	L52624			; UNSMUL
L15004:	MOV	R5, R0
L15006:	ADD	(SP)+, R0
L15010:	MOV	007204(R0), 052350(R5)
L15016:	JMP	L14672
;
L15022:	MOV	(SP), 000002(SP)
L15026:	ADD	#000002, SP
L15032:	RETURN
;
L15034:	CALL	L53046			; STKCHK
L15040:	CLR	-(SP)
L15042:	SUB	#000006, SP
L15046:	MOV	SP, R0
L15050:	MOV	000014(SP), (R0)+
L15054:	MOV	000016(SP), (R0)+
L15060:	MOV	000020(SP), (R0)+
L15064:	MOV	000012(SP), -(SP)
L15070:	CALL	L13314
L15074:	MOVB	(SP)+, R0
L15076:	COMB	R0
L15100:	BICB	#177776, R0
L15104:	BNE	L15112
L15106:	JMP	L15146
; THEN
L15112:	TST	052354(R5)
L15116:	BLT	L15124
L15120:	JMP	L15136
; THEN
L15124:	MOV	052352(R5), 052350(R5)
L15132:	JMP	L15146
; ELSE
L15136:	MOV	052352(R5), -(SP)
L15142:	CALL	L14576
; END IF
L15146:	MOV	(SP), 000010(SP)
L15152:	ADD	#000010, SP
L15156:	RETURN
;
L15160:	CALL	L53046			; STKCHK
L15164:	CLR	052346(R5)		; LABELS := 0
L15170:	MOV	R5, R3
L15172:	ADD	#007204, R3
L15176:	CLR	(R3)
L15200:	CLR	000002(R3)
L15204:	MOV	#000031, 000004(R3)
L15212:	RETURN
;
L15214:	SUB	#000006, SP
L15220:	CALL	L53046			; STKCHK
L15224:	MOV	#015340, R0
L15230:	MOV	SP, R1
L15232:	MOV	(R0)+, (R1)+
L15234:	MOV	(R0)+, (R1)+
L15236:	MOV	(R0)+, (R1)+
L15240:	CLR	-(SP)
L15242:	SUB	#000006, SP
L15246:	MOV	SP, R0
L15250:	MOV	000022(SP), (R0)+
L15254:	MOV	000024(SP), (R0)+
L15260:	MOV	000026(SP), (R0)+
L15264:	CALL	L12704
L15270:	MOVB	(SP)+, (SP)
L15272:	SUB	#000006, SP
L15276:	MOV	SP, R0
L15300:	MOV	000006(SP), (R0)+
L15304:	MOV	000010(SP), (R0)+
L15310:	MOV	000012(SP), (R0)+
L15314:	MOV	000016(SP), -(SP)
L15320:	CALL	L12056
L15324:	MOV	000006(SP), 000016(SP)
L15332:	ADD	#000016, SP
L15336:	RETURN
;
L15340:	.WORD	027040			; " ."
L15342:	.WORD	020040			; "  "
L15344:	.WORD	020040			; "  "
L15346:	.WORD	0
;
L15350:	CLR	-(SP)
L15352:	CALL	L53046			; STKCHK
L15356:	MOV	002676(R5), R0
L15362:	SUB	#000000, R0
L15366:	BGE	L15374
L15370:	JMP	L16244
; THEN
L15374:	CMP	#000002, R0
L15400:	BGE	L15406
L15402:	JMP	L16244
; THEN
L15406:	ASL	R0
L15410:	JMP	@016250(R0)
L15414:	SUB	#000006, SP
L15420:	MOV	SP, R0
L15422:	MOV	000014(SP), (R0)+
L15426:	MOV	000016(SP), (R0)+
L15432:	MOV	000020(SP), (R0)+
L15436:	MOV	000012(SP), -(SP)
L15442:	CALL	L13666
L15446:	JMP	L16256
;
L15452:	MOV	R5, R0
L15454:	ADD	#052356, R0
L15460:	MOV	R0, -(SP)
L15462:	CALL	L52316			; PSHSET
L15466:	MOV	#L16272, -(SP)
L15472:	CALL	L52316			; PSHSET
L15476:	CALL	L52236			; SETOR
L15502:	MOV	R5, R0
L15504:	ADD	#052356, R0
L15510:	MOV	R0, -(SP)
L15512:	CALL	L52360			; POPSET
L15516:	SUB	#000006, SP
L15522:	MOV	SP, R0
L15524:	MOV	000014(SP), (R0)+
L15530:	MOV	000016(SP), (R0)+
L15534:	MOV	000020(SP), (R0)+
L15540:	MOV	000012(SP), -(SP)
L15544:	CALL	L13666
L15550:	JMP	L16256
;
L15554:	MOV	#012674, R0
L15560:	MOV	SP, R1
L15562:	ADD	#000006, R1
L15566:	MOV	#000006, R2
L15572:	CMPB	(R0)+, (R1)+
L15574:	BNE	L15602
L15576:	DEC	R2
L15600:	BNE	L15572
L15602:	BEQ	L15610
L15604:	JMP	L15624
; THEN
L15610:	MOV	000004(SP), -(SP)
L15614:	CALL	L11032
L15620:	JMP	L16240
; ELSE
L15624:	CLR	-(SP)
L15626:	SUB	#000006, SP
L15632:	MOV	SP, R0
L15634:	MOV	000016(SP), (R0)+
L15640:	MOV	000020(SP), (R0)+
L15644:	MOV	000022(SP), (R0)+
L15650:	MOV	000014(SP), -(SP)
L15654:	CALL	L13314
L15660:	MOVB	(SP)+, R0
L15662:	COMB	R0
L15664:	BICB	#177776, R0
L15670:	BNE	L15676
L15672:	JMP	L15734
; THEN
L15676:	SUB	#000006, SP
L15702:	MOV	SP, R0
L15704:	MOV	000014(SP), (R0)+
L15710:	MOV	000016(SP), (R0)+
L15714:	MOV	000020(SP), (R0)+
L15720:	MOV	000012(SP), -(SP)
L15724:	CALL	L15214
L15730:	JMP	L16240
; ELSE
L15734:	MOV	052350(R5), R3
L15740:	CMP	R3, #000000		; 0
L15744:	BLT	L15754
L15746:	CMP	R3, #001750		; 1000.
L15752:	BLE	L15760
L15754:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L15760:	MOV	R3, -(SP)
L15762:	MOV	#000022, -(SP)		; 18.
L15766:	CALL	L52624			; UNSMUL
L15772:	MOV	R5, R3
L15774:	ADD	(SP)+, R3
L15776:	ADD	#007204, R3
L16002:	MOV	R3, R0
L16004:	ADD	#000010, R0
L16010:	MOV	R0, -(SP)
L16012:	CALL	L52316			; PSHSET
L16016:	CLR	-(SP)
L16020:	CALL	L52134			; DOIN
L16024:	BNE	L16032
L16026:	JMP	L16134
; THEN
L16032:	MOV	R3, -(SP)
L16034:	MOV	000020(R3), R0
L16040:	CMP	R0, #000000		; 0
L16044:	BLT	L16054
L16046:	CMP	R0, #000144		; 100.
L16052:	BLE	L16060
L16054:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L16060:	MOV	R0, -(SP)
L16062:	MOV	#000016, -(SP)		; 14.
L16066:	CALL	L52624			; UNSMUL
L16072:	MOV	R5, R0
L16074:	ADD	(SP)+, R0
L16076:	SUB	#000006, SP
L16102:	MOV	SP, R1
L16104:	MOV	004372(R0), (R1)+
L16110:	MOV	004374(R0), (R1)+
L16114:	MOV	004376(R0), (R1)+
L16120:	CLR	-(SP)
L16122:	CALL	L12056
L16126:	MOV	(SP)+, R3
L16130:	JMP	L16240
;
L16134:	MOV	R3, -(SP)
L16136:	CLR	-(SP)
L16140:	SUB	#000006, SP
L16144:	MOV	SP, R0
L16146:	MOV	000020(SP), (R0)+
L16152:	MOV	000022(SP), (R0)+
L16156:	MOV	000024(SP), (R0)+
L16162:	CALL	L12704
L16166:	CALL	L10442
L16172:	MOV	(SP)+, R3
L16174:	CMP	000004(SP), #007777
L16202:	BLOS	L16210
L16204:	JMP	L16224
; THEN
L16210:	MOV	R3, -(SP)
L16212:	MOV	#000056, -(SP)
L16216:	CALL	L10442
L16222:	MOV	(SP)+, R3
L16224:	MOV	R3, -(SP)
L16226:	MOV	000006(SP), -(SP)
L16232:	CALL	L11032
L16236:	MOV	(SP)+, R3
L16240:	JMP	L16256
L16244:	JMP	L16256
L16250:	MOV	@-(R4), (R4)
L16252:	MOV	@-(R4), @-(R2)
L16254:	MOV	@-(R5), @-(R4)
L16256:	MOV	000002(SP), 000012(SP)
L16264:	ADD	#000012, SP
L16270:	RETURN
; Множество
L16272:	.WORD	000100
L16274:	.WORD	0
L16276:	.WORD	0
L16300:	.WORD	0
;
L16302:	CALL	L53046			; STKCHK
; IF VAR2676 = 0
L16306:	TST	002676(R5)
L16312:	BEQ	L16320
L16314:	JMP	L16330
; THEN
L16320:	INC	053426(R5)		; INC(MRKEDINSTR)
L16324:	JMP	L16456
; ELSE IF VAR2676 = 1
L16330:	CMP	002676(R5), #000001
L16336:	BEQ	L16344
L16340:	JMP	L16456
; THEN
L16344:	MOV	053412(R5), R3
L16350:	CMP	R3, #000000		; 0
L16354:	BLT	L16364
L16356:	CMP	R3, #001750		; 1000.
L16362:	BLE	L16370
L16364:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L16370:	MOV	R3, -(SP)
L16372:	MOV	#000022, -(SP)		; 18.
L16376:	CALL	L52624			; UNSMUL
L16402:	MOV	R5, R3
L16404:	ADD	(SP)+, R3
L16406:	ADD	#007204, R3
L16412:	MOV	R3, R0
L16414:	ADD	#000010, R0
L16420:	MOV	R0, -(SP)
L16422:	CALL	L52316			; PSHSET
L16426:	MOV	#L16460, -(SP)
L16432:	CALL	L52316			; PSHSET
L16436:	CALL	L52236			; SETOR
L16442:	MOV	R3, R0
L16444:	ADD	#000010, R0
L16450:	MOV	R0, -(SP)
L16452:	CALL	L52360			; POPSET
; END IF
L16456:	RETURN
; Множество
L16460:	.WORD	000400
L16462:	.WORD	0
L16464:	.WORD	0
L16466:	.WORD	0
;
L16470:	CALL	L53046			; STKCHK
L16474:	TST	002676(R5)
L16500:	BEQ	L16506
L16502:	JMP	L16516
L16506:	INC	053430(R5)
L16512:	JMP	L16644
L16516:	CMP	002676(R5), #000001
L16524:	BEQ	L16532
L16526:	JMP	L16644
L16532:	MOV	053412(R5), R3
L16536:	CMP	R3, #000000		; 0
L16542:	BLT	L16552
L16544:	CMP	R3, #001750		; 1000.
L16550:	BLE	L16556
L16552:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L16556:	MOV	R3, -(SP)
L16560:	MOV	#000022, -(SP)		; 18.
L16564:	CALL	L52624			; UNSMUL
L16570:	MOV	R5, R3
L16572:	ADD	(SP)+, R3
L16574:	ADD	#007204, R3
L16600:	MOV	R3, R0
L16602:	ADD	#000010, R0
L16606:	MOV	R0, -(SP)
L16610:	CALL	L52316			; PSHSET
L16614:	MOV	#L16646, -(SP)
L16620:	CALL	L52316			; PSHSET
L16624:	CALL	L52236			; SETOR
L16630:	MOV	R3, R0
L16632:	ADD	#000010, R0
L16636:	MOV	R0, -(SP)
L16640:	CALL	L52360			; POPSET
L16644:	RETURN
; Множество
L16646:	.WORD	000200
L16650:	.WORD	0
L16652:	.WORD	0
L16654:	.WORD	0
;
L16656:	CALL	L53046			; STKCHK
L16662:	CLR	-(SP)
L16664:	SUB	#000006, SP
L16670:	MOV	SP, R0
L16672:	MOV	053402(R5), (R0)+
L16676:	MOV	053404(R5), (R0)+
L16702:	MOV	053406(R5), (R0)+
L16706:	MOV	053410(R5), -(SP)
L16712:	CALL	L13314
L16716:	TSTB	(SP)+
L16720:	BNE	L16726
L16722:	JMP	L21012
L16726:	MOV	052350(R5), R3
L16732:	CMP	R3, #000000		; 0
L16736:	BLT	L16746
L16740:	CMP	R3, #001750		; 1000.
L16744:	BLE	L16752
L16746:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L16752:	MOV	R3, -(SP)
L16754:	MOV	#000022, -(SP)		; 18.
L16760:	CALL	L52624			; UNSMUL
L16764:	MOV	R5, R3
L16766:	ADD	(SP)+, R3
L16770:	ADD	#007204, R3
L16774:	CMP	002676(R5), #000002
L17002:	BEQ	L17010
L17004:	JMP	L20600
L17010:	MOV	R3, R0
L17012:	ADD	#000010, R0
L17016:	MOV	R0, -(SP)
L17020:	CALL	L52316			; PSHSET
L17024:	MOV	#000011, -(SP)
L17030:	CALL	L52134			; DOIN
L17034:	BEQ	L17042
L17036:	JMP	L20600
L17042:	MOV	R3, R0
L17044:	ADD	#000010, R0
L17050:	MOV	R0, -(SP)
L17052:	CALL	L52316			; PSHSET
L17056:	MOV	#L21114, -(SP)
L17062:	CALL	L52316			; PSHSET
L17066:	CALL	L52236			; SETOR
L17072:	MOV	R3, R0
L17074:	ADD	#000010, R0
L17100:	MOV	R0, -(SP)
L17102:	CALL	L52360			; POPSET
L17106:	MOV	R3, R0
L17110:	ADD	#000010, R0
L17114:	MOV	R0, -(SP)
L17116:	CALL	L52316			; PSHSET
L17122:	CLR	-(SP)
L17124:	CALL	L52134			; DOIN
L17130:	BNE	L17136
L17132:	JMP	L17474
L17136:	MOV	R5, R0
L17140:	ADD	#007202, R0
L17144:	MOV	R0, -(SP)
L17146:	MOV	#000001, -(SP)
L17152:	MOV	#000144, -(SP)
L17156:	MOV	000002(SP), @000004(SP)
L17164:	CMP	@000004(SP), (SP)
L17170:	BLE	L17176
L17172:	JMP	L17464
L17176:	MOV	007202(R5), R2		; VAR7202
L17202:	CMP	R2, #000000		;
L17206:	BLT	L17216
L17210:	CMP	R2, #000144		; 100.
L17214:	BLE	L17222
L17216:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L17222:	MOV	R2, -(SP)
L17224:	MOV	#000016, -(SP)		; 14.
L17230:	CALL	L52624			; UNSMUL
L17234:	MOV	R5, R2
L17236:	ADD	(SP)+, R2
L17240:	ADD	#004372, R2
L17244:	MOV	R5, R0
L17246:	ADD	#053402, R0
L17252:	MOV	R2, R1
L17254:	ADD	#000006, R1
L17260:	MOV	#000006, R4
L17264:	CMPB	(R0)+, (R1)+
L17266:	BNE	L17274
L17270:	DEC	R4
L17272:	BNE	L17264
L17274:	BEQ	L17302
L17276:	JMP	L17454
L17302:	CMP	000014(R2), 053410(R5)
L17310:	BEQ	L17316
L17312:	JMP	L17454
L17316:	MOV	R3, -(SP)
L17320:	MOV	R2, -(SP)
L17322:	CALL	L10516
L17326:	MOV	(SP)+, R2
L17330:	MOV	(SP)+, R3
L17332:	MOV	R3, -(SP)
L17334:	MOV	R2, -(SP)
L17336:	SUB	#000006, SP
L17342:	MOV	R2, R0
L17344:	MOV	SP, R1
L17346:	MOV	(R0)+, (R1)+
L17350:	MOV	(R0)+, (R1)+
L17352:	MOV	(R0)+, (R1)+
L17354:	CALL	L11602
L17360:	MOV	(SP)+, R2
L17362:	MOV	(SP)+, R3
L17364:	MOV	R3, -(SP)
L17366:	MOV	R2, -(SP)
L17370:	SUB	#000006, SP
L17374:	MOV	#021014, R0
L17400:	MOV	SP, R1
L17402:	MOV	(R0)+, (R1)+
L17404:	MOV	(R0)+, (R1)+
L17406:	MOV	(R0)+, (R1)+
L17410:	CALL	L10562
L17414:	MOV	(SP)+, R2
L17416:	MOV	(SP)+, R3
L17420:	MOV	R3, -(SP)
L17422:	MOV	R2, -(SP)
L17424:	SUB	#000006, SP
L17430:	MOV	#021024, R0
L17434:	MOV	SP, R1
L17436:	MOV	(R0)+, (R1)+
L17440:	MOV	(R0)+, (R1)+
L17442:	MOV	(R0)+, (R1)+
L17444:	CALL	L10562
L17450:	MOV	(SP)+, R2
L17452:	MOV	(SP)+, R3
L17454:	INC	@000004(SP)
L17460:	JMP	L17164
L17464:	ADD	#000006, SP
L17470:	JMP	L17556
L17474:	MOV	R3, -(SP)
L17476:	SUB	#000006, SP
L17502:	MOV	SP, R0
L17504:	MOV	053402(R5), (R0)+
L17510:	MOV	053404(R5), (R0)+
L17514:	MOV	053406(R5), (R0)+
L17520:	MOV	053410(R5), -(SP)
L17524:	CALL	L15350
L17530:	MOV	(SP)+, R3
L17532:	MOV	R3, -(SP)
L17534:	MOV	#000072, -(SP)
L17540:	CALL	L10442
L17544:	MOV	(SP)+, R3
L17546:	MOV	R3, -(SP)
L17550:	CALL	L10544
L17554:	MOV	(SP)+, R3
L17556:	MOV	R3, -(SP)
L17560:	CALL	L10544
L17564:	MOV	(SP)+, R3
L17566:	MOV	R3, -(SP)
L17570:	CALL	L10544
L17574:	MOV	(SP)+, R3
L17576:	MOV	R3, -(SP)
L17600:	CALL	L10544
L17604:	MOV	(SP)+, R3
L17606:	MOV	R3, -(SP)
L17610:	SUB	#000006, SP
L17614:	MOV	#021034, R0
L17620:	MOV	SP, R1
L17622:	MOV	(R0)+, (R1)+
L17624:	MOV	(R0)+, (R1)+
L17626:	MOV	(R0)+, (R1)+
L17630:	CALL	L10562
L17634:	MOV	(SP)+, R3
L17636:	MOV	R3, R0
L17640:	ADD	#000010, R0
L17644:	MOV	R0, -(SP)
L17646:	CALL	L52316			; PSHSET
L17652:	MOV	#000010, -(SP)
L17656:	CALL	L52134			; DOIN
L17662:	BNE	L17670
L17664:	JMP	L17724
L17670:	MOV	R3, -(SP)
L17672:	SUB	#000006, SP
L17676:	MOV	#021044, R0
L17702:	MOV	SP, R1
L17704:	MOV	(R0)+, (R1)+
L17706:	MOV	(R0)+, (R1)+
L17710:	MOV	(R0)+, (R1)+
L17712:	CALL	L10562
L17716:	MOV	(SP)+, R3
L17720:	JMP	L17754
L17724:	MOV	R3, -(SP)
L17726:	SUB	#000006, SP
L17732:	MOV	#021054, R0
L17736:	MOV	SP, R1
L17740:	MOV	(R0)+, (R1)+
L17742:	MOV	(R0)+, (R1)+
L17744:	MOV	(R0)+, (R1)+
L17746:	CALL	L10562
L17752:	MOV	(SP)+, R3
L17754:	MOV	R3, R0
L17756:	ADD	#000010, R0
L17762:	MOV	R0, -(SP)
L17764:	CALL	L52316			; PSHSET
L17770:	MOV	#000007, -(SP)
L17774:	CALL	L52134			; DOIN
L20000:	BNE	L20006
L20002:	JMP	L20042
L20006:	MOV	R3, -(SP)
L20010:	SUB	#000006, SP
L20014:	MOV	#021064, R0
L20020:	MOV	SP, R1
L20022:	MOV	(R0)+, (R1)+
L20024:	MOV	(R0)+, (R1)+
L20026:	MOV	(R0)+, (R1)+
L20030:	CALL	L10562
L20034:	MOV	(SP)+, R3
L20036:	JMP	L20072
L20042:	MOV	R3, -(SP)
L20044:	SUB	#000006, SP
L20050:	MOV	#021074, R0
L20054:	MOV	SP, R1
L20056:	MOV	(R0)+, (R1)+
L20060:	MOV	(R0)+, (R1)+
L20062:	MOV	(R0)+, (R1)+
L20064:	CALL	L10562
L20070:	MOV	(SP)+, R3
L20072:	MOV	R3, R0
L20074:	ADD	#000010, R0
L20100:	MOV	R0, -(SP)
L20102:	CALL	L52316			; PSHSET
L20106:	MOV	#000002, -(SP)
L20112:	CALL	L52134			; DOIN
L20116:	BNE	L20124
L20120:	JMP	L20144
L20124:	MOV	R3, -(SP)
L20126:	MOV	#000104, -(SP)
L20132:	CALL	L10442
L20136:	MOV	(SP)+, R3
L20140:	JMP	L20160
L20144:	MOV	R3, -(SP)
L20146:	MOV	#000040, -(SP)
L20152:	CALL	L10442
L20156:	MOV	(SP)+, R3
L20160:	MOV	R3, -(SP)
L20162:	MOV	#000040, -(SP)
L20166:	CALL	L10442
L20172:	MOV	(SP)+, R3
L20174:	MOV	R3, R0
L20176:	ADD	#000010, R0
L20202:	MOV	R0, -(SP)
L20204:	CALL	L52316			; PSHSET
L20210:	MOV	#000001, -(SP)
L20214:	CALL	L52134			; DOIN
L20220:	BNE	L20226
L20222:	JMP	L20246
L20226:	MOV	R3, -(SP)
L20230:	MOV	#000100, -(SP)
L20234:	CALL	L10442
L20240:	MOV	(SP)+, R3
L20242:	JMP	L20262
L20246:	MOV	R3, -(SP)
L20250:	MOV	#000040, -(SP)
L20254:	CALL	L10442
L20260:	MOV	(SP)+, R3
L20262:	MOV	R3, -(SP)
L20264:	MOV	#000040, -(SP)
L20270:	CALL	L10442
L20274:	MOV	(SP)+, R3
L20276:	MOV	R3, R0
L20300:	ADD	#000010, R0
L20304:	MOV	R0, -(SP)
L20306:	CALL	L52316			; PSHSET
L20312:	MOV	#000003, -(SP)
L20316:	CALL	L52134			; DOIN
L20322:	BNE	L20330
L20324:	JMP	L20350
L20330:	MOV	R3, -(SP)
L20332:	MOV	#000103, -(SP)
L20336:	CALL	L10442
L20342:	MOV	(SP)+, R3
L20344:	JMP	L20364
L20350:	MOV	R3, -(SP)
L20352:	MOV	#000040, -(SP)
L20356:	CALL	L10442
L20362:	MOV	(SP)+, R3
L20364:	MOV	R3, -(SP)
L20366:	MOV	#000040, -(SP)
L20372:	CALL	L10442
L20376:	MOV	(SP)+, R3
L20400:	MOV	R3, R0
L20402:	ADD	#000010, R0
L20406:	MOV	R0, -(SP)
L20410:	CALL	L52316			; PSHSET
L20414:	MOV	#000004, -(SP)
L20420:	CALL	L52134			; DOIN
L20424:	BNE	L20432
L20426:	JMP	L20452
L20432:	MOV	R3, -(SP)
L20434:	MOV	#000112, -(SP)
L20440:	CALL	L10442
L20444:	MOV	(SP)+, R3
L20446:	JMP	L20466
L20452:	MOV	R3, -(SP)
L20454:	MOV	#000040, -(SP)
L20460:	CALL	L10442
L20464:	MOV	(SP)+, R3
L20466:	MOV	R3, -(SP)
L20470:	MOV	#000040, -(SP)
L20474:	CALL	L10442
L20500:	MOV	(SP)+, R3
L20502:	MOV	R3, R0
L20504:	ADD	#000010, R0
L20510:	MOV	R0, -(SP)
L20512:	CALL	L52316			; PSHSET
L20516:	MOV	#000005, -(SP)
L20522:	CALL	L52134			; DOIN
L20526:	BNE	L20534
L20530:	JMP	L20554
L20534:	MOV	R3, -(SP)
L20536:	MOV	#000102, -(SP)
L20542:	CALL	L10442
L20546:	MOV	(SP)+, R3
L20550:	JMP	L20570
L20554:	MOV	R3, -(SP)
L20556:	MOV	#000040, -(SP)
L20562:	CALL	L10442
L20566:	MOV	(SP)+, R3
L20570:	MOV	R3, -(SP)
L20572:	CALL	L10516
L20576:	MOV	(SP)+, R3
L20600:	MOV	052350(R5), 053412(R5)
L20606:	MOV	R3, R0
L20610:	ADD	#000010, R0
L20614:	MOV	R0, -(SP)
L20616:	CALL	L52316			; PSHSET
L20622:	MOV	#L21104, -(SP)
L20626:	CALL	L52316			; PSHSET
L20632:	CALL	L52270			; SETAND
L20636:	MOV	R5, R0
L20640:	ADD	#053414, R0
L20644:	MOV	R0, -(SP)
L20646:	CALL	L52360			; POPSET
L20652:	MOV	052350(R5), -(SP)
L20656:	CALL	L14576
L20662:	SUB	#000006, SP
L20666:	MOV	SP, R0
L20670:	MOV	053402(R5), (R0)+
L20674:	MOV	053404(R5), (R0)+
L20700:	MOV	053406(R5), (R0)+
L20704:	CALL	L12262
L20710:	MOV	052350(R5), R3
L20714:	CMP	R3, #000000		; 0
L20720:	BLT	L20730
L20722:	CMP	R3, #001750		; 1000.
L20726:	BLE	L20734
L20730:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L20734:	MOV	R3, -(SP)
L20736:	MOV	#000022, -(SP)		; 18.
L20742:	CALL	L52624			; UNSMUL
L20746:	MOV	R5, R3
L20750:	ADD	(SP)+, R3
L20752:	ADD	#007204, R3
L20756:	CMP	000004(R3), 004370(R5)
L20764:	BEQ	L20772
L20766:	JMP	L21004
L20772:	MOV	000006(R3), 053424(R5)
L21000:	JMP	L21012
L21004:	MOV	#177777, 053424(R5)
L21012:	RETURN
;
L21014:	.ASCIZ	/::\   /<0>
L21024:	.ASCIZ	/      /<0>
L21034:	.ASCIZ	/; \   /<0>
L21044:	.ASCIZ	/+I \  /<0>
L21054:	.ASCIZ	/   \  /<0>
L21064:	.ASCIZ	/-I \  /<0>
L21074:	.ASCIZ	/   \  /<0>
; Множество
L21104:	.WORD	000676
L21106:	.WORD	000000
L21110:	.WORD	000000
L21112:	.WORD	000000
; Множество
L21114:	.WORD	001000
L21116:	.WORD	000000
L21120:	.WORD	000000
L21122:	.WORD	000000
;
L21124:	CALL	L53046			; STKCHK
L21130:	MOV	@000002(SP), R3
L21134:	CMP	R3, #000001		; 1
L21140:	BLT	L21150
L21142:	CMP	R3, #000024		; 20.
L21146:	BLE	L21154
L21150:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L21154:	MOV	R3, -(SP)
L21156:	MOV	#000014, -(SP)		; 12.
L21162:	CALL	L52624			; UNSMUL
L21166:	MOV	R5, R3
L21170:	ADD	(SP)+, R3
L21172:	ADD	#000004, R3
L21176:	DEC	@000002(SP)
L21202:	CMP	@000002(SP), #000001
L21210:	BLT	L21216
L21212:	JMP	L21224
L21216:	MOV	#000024, @000002(SP)
L21224:	CMP	(R3), #000006
L21230:	BLE	L21236
L21232:	JMP	L21252
L21236:	MOV	R3, -(SP)
L21240:	MOV	000004(SP), -(SP)
L21244:	CALL	L21124
L21250:	MOV	(SP)+, R3
L21252:	CMP	(R3), #000011
L21256:	BLE	L21264
L21260:	JMP	L21300
L21264:	MOV	R3, -(SP)
L21266:	MOV	000004(SP), -(SP)
L21272:	CALL	L21124
L21276:	MOV	(SP)+, R3
L21300:	MOV	(SP), 000002(SP)
L21304:	ADD	#000002, SP
L21310:	RETURN
;
L21312:	SUB	#000006, SP
L21316:	CALL	L53046			; STKCHK
L21322:	MOV	000010(SP), R0
L21326:	DEC	R0
L21330:	MOV	R0, 000002(SP)
L21334:	CMP	000002(SP), #000001
L21342:	BLT	L21350
L21344:	JMP	L21356
L21350:	MOV	#000024, 000002(SP)
L21356:	CMP	000012(SP), 000002(SP)
L21364:	BEQ	L21372
L21366:	JMP	L21674
L21372:	MOV	000010(SP), R3
L21376:	CMP	R3, #000001		; 1
L21402:	BLT	L21412
L21404:	CMP	R3, #000024		; 20.
L21410:	BLE	L21416
L21412:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L21416:	MOV	R3, -(SP)
L21420:	MOV	#000014, -(SP)		; 12.
L21424:	CALL	L52624			; UNSMUL
L21430:	MOV	R5, R3
L21432:	ADD	(SP)+, R3
L21434:	ADD	#000004, R3
L21440:	MOV	(R3), R0
L21442:	SUB	#000016, R0
L21446:	BGE	L21454
L21450:	JMP	L21656
L21454:	CMP	#000002, R0
L21460:	BGE	L21466
L21462:	JMP	L21656
L21466:	ASL	R0
L21470:	JMP	@021662(R0)
L21474:	MOV	R3, -(SP)
L21476:	SUB	#000006, SP
L21502:	MOV	SP, R0
L21504:	MOV	000002(R3), (R0)+
L21510:	MOV	000004(R3), (R0)+
L21514:	MOV	000006(R3), (R0)+
L21520:	CALL	L11602
L21524:	MOV	(SP)+, R3
L21526:	JMP	L21670
L21532:	MOV	R3, -(SP)
L21534:	MOV	000010(R3), R0
L21540:	CMP	R0, #000000		; 0
L21544:	BLT	L21554
L21546:	CMP	R0, #000030		; 24.
L21552:	BLE	L21560
L21554:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L21560:	MOV	R0, -(SP)
L21562:	MOV	#000014, -(SP)		; 12.
L21566:	CALL	L52624			; UNSMUL
L21572:	MOV	R5, R0
L21574:	ADD	(SP)+, R0
L21576:	SUB	#000006, SP
L21602:	MOV	SP, R1
L21604:	MOV	003712(R0), (R1)+
L21610:	MOV	003714(R0), (R1)+
L21614:	MOV	003716(R0), (R1)+
L21620:	MOV	000012(R3), -(SP)
L21624:	CALL	L15350
L21630:	MOV	(SP)+, R3
L21632:	JMP	L21670
L21636:	MOV	R3, -(SP)
L21640:	MOV	000012(R3), -(SP)
L21644:	CALL	L11032
L21650:	MOV	(SP)+, R3
L21652:	JMP	L21670
L21656:	JMP	L21670
L21662:	CMP	(R4), @021532(R4)
L21666:	CMP	(SP), @(SP)+
L21670:	JMP	L22270
L21674:	MOV	000002(SP), (SP)
L21700:	MOV	SP, R0
L21702:	MOV	R0, -(SP)
L21704:	CALL	L21124
L21710:	CMP	(SP), 000012(SP)
L21714:	BNE	L21722
L21716:	JMP	L21736
L21722:	MOV	000012(SP), -(SP)
L21726:	MOV	000002(SP), -(SP)
L21732:	CALL	L21312
L21736:	MOV	000010(SP), R3
L21742:	CMP	R3, #000001		; 1
L21746:	BLT	L21756
L21750:	CMP	R3, #000024		; 20.
L21754:	BLE	L21762
L21756:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L21762:	MOV	R3, -(SP)
L21764:	MOV	#000014, -(SP)		; 12.
L21770:	CALL	L52624			; UNSMUL
L21774:	MOV	R5, R3
L21776:	ADD	(SP)+, R3
L22000:	ADD	#000004, R3
L22004:	CMP	(R3), #000011
L22010:	BEQ	L22016
L22012:	JMP	L22052
L22016:	MOV	R3, -(SP)
L22020:	SUB	#000006, SP
L22024:	MOV	#022304, R0
L22030:	MOV	SP, R1
L22032:	MOV	(R0)+, (R1)+
L22034:	MOV	(R0)+, (R1)+
L22036:	MOV	(R0)+, (R1)+
L22040:	CALL	L10562
L22044:	MOV	(SP)+, R3
L22046:	JMP	L22256
L22052:	MOV	(R3), R0
L22054:	SUB	#000001, R0
L22060:	BGE	L22066
L22062:	JMP	L22214
L22066:	CMP	#000007, R0
L22072:	BGE	L22100
L22074:	JMP	L22214
L22100:	ASL	R0
L22102:	JMP	@022220(R0)
L22106:	MOVB	#000053, 000004(SP)
L22114:	JMP	L22240
L22120:	MOVB	#000055, 000004(SP)
L22126:	JMP	L22240
L22132:	MOVB	#000052, 000004(SP)
L22140:	JMP	L22240
L22144:	MOVB	#000057, 000004(SP)
L22152:	JMP	L22240
L22156:	MOVB	#000046, 000004(SP)
L22164:	JMP	L22240
L22170:	MOVB	#000041, 000004(SP)
L22176:	JMP	L22240
L22202:	MOVB	#000055, 000004(SP)
L22210:	JMP	L22240
L22214:	JMP	L22240
; Таблица переходов
L22220:	.WORD	L22106
L22222:	.WORD	L22120
L22224:	.WORD	L22132
L22226:	.WORD	L22144
L22230:	.WORD	L22156
L22232:	.WORD	L22170
L22234:	.WORD	L22214
L22236:	.WORD	L22202
;
L22240:	MOV	R3, -(SP)
L22242:	CLR	-(SP)
L22244:	MOVB	000010(SP), (SP)
L22250:	CALL	L10442
L22254:	MOV	(SP)+, R3
L22256:	MOV	(SP), -(SP)
L22260:	MOV	000004(SP), -(SP)
L22264:	CALL	L21312
L22270:	MOV	000006(SP), 000012(SP)
L22276:	ADD	#000012, SP
L22302:	RETURN
;
L22304:	.WORD	041536			; "^C"
L22306:	.WORD	020134			; "\ "
L22310:	.WORD	020040			; "  "
L22312:	.WORD	0
;
L22314:	SUB	#000006, SP
L22320:	CALL	L53046			; STKCHK
L22324:	MOV	000010(SP), (SP)
L22330:	MOV	(SP), 000002(SP)
L22334:	INC	(SP)
L22336:	CMP	(SP), #000024
L22342:	BGT	L22350
L22344:	JMP	L22354
L22350:	MOV	#000001, (SP)
L22354:	MOV	(SP), R0
L22356:	CMP	R0, #000001		; 1
L22362:	BLT	L22372
L22364:	CMP	R0, #000024		; 20.
L22370:	BLE	L22376
L22372:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L22376:	MOV	R0, -(SP)
L22400:	MOV	#000014, -(SP)		; 12.
L22404:	CALL	L52624			; UNSMUL
L22410:	MOV	R5, R0
L22412:	ADD	(SP)+, R0
L22414:	MOV	000004(R0), 000004(SP)
L22422:	CMP	000004(SP), #000012
L22430:	BEQ	L22436
L22432:	CLR	R0
L22434:	BR	L22442
L22436:	MOV	#000001, R0
L22442:	CMP	000004(SP), #000013
L22450:	BEQ	L22456
L22452:	CLR	R1
L22454:	BR	L22462
L22456:	MOV	#000001, R1
L22462:	BISB	R0, R1
L22464:	BNE	L22472
L22466:	JMP	L22330
L22472:	MOV	000010(SP), -(SP)
L22476:	MOV	000004(SP), -(SP)
L22502:	CALL	L21312
L22506:	MOV	000006(SP), 000010(SP)
L22514:	ADD	#000010, SP
L22520:	RETURN
;
L22522:	MOV	(R4), R4
L22524:	MOV	(R4), R4
L22526:	MOV	(R4), R4
L22530:	MOV	(R4), R4
L22532:	MOV	(R4), R4
L22534:	MOV	(R4), R4
L22536:	MOV	(R4), R4
L22540:	MOV	(R4), R4
;
L22542:	MOV	R4, -(SP)
L22544:	JSR	R0, L53000		; SVREG
L22550:	CMP	#000040, 000016(SP)
L22556:	BLOS	L22564
L22560:	CLR	R0
L22562:	BR	L22570
L22564:	MOV	#000001, R0
L22570:	CMP	000016(SP), #000137
L22576:	BLOS	L22604
L22600:	CLR	R1
L22602:	BR	L22610
L22604:	MOV	#000001, R1
L22610:	COMB	R1
L22612:	BICB	R1, R0
L22614:	MOVB	R0, 000020(SP)
L22620:	JSR	R0, L53030		; UNREG
L22624:	MOV	000002(SP), 000004(SP)
L22632:	ADD	#000004, SP
L22636:	RETURN
;
L22640:	CALL	L53046			; STKCHK
L22644:	MOVB	002506(R5), R0
L22650:	SUB	#000003, R0
L22654:	BGE	L22662
L22656:	JMP	L23724
L22662:	CMP	#000001, R0
L22666:	BGE	L22674
L22670:	JMP	L23724
L22674:	ASL	R0
L22676:	JMP	@023730(R0)
L22702:	CLR	-(SP)
L22704:	MOV	SP, R4
L22706:	ADD	#000002, R4
L22712:	MOV	002542(R5), -(SP)
L22716:	CALL	L22542
L22722:	TSTB	(SP)+
L22724:	BNE	L22732
L22726:	JMP	L22760
L22732:	MOV	#000047, -(SP)
L22736:	CALL	L10442
L22742:	CLR	-(SP)
L22744:	MOVB	002542(R5), (SP)
L22750:	CALL	L10442
L22754:	JMP	L23166
L22760:	CLR	-(SP)
L22762:	MOV	SP, R4
L22764:	ADD	#000002, R4
L22770:	CLR	-(SP)
L22772:	MOV	002542(R5), -(SP)
L22776:	CALL	L10426
L23002:	MOV	(SP)+, R0
L23004:	MOV	R0, -(SP)
L23006:	MOV	SP, R4
L23010:	ADD	#000004, R4
L23014:	CALL	L22542
L23020:	CLR	-(SP)
L23022:	MOV	SP, R4
L23024:	ADD	#000004, R4
L23030:	CLR	-(SP)
L23032:	MOV	002542(R5), -(SP)
L23036:	CALL	L10432
L23042:	MOV	(SP)+, R0
L23044:	MOV	R0, -(SP)
L23046:	MOV	SP, R4
L23050:	ADD	#000006, R4
L23054:	CALL	L22542
L23060:	MOVB	(SP)+, R0
L23062:	COM	R0
L23064:	BICB	R0, (SP)
L23066:	TSTB	(SP)+
L23070:	BNE	L23076
L23072:	JMP	L23156
L23076:	MOV	#000042, -(SP)
L23102:	CALL	L10442
L23106:	CLR	-(SP)
L23110:	MOV	002542(R5), -(SP)
L23114:	CALL	L10426
L23120:	MOV	(SP)+, R0
L23122:	MOV	R0, -(SP)
L23124:	CALL	L10442
L23130:	CLR	-(SP)
L23132:	MOV	002542(R5), -(SP)
L23136:	CALL	L10432
L23142:	MOV	(SP)+, R0
L23144:	MOV	R0, -(SP)
L23146:	CALL	L10442
L23152:	JMP	L23166
L23156:	MOV	002542(R5), -(SP)
L23162:	CALL	L11032
L23166:	JMP	L23734
L23172:	MOVB	002544(R5), R0
L23176:	SUB	#000001, R0
L23202:	BGE	L23210
L23204:	JMP	L23656
L23210:	CMP	#000016, R0
L23214:	BGE	L23222
L23216:	JMP	L23656
L23222:	ASL	R0
L23224:	JMP	@L23662(R0)	; Переход по таблице
; CASE 1
L23230:	SUB	#000006, SP
L23234:	MOV	SP, R0
L23236:	MOV	053402(R5), (R0)+
L23242:	MOV	053404(R5), (R0)+
L23246:	MOV	053406(R5), (R0)+
L23252:	MOV	002552(R5), -(SP)
L23256:	CALL	L15350
L23262:	JMP	L23720
; CASE 3
L23266:	CALL	L16302
L23272:	MOV	002552(R5), -(SP)
L23276:	CALL	L11032
L23302:	JMP	L23720
; CASE 2
L23306:	SUB	#000006, SP
L23312:	MOV	SP, R0
L23314:	MOV	002510(R5), (R0)+
L23320:	MOV	002512(R5), (R0)+
L23324:	MOV	002514(R5), (R0)+
L23330:	CLR	-(SP)
L23332:	CALL	L12056
L23336:	JMP	L23720
; CASE 4
L23342:	CALL	L16302
L23346:	SUB	#000006, SP
L23352:	MOV	SP, R0
L23354:	MOV	002510(R5), (R0)+
L23360:	MOV	002512(R5), (R0)+
L23364:	MOV	002514(R5), (R0)+
L23370:	CLR	-(SP)
L23372:	CALL	L12056
L23376:	JMP	L23720
; CASE 5
L23402:	SUB	#000006, SP
L23406:	MOV	SP, R0
L23410:	MOV	002510(R5), (R0)+
L23414:	MOV	002512(R5), (R0)+
L23420:	MOV	002514(R5), (R0)+
L23424:	MOV	002552(R5), -(SP)
L23430:	CALL	L12056
L23434:	JMP	L23720
L23440:	CALL	L16302
L23444:	SUB	#000006, SP
L23450:	MOV	SP, R0
L23452:	MOV	002510(R5), (R0)+
L23456:	MOV	002512(R5), (R0)+
L23462:	MOV	002514(R5), (R0)+
L23466:	MOV	002552(R5), -(SP)
L23472:	CALL	L12056
L23476:	JMP	L23720
L23502:	CALL	L16302
L23506:	SUB	#000006, SP
L23512:	MOV	SP, R0
L23514:	MOV	002510(R5), (R0)+
L23520:	MOV	002512(R5), (R0)+
L23524:	MOV	002514(R5), (R0)+
L23530:	CLR	-(SP)
L23532:	CALL	L15350
L23536:	JMP	L23720
L23542:	SUB	#000006, SP
L23546:	MOV	SP, R0
L23550:	MOV	002510(R5), (R0)+
L23554:	MOV	002512(R5), (R0)+
L23560:	MOV	002514(R5), (R0)+
L23564:	MOV	002552(R5), -(SP)
L23570:	CALL	L15350
L23574:	JMP	L23720
L23600:	CALL	L16302
L23604:	SUB	#000006, SP
L23610:	MOV	SP, R0
L23612:	MOV	002510(R5), (R0)+
L23616:	MOV	002512(R5), (R0)+
L23622:	MOV	002514(R5), (R0)+
L23626:	MOV	002552(R5), -(SP)
L23632:	CALL	L15350
L23636:	JMP	L23720
L23642:	MOV	002554(R5), -(SP)
L23646:	CALL	L22314
L23652:	JMP	L23720
L23656:	JMP	L23720
; Таблица переходов для CASE OF
L23662:	.WORD	L23230		; 1
L23664:	.WORD	L23306		; 2
L23666:	.WORD	L23266		; 3
L23670:	.WORD	L23342		; 4
L23672:	.WORD	L23402		; 5
L23674:	.WORD	L23440		; 6
L23676:	.WORD	L23656		; 7
L23700:	.WORD	L23656		; 10
L23702:	.WORD	L23656		; 11
L23704:	.WORD	L23656		; 12
L23706:	.WORD	L23656		; 13
L23710:	.WORD	L23502		; 14
L23712:	.WORD	L23542		; 15
L23714:	.WORD	L23600		; 16
L23716:	.WORD	L23642		; 17
;
L23720:	JMP	L23734
L23724:	JMP	L23734
; Таблица переходов для CASE OF
L23730:	.WORD	022702		; 3
L23732:	.WORD	023172		; 4
;
L23734:	RETURN
;
L23736:	CALL	L53046			; STKCHK
L23742:	MOV	002542(R5), 053432(R5)
L23750:	CLR	R1
L23752:	MOV	#001500, R0
L23756:	MOV	R1, R2
L23760:	ADD	R0, R2
L23762:	ASR	R2
L23764:	ADD	#000007, R2
L23770:	BIC	#000007, R2
L23774:	CMP	R2, R0
L23776:	BEQ	L24020
L24000:	CMP	024046(R2), 002542(R5)
L24006:	BHI	L24014
L24010:	MOV	R2, R0
L24012:	BR	L23756
L24014:	MOV	R2, R1
L24016:	BR	L23756
;
L24020:	ADD	#024046, R0		; L24056 - 000010
L24024:	MOV	(R0)+, 053434(R5)	; CMDCODE
L24030:	MOV	(R0)+, 053436(R5)	; CMDTYPE
L24034:	MOV	(R0)+, 053440(R5)	; Обозначение команды, 1-2 символ
L24040:	MOV	(R0)+, 053442(R5)	; Обозначение команды, 3-4 символ
L24044:	MOV	#020040, 053444(R5)	; "  "
L24052:	JMP	L25556
;
L24056:	.WORD	170000
L24060:	.WORD	000014
L24062:	.ASCII	/*FPT/
L24066:	.WORD	160000
L24070:	.WORD	000012
L24072:	.ASCII	/SUB /
L24076:	.WORD	150000
L24100:	.WORD	000012
L24102:	.ASCII	/BISB/
L24106:	.WORD	140000
L24110:	.WORD	000012
L24112:	.ASCII	/BICB/
L24116:	.WORD	130000
L24120:	.WORD	000012
L24122:	.ASCII	/BITB/
L24126:	.WORD	120000
L24130:	.WORD	000012
L24132:	.ASCII	/CMPB/
L24136:	MOVB	R0, R0
L24140:	.WORD	000012
L24142:	.ASCII	/MOVB/
L24146:	.WORD	106700
L24150:	.WORD	000015
L24152:	.ASCII	/    /
L24154:	.WORD	106600
L24156:	.WORD	000001
L24162:	.ASCII	/MTPD/
L24164:	.WORD	106500
L24166:	.WORD	000001
L24172:	.ASCII	/MFPD/
L24174:	.WORD	106400
L24176:	.WORD	000015
L24202:	.ASCII	/    /
L24204:	.WORD	106300
L24206:	.WORD	000001
L24212:	.ASCII	/ASLB/
L24214:	.WORD	106200
L24216:	.WORD	000001
L24222:	.ASCII	/ASRB/
L24224:	ROLB	R0
L24226:	.WORD	000001
L24232:	.ASCII	/ROLB/
L24236:	RORB	R0
L24240:	.WORD	000001
L24242:	.ASCII	/RORB/
L24246:	TSTB	R0
L24250:	.WORD	000001
L24252:	.ASCII	/TSTB/
L24256:	.WORD	105600
L24260:	.WORD	000001
L24262:	.ASCII	/SBCB/
L24266:	.WORD	105500
L24270:	.WORD	000001
L24272:	.ASCII	/ADCB/
L24276:	NEGB	R0
L24300:	.WORD	000001
L24302:	.ASCII	/NEGB/
L24306:	DECB	R0
L24310:	.WORD	000001
L24312:	.ASCII	/DECB/
L24316:	INCB	R0
L24320:	.WORD	000001
L24322:	.ASCII	/INCB/
L24326:	COMB	R0
L24330: .WORD	000001
L24332:	.ASCII	/COMB/
L24336:	CLRB	R0
L24340: .WORD	000001
L24342:	.ASCII	/CLRB/
L24346:	TRAP	0
L24350:	.WORD	000010
L24352:	.ASCII	/TRAP/
L24356:	EMT	0
L24360:	.WORD	000010
L24362:	.ASCII	/EMT /
L24366:	BCS	<.+2>
L24370:	.WORD	000005
L24372:	.ASCII	/BCS /
L24376:	BCC	<.+2>
L24400:	.WORD	000005
L24402:	.ASCII	/BCC /
L24406:	BVS	<.+2>
L24410:	.WORD	000005
L24412:	.ASCII	/BVS /
L24416:	BVC	<.+2>
L24420:	.WORD	000005
L24422:	.ASCII	/BVC /
L24426:	BLOS	<.+2>
L24430:	.WORD	000005
L24432:	.ASCII	/BLOS/
L24436:	BHI	<.+2>
L24440:	.WORD	000005
L24442:	.ASCII	/BHI /
L24446:	BMI	<.+2>
L24450:	.WORD	000005
L24452:	.ASCII	/BMI /
L24456:	BPL	<.+2>
L24460:	.WORD	000005
L24462:	.ASCII	/BPL /
L24466:	.WORD	077000
L24470:	.WORD	000013
L24472:	.ASCII	/SOB /
L24476:	.WORD	075040
L24500:	.WORD	000015
L24502:	.ASCII	/    /
L24506:	FDIV	R0
L24510:	.WORD	000002
L24512:	.ASCII	/FDIV/
L24516:	FMUL	R0
L24520:	.WORD	000002
L24522:	.ASCII	/FMUL/
L24526:	FSUB	R0
L24530:	.WORD	000002
L24532:	.ASCII	/FSUB/
L24536:	FADD	R0
L24540:	.WORD	000002
L24542:	.ASCII	/FADD/
L24546:	XOR	R0, R0
L24550:	.WORD	000006
L24552:	.ASCII	/XOR /
L24556:	ASHC	R0, R0
L24560:	.WORD	000007
L24562:	.ASCII	/ASHC/
L24566:	ASH	R0, R0
L24570:	.WORD	000007
L24572:	.ASCII	/ASH /
L24576:	DIV	R0, R0
L24600:	.WORD	000007
L24602:	.ASCII	/DIV /
L24606:	MUL	R0, R0
L24610:	.WORD	000007
L24612:	.ASCII	/MUL /
L24616:	ADD	R0, R0
L24620:	.WORD	000012
L24622:	.ASCII	/ADD /
L24626:	BIS	R0, R0
L24630:	.WORD	000012
L24632:	.ASCII	/BIS /
L24636:	BIC	R0, R0
L24640:	.WORD	000012
L24642:	.ASCII	/BIC /
L24646:	BIT	R0, R0
L24650:	.WORD	000012
L24652:	.ASCII	/BIT /
L24656:	CMP	R0, R0
L24660:	.WORD	000012
L24662:	.ASCII	/CMP /
L24666:	MOV	R0, R0
L24670:	.WORD	000012
L24672:	.ASCII	/MOV /
L24676:	.WORD	007000
L24700:	.WORD	000015
L24702:	.ASCII	/    /
L24706:	ASL	R0
L24710:	.WORD	000001
L24712:	.ASCII	/ASL /
L24716:	ASR	R0
L24720:	.WORD	000001
L24722:	.ASCII	/ASR /
L24726:	ROL	R0
L24730:	.WORD	000001
L24732:	.ASCII	/ROL /
L24736:	ROR	R0
L24740:	.WORD	000001
L24742:	.ASCII	/ROR /
L24746:	TST	R0
L24750:	.WORD	000001
L24752:	.ASCII	/TST /
L24756:	SBC	R0
L24760:	.WORD	000001
L24762:	.ASCII	/SBC /
L24766:	ADC	R0
L24770:	.WORD	000001
L24772:	.ASCII	/ADC /
L24776:	NEG	R0
L25000:	.WORD	000001
L25002:	.ASCII	/NEG /
L25006:	DEC	R0
L25010:	.WORD	000001
L25012:	.ASCII	/DEC /
L25016:	INC	R0
L25020:	.WORD	000001
L25022:	.ASCII	/INC /
L25026:	COM	R0
L25030:	.WORD	000001
L25032:	.ASCII	/COM /
L25036:	CLR	R0
L25040:	.WORD	000001
L25042:	.ASCII	/CLR /
L25046:	CALL	R0
L25050:	.WORD	000001
L25052:	.ASCII	/CALL/
L25056:	.WORD	004000
L25060:	.WORD	000006
L25062:	.ASCII	/JSR /
L25066:	BLE	L25070
L25070:	.WORD	000005
L25072:	.ASCII	/BLE /
L25076:	BGT	L25100
L25100:	.WORD	000005
L25102:	.ASCII	/BGT /
L25106:	BLT	L25110
L25110:	.WORD	000005
L25112:	.ASCII	/BLT /
L25116:	BGE	L25120
L25120:	.WORD	000005
L25122:	.ASCII	/BGE /
L25126:	BEQ	L25130
L25130:	.WORD	000005
L25132:	.ASCII	/BEQ /
L25136:	BNE	L25140
L25140:	.WORD	000005
L25142:	.ASCII	/BNE /
L25146:	BR	L25150
L25150:	.WORD	000005
L25152:	.ASCII	/BR  /
L25156:	SWAB	R0
L25160:	.WORD	000001
L25162:	.ASCII	/SWAB/
L25166:	SCC
L25170:	.WORD	000000
L25172:	.ASCII	/SCC /
L25176:	.WORD	000276
L25200:	.WORD	000014
L25202:	.ASCII	/    /
L25206:	SEN
L25210:	.WORD	000000
L25212:	.ASCII	/SEN /
L25216:	.WORD	000267
L25220:	.WORD	000014
L25222:	.ASCII	/    /
L25226:	SEZ
L25230:	.WORD	000000
L25232:	.ASCII	/SEZ /
L25236:	.WORD	000263
L25240:	.WORD	000014
L25242:	.ASCII	/    /
L25246:	SEV
L25250:	.WORD	000000
L25252:	.ASCII	/SEV /
L25256:	SEC
L25260:	.WORD	000000
L25262:	.ASCII	/SEC /
L25266:	.WORD	000260
L25270:	.WORD	000014
L25272:	.ASCII	/    /
L25276:	CCC
L25300:	.WORD	000000
L25302:	.ASCII	/CCC /
L25306:	.WORD	000256
L25310:	.WORD	000014
L25312:	.ASCII	/    /
L25316:	CLN
L25320:	.WORD	000000
L25322:	.ASCII	/CLN /
L25326:	.WORD	000247
L25330:	.WORD	000014
L25332:	.ASCII	/    /
L25336:	CLZ
L25340:	.WORD	000000
L25342:	.ASCII	/CLZ /
L25346:	.WORD	000243
L25350:	.WORD	000014
L25352:	.ASCII	/    /
L25356:	CLV
L25360:	.WORD	000000
L25362:	.ASCII	/CLV /
L25366:	CLC
L25370:	.WORD	000000
L25372:	.ASCII	/CLC /
L25376:	NOP
L25400:	.WORD	000000
L25402:	.ASCII	/NOP /
L25406:	.WORD	000230
L25410:	.WORD	000004
L25412:	.ASCII	/SPL /
L25416:	.WORD	000210
L25420:	.WORD	000015
L25422:	.ASCII	/    /
L25426:	RETURN
L25430:	.WORD	000000
L25432:	.ASCII	/RETU/
L25436:	RTS	R0
L25440:	.WORD	000002
L25442:	.ASCII	/RTS /
L25446:	JMP	R0
L25450:	.WORD	000001
L25452:	.ASCII	/JMP /
L25456:	.WORD	000007
L25460:	.WORD	000015
L25462:	.ASCII	/    /
L25466:	RTT
L25470:	.WORD	000000
L25472:	.ASCII	/RTT /
L25476:	RESET
L25500:	.WORD	000014
L25502:	.ASCII	/RESE/
L25506:	IOT
L25510:	.WORD	000014
L25512:	.ASCII	/IOT /
L25516:	BPT
L25520:	.WORD	000014
L25522:	.ASCII	/BPT /
L25526:	RTI
L25530:	.WORD	000000
L25532:	.ASCII	/RTI /
L25536:	WAIT
L25540:	.WORD	000014
L25542:	.ASCII	/WAIT/
L25546:	HALT
L25550:	.WORD	000014
L25552:	.ASCII	/HALT/
;
L25556:	RETURN
;
L25560:	MOV	(R4), R4
L25562:	MOV	(R4), R4
L25564:	MOV	(R4), R4
L25566:	MOV	(R4), R4
L25570:	MOV	(R4), R4
L25572:	MOV	(R4), R4
L25574:	MOV	(R4), R4
L25576:	MOV	(R4), R4
;
L25600:	MOV	R4, -(SP)
L25602:	JSR	R0, L53000		; SVREG
L25606:	MOV	SP, R3
L25610:	ADD	#000016, R3
L25614:	CMPB	(R3), #000003
L25620:	BEQ	L25626
L25622:	CLR	R0
L25624:	BR	L25632
L25626:	MOV	#000001, R0
L25632:	CMPB	(R3), #000004
L25636:	BEQ	L25644
L25640:	CLR	R1
L25642:	BR	L25650
L25644:	MOV	#000001, R1
L25650:	MOV	#025760, -(SP)
L25654:	CALL	L52316			; PSHSET
L25660:	CLR	-(SP)
L25662:	MOVB	000036(R3), (SP)
L25666:	CALL	L52134			; DOIN
L25672:	BEQ	L25700
L25674:	CLR	R2
L25676:	BR	L25704
L25700:	MOV	#000001, R2
L25704:	COMB	R2
L25706:	BICB	R2, R1
L25710:	BISB	R0, R1
L25712:	TST	000026(R3)
L25716:	BEQ	L25724
L25720:	CLR	R0
L25722:	BR	L25730
L25724:	MOV	#000001, R0
L25730:	COMB	R0
L25732:	BICB	R0, R1
L25734:	MOVB	R1, 000066(SP)
L25740:	JSR	R0, L53030		; UNREG
L25744:	MOV	000002(SP), 000052(SP)
L25752:	ADD	#000052, SP
L25756:	RETURN
;
L25760:	.WORD	001600
L25762:	.WORD	0
L25764:	.WORD	0
L25766:	.WORD	0
;
L25770:	MOV	(R4), R4
L25772:	MOV	(R4), R4
L25774:	MOV	(R4), R4
L25776:	MOV	(R4), R4
L26000:	MOV	(R4), R4
L26002:	MOV	(R4), R4
L26004:	MOV	(R4), R4
L26006:	MOV	(R4), R4
;
L26010:	MOV	R4, -(SP)
L26012:	JSR	R0, L53000		; SVREG
L26016:	MOV	SP, R3
L26020:	ADD	#000016, R3
L26024:	CMPB	(R3), #000003
L26030:	BEQ	L26036
L26032:	CLR	R0
L26034:	BR	L26042
L26036:	MOV	#000001, R0
L26042:	TST	000026(R3)
L26046:	BEQ	L26054
L26050:	CLR	R1
L26052:	BR	L26060
L26054:	MOV	#000001, R1
L26060:	COMB	R1
L26062:	BICB	R1, R0
L26064:	MOV	000034(R3), R1
L26070:	BIC	#177776, R1
L26074:	BNE	L26102
L26076:	CLR	R1
L26100:	BR	L26106
L26102:	MOV	#000001, R1
L26106:	COMB	R1
L26110:	BICB	R1, R0
L26112:	MOVB	R0, 000066(SP)
L26116:	JSR	R0, L53030		; UNREG
L26122:	MOV	000002(SP), 000052(SP)
L26130:	ADD	#000052, SP
L26134:	RETURN
;
L26136:	MOV	(R4), R4
L26140:	MOV	(R4), R4
L26142:	MOV	(R4), R4
L26144:	MOV	(R4), R4
L26146:	MOV	(R4), R4
L26150:	MOV	(R4), R4
L26152:	MOV	(R4), R4
L26154:	MOV	(R4), R4
;
L26156:	CLR	-(SP)
L26160:	MOV	R4, -(SP)
L26162:	CALL	L53046			; STKCHK
L26166:	MOV	000006(SP), R0
L26172:	ASR	R0
L26174:	ASR	R0
L26176:	ASR	R0
L26200:	MOV	R0, 000002(SP)
L26204:	MOV	(SP), R0
L26206:	MOV	000002(SP), R1
L26212:	TST	R1
L26214:	BPL	026220
L26216:	DEC	R1
L26220:	ASR	R1
L26222:	BPL	026226
L26224:	INC	R1
L26226:	ASL	R1
L26230:	MOV	R1, (R0)
L26232:	MOV	(SP), R0
L26234:	MOV	000002(SP), R1
L26240:	BIC	#177776, R1
L26244:	MOV	R1, 000002(R0)
L26250:	MOV	(SP), R0
L26252:	MOV	000006(SP), R1
L26256:	BIC	#177770, R1
L26262:	MOV	R1, 000004(R0)
L26266:	MOV	#026376, -(SP)
L26272:	CALL	L52316			; PSHSET
L26276:	MOV	R5, R0
L26300:	ADD	#052356, R0
L26304:	MOV	R0, -(SP)
L26306:	CALL	L52360			; POPSET
L26312:	CMP	000006(SP), #000027
L26320:	BEQ	L26326
L26322:	JMP	L26352
L26326:	MOV	#026366, -(SP)
L26332:	CALL	L52316			; PSHSET
L26336:	MOV	R5, R0
L26340:	ADD	#052356, R0
L26344:	MOV	R0, -(SP)
L26346:	CALL	L52360			; POPSET
L26352:	MOV	000004(SP), 000006(SP)
L26360:	ADD	#000006, SP
L26364:	RETURN
;
L26366:	.WORD	000002
L26370:	.WORD	0
L26372:	.WORD	0
L26374:	.WORD	0
L26376:	.WORD	000004
L26400:	.WORD	0
L26402:	.WORD	0
L26404:	.WORD	0
;
L26406:	MOV	(R4), R4
L26410:	MOV	(R4), R4
L26412:	MOV	(R4), R4
L26414:	MOV	(R4), R4
L26416:	MOV	(R4), R4
L26420:	MOV	(R4), R4
L26422:	MOV	(R4), R4
L26424:	MOV	(R4), R4
;
L26426:	MOV	R4, -(SP)
L26430:	CALL	L53046			; STKCHK
L26434:	MOV	SP, R4
L26436:	MOV	053432(R5), R0
L26442:	BIC	#177700, R0
L26446:	MOV	R0, -(SP)
L26450:	CALL	L26154
L26454:	ADD	#000002, SP
L26460:	RETURN
;
L26462:	MOV	(R4), R4
L26464:	MOV	(R4), R4
L26466:	MOV	(R4), R4
L26470:	MOV	(R4), R4
L26472:	MOV	(R4), R4
L26474:	MOV	(R4), R4
L26476:	MOV	(R4), R4
L26500:	MOV	(R4), R4
;
L26502:	MOV	R4, -(SP)
L26504:	CALL	L53046			; STKCHK
L26510:	MOV	SP, R4
L26512:	MOV	053432(R5), R0
L26516:	ASR	R0
L26520:	ASR	R0
L26522:	ASR	R0
L26524:	ASR	R0
L26526:	ASR	R0
L26530:	ASR	R0
L26532:	BIC	#177700, R0
L26536:	MOV	R0, -(SP)
L26540:	CALL	L26154
L26544:	MOV	(SP), R0
L26546:	MOV	(SP), R1
L26550:	MOV	(R1), 000010(R0)
L26554:	MOV	(SP), R0
L26556:	MOV	(SP), R1
L26560:	MOV	000002(R1), 000012(R0)
L26566:	MOV	(SP), R0
L26570:	MOV	(SP), R1
L26572:	MOV	000004(R1), 000014(R0)
L26600:	ADD	#000002, SP
L26604:	RETURN
;
L26606:	MOV	(R4), R4
L26610:	MOV	(R4), R4
L26612:	MOV	(R4), R4
L26614:	MOV	(R4), R4
L26616:	MOV	(R4), R4
L26620:	MOV	(R4), R4
L26622:	MOV	(R4), R4
;
L26624:	MOV	R4, -(SP)
L26626:	CALL	L53046			; STKCHK
L26632:	MOV	(SP), R0
L26634:	MOV	(R0), R0
L26636:	CMP	000004(R0), #000007
L26644:	BEQ	L26652
L26646:	JMP	L26702
L26652:	SUB	#000006, SP
L26656:	MOV	#027004, R0
L26662:	MOV	SP, R1
L26664:	MOV	(R0)+, (R1)+
L26666:	MOV	(R0)+, (R1)+
L26670:	MOV	(R0)+, (R1)+
L26672:	CALL	L10562
L26676:	JMP	L26776
L26702:	MOV	(SP), R0
L26704:	MOV	(R0), R0
L26706:	CMP	000004(R0), #000006
L26714:	BEQ	L26722
L26716:	JMP	L26752
L26722:	SUB	#000006, SP
L26726:	MOV	#027014, R0
L26732:	MOV	SP, R1
L26734:	MOV	(R0)+, (R1)+
L26736:	MOV	(R0)+, (R1)+
L26740:	MOV	(R0)+, (R1)+
L26742:	CALL	L10562
L26746:	JMP	L26776
L26752:	MOV	#000122, -(SP)
L26756:	CALL	L10442
L26762:	MOV	(SP), R0
L26764:	MOV	(R0), R0
L26766:	MOV	000004(R0), -(SP)
L26772:	CALL	L11032
L26776:	ADD	#000002, SP
L27002:	RETURN
;
L27004:	.ASCIZ	/PC\   /<0>
L27014:	.ASCIZ	/SP\   /<0>
;
L27024:	MOV	(R4), R4
L27026:	MOV	(R4), R4
L27030:	MOV	(R4), R4
L27032:	MOV	(R4), R4
L27034:	MOV	(R4), R4
L27036:	MOV	(R4), R4
L27040:	MOV	(R4), R4
;
L27042:	MOV	R4, -(SP)
L27044:	CALL	L53046			; STKCHK
L27050:	MOV	#000050, -(SP)
L27054:	CALL	L10442
L27060:	MOV	SP, R4
L27062:	CALL	L26622
L27066:	MOV	#000051, -(SP)
L27072:	CALL	L10442
L27076:	ADD	#000002, SP
L27102:	RETURN
;
L27104:	MOV	(R4), R4
L27106:	MOV	(R4), R4
L27110:	MOV	(R4), R4
L27112:	MOV	(R4), R4
L27114:	MOV	(R4), R4
L27116:	MOV	(R4), R4
L27120:	MOV	(R4), R4
;
L27122:	MOV	R4, -(SP)
L27124:	CALL	L53046			; STKCHK
L27130:	MOV	R5, R0
L27132:	ADD	#052366, R0
L27136:	MOV	R0, -(SP)
L27140:	CALL	L10436
L27144:	CMPB	002506(R5), #000003
L27152:	BEQ	L27160
L27154:	CLR	R0
L27156:	BR	L27164
L27160:	MOV	#000001, R0
L27164:	MOV	(SP), R1
L27166:	MOV	(R1), R1
L27170:	CMP	(R1), #000006
L27174:	BEQ	L27202
L27176:	CLR	R1
L27200:	BR	L27206
L27202:	MOV	#000001, R1
L27206:	COMB	R1
L27210:	BICB	R1, R0
L27212:	MOV	(SP), R1
L27214:	MOV	(R1), R1
L27216:	CMP	000004(R1), #000007
L27224:	BEQ	L27232
L27226:	CLR	R1
L27230:	BR	L27236
L27232:	MOV	#000001, R1
L27236:	COMB	R1
L27240:	BICB	R1, R0
L27242:	BNE	L27250
L27244:	JMP	L27320
L27250:	SUB	#000006, SP
L27254:	MOV	SP, R0
L27256:	MOV	053402(R5), (R0)+
L27262:	MOV	053404(R5), (R0)+
L27266:	MOV	053406(R5), (R0)+
L27272:	MOV	053410(R5), R0
L27276:	ADD	#000002, R0
L27302:	ADD	002542(R5), R0
L27306:	MOV	R0, -(SP)
L27310:	CALL	L15350
L27314:	JMP	L27324
L27320:	CALL	L22640
L27324:	ADD	#000002, 053410(R5)
L27332:	ADD	#000002, SP
L27336:	RETURN
;
L27340:	MOV	(R4), R4
L27342:	MOV	(R4), R4
L27344:	MOV	(R4), R4
L27346:	MOV	(R4), R4
L27350:	MOV	(R4), R4
L27352:	MOV	(R4), R4
L27354:	MOV	(R4), R4
L27356:	MOV	(R4), R4
;
L27360:	MOV	R4, -(SP)
L27362:	CALL	L53046			; STKCHK
L27366:	MOV	(SP), R0
L27370:	TST	000002(R0)
L27374:	BNE	L27402
L27376:	JMP	L27412
L27402:	MOV	#000100, -(SP)
L27406:	CALL	L10442
L27412:	MOV	(SP), R0
L27414:	CMP	000004(R0), #000007
L27422:	BEQ	L27430
L27424:	CLR	R0
L27426:	BR	L27434
L27430:	MOV	#000001, R0
L27434:	MOV	(SP), R1
L27436:	CMP	(R1), #000002
L27442:	BEQ	L27450
L27444:	CLR	R1
L27446:	BR	L27454
L27450:	MOV	#000001, R1
L27454:	MOV	(SP), R2
L27456:	CMP	(R2), #000006
L27462:	BEQ	L27470
L27464:	CLR	R2
L27466:	BR	L27474
L27470:	MOV	#000001, R2
L27474:	BISB	R1, R2
L27476:	COMB	R2
L27500:	BICB	R2, R0
L27502:	CLR	-(SP)
L27504:	MOV	SP, R4
L27506:	ADD	#000002, R4
L27512:	SUB	#000050, SP
L27516:	MOV	R5, R1
L27520:	ADD	#002556, R1
L27524:	MOV	SP, R2
L27526:	MOV	#000024, R3
L27532:	MOV	(R1)+, (R2)+
L27534:	DEC	R3
L27536:	BNE	L27532
L27540:	CALL	L25576
L27544:	MOVB	(SP)+, R1
L27546:	COM	R1
L27550:	BICB	R1, R0
L27552:	BNE	L27560
L27554:	JMP	L27674
L27560:	MOV	(SP), R0
L27562:	MOV	(R0), R0
L27564:	SUB	#000002, R0
L27570:	BGE	L27576
L27572:	JMP	L27652
L27576:	CMP	#000004, R0
L27602:	BGE	L27610
L27604:	JMP	L27652
L27610:	ASL	R0
L27612:	JMP	@027656(R0)
L27616:	MOV	#000043, -(SP)
L27622:	CALL	L10442
L27626:	MOV	SP, R4
L27630:	CALL	L27122
L27634:	JMP	L27670
L27640:	MOV	SP, R4
L27642:	CALL	L27122
L27646:	JMP	L27670
L27652:	JMP	L27670
; Таблица переходов
L27656:	.WORD	L27616
L27660:	.WORD	L27652
L27662:	.WORD	L27652
L27664:	.WORD	L27652
L27666:	.WORD	L27640
;
L27670:	JMP	030052
L27674:	MOV	(SP), R0
L27676:	MOV	(R0), R0
L27700:	SUB	#000000, R0
L27704:	BGE	L27712
L27706:	JMP	L30030
L27712:	CMP	#000006, R0
L27716:	BGE	L27724
L27720:	JMP	L30030
L27724:	ASL	R0
L27726:	JMP	@030034(R0)
L27732:	MOV	SP, R4
L27734:	CALL	L26624
L27740:	JMP	L30052
L27744:	MOV	SP, R4
L27746:	CALL	L27042
L27752:	MOV	#000053, -(SP)
L27756:	CALL	L10442
L27762:	JMP	L30052
L27766:	MOV	#000055, -(SP)
L27772:	CALL	L10442
L27776:	MOV	SP, R4
L30000:	CALL	L27042
L30004:	JMP	L30052
L30010:	MOV	SP, R4
L30012:	CALL	L27122
L30016:	MOV	SP, R4
L30020:	CALL	L27042
L30024:	JMP	L30052
L30030:	JMP	L30052
; Таблица переходов
L30034:	.WORD	L27732
L30036:	.WORD	L30030
L30040:	.WORD	L27744
L30042:	.WORD	L30030
L30044:	.WORD	L27766
L30046:	.WORD	L30030
L30050:	.WORD	L30010
;
L30052:	ADD	#000002, SP
L30056:	RETURN
;
L30060:	SUB	#000020, SP
L30064:	CALL	L53046			; STKCHK
L30070:	CALL	L23736
L30074:	ADD	#000002, 053410(R5)
L30102:	MOV	SP, R4
L30104:	CALL	L26502
L30110:	MOV	SP, R4
L30112:	CALL	L26426
L30116:	CMPB	053436(R5), #000012	; CMDTYPE = 12 ?
L30124:	BEQ	L30132
L30126:	JMP	L31334
L30132:	TST	000012(SP)
L30136:	BEQ	L30144
L30140:	JMP	L30244
L30144:	TST	000010(SP)
L30150:	BEQ	L30156
L30152:	JMP	L30244
L30156:	CMP	000004(SP), 000014(SP)
L30164:	BEQ	L30172
L30166:	JMP	L30244
L30172:	CMP	(SP), #000002
L30176:	BEQ	L30204
L30200:	CLR	R0
L30202:	BR	L30210
L30204:	MOV	#000001, R0
L30210:	CMP	(SP), #000004
L30214:	BEQ	L30222
L30216:	CLR	R1
L30220:	BR	L30226
L30222:	MOV	#000001, R1
L30226:	BISB	R0, R1
L30230:	BNE	L30236
L30232:	JMP	L30244
; THEN
L30236:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L30244:	CMP	000014(SP), #000007
L30252:	BEQ	L30260
L30254:	CLR	R0
L30256:	BR	L30264
L30260:	MOV	#000001, R0
L30264:	MOV	000010(SP), R1
L30270:	BIC	#177774, R1
L30274:	BEQ	L30302
L30276:	CLR	R1
L30300:	BR	L30306
L30302:	MOV	#000001, R1
L30306:	COMB	R1
L30310:	BICB	R1, R0
L30312:	BNE	L30320
L30314:	JMP	L30326
; THEN
L30320:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L30326:	CMP	000004(SP), #000007
L30334:	BEQ	L30342
L30336:	CLR	R0
L30340:	BR	L30346
L30342:	MOV	#000001, R0
L30346:	MOV	(SP), R1
L30350:	BIC	#177774, R1
L30354:	BEQ	L30362
L30356:	CLR	R1
L30360:	BR	L30366
L30362:	MOV	#000001, R1
L30366:	COMB	R1
L30370:	BICB	R1, R0
L30372:	BNE	L30400
L30374:	JMP	L30406
; THEN
L30400:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L30406:	CMP	000010(SP), #000006
L30414:	BEQ	L30422
L30416:	CLR	R0
L30420:	BR	L30426
L30422:	MOV	#000001, R0
L30426:	CMP	000010(SP), #000002
L30434:	BEQ	L30442
L30436:	CLR	R1
L30440:	BR	L30446
L30442:	MOV	#000001, R1
L30446:	CMP	000014(SP), #000007
L30454:	BEQ	L30462
L30456:	CLR	R2
L30460:	BR	L30466
L30462:	MOV	#000001, R2
L30466:	COMB	R2
L30470:	BICB	R2, R1
L30472:	BISB	R0, R1
L30474:	MOVB	R1, 000016(SP)
L30500:	CMP	(SP), #000006
L30504:	BEQ	L30512
L30506:	CLR	R0
L30510:	BR	L30516
L30512:	MOV	#000001, R0
L30516:	CMP	(SP), #000002
L30522:	BEQ	L30530
L30524:	CLR	R1
L30526:	BR	L30534
L30530:	MOV	#000001, R1
L30534:	CMP	000004(SP), #000007
L30542:	BEQ	L30550
L30544:	CLR	R2
L30546:	BR	L30554
L30550:	MOV	#000001, R2
L30554:	COMB	R2
L30556:	BICB	R2, R1
L30560:	BISB	R0, R1
L30562:	MOVB	R1, 000017(SP)
L30566:	MOVB	000016(SP), R0
L30572:	BISB	000017(SP), R0
L30576:	BNE	L30604
L30600:	JMP	L31002
L30604:	CLR	-(SP)
L30606:	MOV	SP, R4
L30610:	ADD	#000002, R4
L30614:	SUB	#000050, SP
L30620:	MOV	R5, R0
L30622:	ADD	#002556, R0
L30626:	MOV	SP, R1
L30630:	MOV	#000024, R2
L30634:	MOV	(R0)+, (R1)+
L30636:	DEC	R2
L30640:	BNE	L30634
L30642:	CALL	L25600
L30646:	MOVB	(SP)+, R0
L30650:	COMB	R0
L30652:	BICB	#177776, R0
L30656:	BNE	L30664
L30660:	JMP	L30672
; THEN
L30664:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L30672:	MOVB	000017(SP), R0
L30676:	COM	R0
L30700:	MOVB	000016(SP), R1
L30704:	BICB	R0, R1
L30706:	BNE	L30714
L30710:	JMP	L31002
L30714:	CLR	-(SP)
L30716:	MOV	SP, R4
L30720:	ADD	#000002, R4
L30724:	SUB	#000050, SP
L30730:	MOV	R5, R0
L30732:	ADD	#002626, R0
L30736:	MOV	SP, R1
L30740:	MOV	#000024, R2
L30744:	MOV	(R0)+, (R1)+
L30746:	DEC	R2
L30750:	BNE	L30744
L30752:	CALL	L25600
L30756:	MOVB	(SP)+, R0
L30760:	COMB	R0
L30762:	BICB	#177776, R0
L30766:	BNE	L30774
L30770:	JMP	L31002
; THEN
L30774:	MOVB	#000015, 053436(R5)	; Тип комнады = 15
L31002:	CMP	#010000, 053434(R5)	; CMDCODE <= 010000 ?
L31010:	BLOS	L31016			; да, переход
L31012:	CLR	R0
L31014:	BR	L31022
L31016:	MOV	#000001, R0
L31022:	CMP	053434(R5), #070000	; CMDCODE < 070000 ?
L31030:	BLO	L31036			; да, переход
L31032:	CLR	R1
L31034:	BR	L31042
L31036:	MOV	#000001, R1
L31042:	COMB	R1
L31044:	BICB	R1, R0
L31046:	BNE	L31054
L31050:	JMP	L31334
L31054:	CMP	000010(SP), #000006
L31062:	BEQ	L31070
L31064:	CLR	R0
L31066:	BR	L31074
L31070:	MOV	#000001, R0
L31074:	MOVB	000016(SP), R1
L31100:	COMB	R1
L31102:	BICB	#177776, R1
L31106:	CMP	(SP), #000006
L31112:	BEQ	L31120
L31114:	CLR	R2
L31116:	BR	L31124
L31120:	MOV	#000001, R2
L31124:	COMB	R2
L31126:	BICB	R2, R1
L31130:	BISB	R0, R1
L31132:	BNE	L31140
L31134:	JMP	L31220
L31140:	CLR	-(SP)
L31142:	MOV	SP, R4
L31144:	ADD	#000002, R4
L31150:	SUB	#000050, SP
L31154:	MOV	R5, R0
L31156:	ADD	#002556, R0
L31162:	MOV	SP, R1
L31164:	MOV	#000024, R2
L31170:	MOV	(R0)+, (R1)+
L31172:	DEC	R2
L31174:	BNE	L31170
L31176:	CALL	L26010
L31202:	TSTB	(SP)+
L31204:	BNE	L31212
L31206:	JMP	L31220
; THEN
L31212:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L31220:	CMP	(SP), #000006
L31224:	BEQ	L31232
L31226:	CLR	R0
L31230:	BR	L31236
L31232:	MOV	#000001, R0
L31236:	COMB	R0
L31240:	MOVB	000016(SP), R1
L31244:	BICB	R0, R1
L31246:	BNE	L31254
L31250:	JMP	L31334
L31254:	CLR	-(SP)
L31256:	MOV	SP, R4
L31260:	ADD	#000002, R4
L31264:	SUB	#000050, SP
L31270:	MOV	R5, R0
L31272:	ADD	#002626, R0
L31276:	MOV	SP, R1
L31300:	MOV	#000024, R2
L31304:	MOV	(R0)+, (R1)+
L31306:	DEC	R2
L31310:	BNE	L31304
L31312:	CALL	L26010
L31316:	TSTB	(SP)+
L31320:	BNE	L31326
L31322:	JMP	L31334
; THEN
L31326:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
; END IF; IF
L31334:	CMP	053434(R5), #071000	; CMDCODE = DIV ?
L31342:	BEQ	L31350
L31344:	JMP	L31374
; THEN
L31350:	MOV	000014(SP), R0
L31354:	BIC	#177776, R0
L31360:	BNE	L31366
L31362:	JMP	L31374
; THEN
L31366:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
; END IF; IF CMDCODE <> JMP AND CMDCODE <> JSR/CALL
L31374:	CMP	053434(R5), #000100	; CMDCODE = JMP ?
L31402:	BEQ	L31410
L31404:	CLR	R0
L31406:	BR	L31414
L31410:	MOV	#000001, R0
L31414:	CMP	053434(R5), #004000	; CMDCODE = JSR/CALL ?
L31422:	BEQ	L31430
L31424:	CLR	R1
L31426:	BR	L31434
L31430:	MOV	#000001, R1
L31434:	BISB	R0, R1
L31436:	BNE	L31444
L31440:	JMP	L31520
; THEN
L31444:	TST	000002(SP)
L31450:	BEQ	L31456
L31452:	CLR	R0
L31454:	BR	L31462
L31456:	MOV	#000001, R0
L31462:	CMP	(SP), #000002
L31466:	BLE	L31474
L31470:	CLR	R1
L31472:	BR	L31500
L31474:	MOV	#000001, R1
L31500:	COMB	R1
L31502:	BICB	R1, R0
L31504:	BNE	L31512
L31506:	JMP	L31520
L31512:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L31520:	MOV	#L33356, -(SP)
L31524:	CALL	L52316			; PSHSET
L31530:	CLR	-(SP)
L31532:	MOVB	053436(R5), (SP)	; CMDTYPE
L31536:	CALL	L52134			; DOIN
L31542:	BNE	L31550
L31544:	JMP	L31730
; THEN
L31550:	CMP	000004(SP), #000007
L31556:	BEQ	L31564
L31560:	CLR	R0
L31562:	BR	L31570
L31564:	MOV	#000001, R0
L31570:	MOV	(SP), R1
L31572:	BIC	#177774, R1
L31576:	BEQ	L31604
L31600:	CLR	R1
L31602:	BR	L31610
L31604:	MOV	#000001, R1
L31610:	COMB	R1
L31612:	BICB	R1, R0
L31614:	BNE	L31622
L31616:	JMP	L31630
L31622:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
L31630:	CMP	(SP), #000006
L31634:	BEQ	L31642
L31636:	JMP	L31730
L31642:	CLR	-(SP)
L31644:	MOV	SP, R4
L31646:	ADD	#000002, R4
L31652:	SUB	#000050, SP
L31656:	MOV	R5, R0
L31660:	ADD	#002556, R0
L31664:	MOV	SP, R1
L31666:	MOV	#000024, R2
L31672:	MOV	(R0)+, (R1)+
L31674:	DEC	R2
L31676:	BNE	L31672
L31700:	CALL	L25600
L31704:	MOVB	(SP)+, R0
L31706:	COMB	R0
L31710:	BICB	#177776, R0
L31714:	BNE	L31722
L31716:	JMP	L31730
; THEN
L31722:	MOVB	#000015, 053436(R5)	; CMDTYPE = 15
; END IF; IF
L31730:	CMPB	053436(R5), #000015	; CMDTYPE = 15 ?
L31736:	BEQ	L31744
L31740:	JMP	L31774
; THEN
L31744:	CALL	L16470
L31750:	CALL	L10544
L31754:	MOV	#000040, -(SP)
L31760:	CALL	L10442
L31764:	CALL	L22640
L31770:	JMP	L33224
; ELSE; IF
L31774:	CMPB	053436(R5), #000014	; CMDTYPE = 14 ?
L32002:	BEQ	L32010
L32004:	JMP	L32040
; THEN
L32010:	CALL	L10544
L32014:	MOV	#000040, -(SP)
L32020:	CALL	L10442
L32024:	MOV	053432(R5), -(SP)
L32030:	CALL	L11032
L32034:	JMP	L33224
; ELSE
L32040:	CALL	L10544
L32044:	SUB	#000006, SP
L32050:	MOV	SP, R0
L32052:	MOV	053440(R5), (R0)+		; Обозначение команды
L32056:	MOV	053442(R5), (R0)+		;
L32062:	MOV	053444(R5), (R0)+		;
L32066:	CALL	L11602
L32072:	CMP	053434(R5), #000207		; CMDCODE = RETURN ?
L32100:	BEQ	L32106
L32102:	JMP	L32132
; THEN
L32106:	SUB	#000006, SP
L32112:	MOV	#L33236, R0		; "RN\   "
L32116:	MOV	SP, R1
L32120:	MOV	(R0)+, (R1)+
L32122:	MOV	(R0)+, (R1)+
L32124:	MOV	(R0)+, (R1)+
L32126:	CALL	L10562
; END IF
L32132:	CALL	L10544
L32136:	MOVB	053436(R5), R0		; CMDTYPE
L32142:	SUB	#000001, R0
L32146:	BGE	L32154
L32150:	JMP	L33172
; THEN
L32154:	CMP	#000012, R0		; CMDTYPE = 13 ?
L32160:	BGE	L32166
L32162:	JMP	L33172
; THEN
L32166:	ASL	R0
L32170:	JMP	@L33176(R0)		; Переход по типу команды
; CASE OF CMDTYPE = 2 - RTS / FDIV/FMUL/FSUB/FADD
L32174:	MOV	SP, R4
L32176:	CALL	L26426
L32202:	CLR	(SP)
L32204:	CLR	000002(SP)
L32210:	MOV	SP, R4
L32212:	CALL	L27360
L32216:	JMP	L33224
; CASE OF CMDTYPE = 1
L32222:	MOV	SP, R4
L32224:	CALL	L26426
L32230:	CMP	053434(R5), #000100	; CMDCODE = JMP ?
L32236:	BEQ	L32244
L32240:	JMP	L32270
; THEN
L32244:	MOV	#L33346, -(SP)		; Множество
L32250:	CALL	L52316			; PSHSET
L32254:	MOV	R5, R0
L32256:	ADD	#052356, R0
L32262:	MOV	R0, -(SP)
L32264:	CALL	L52360			; POPSET
; END IF
L32270:	CMP	053434(R5), #004700	; CMDCODE = CALL ?
L32276:	BEQ	L32304
L32300:	JMP	L32330
; THEN
L32304:	MOV	#L33336, -(SP)
L32310:	CALL	L52316			; PSHSET
L32314:	MOV	R5, R0
L32316:	ADD	#052356, R0
L32322:	MOV	R0, -(SP)
L32324:	CALL	L52360			; POPSET
; END IF
L32330:	MOV	SP, R4
L32332:	CALL	L27360
L32336:	JMP	L33224
; CASE OF CMDTYPE = 6 - XOR/JSR
L32342:	MOV	SP, R4
L32344:	CALL	L26502
L32350:	CLR	(SP)
L32352:	CLR	000002(SP)
L32356:	MOV	SP, R4
L32360:	CALL	L27360
L32364:	SUB	#000006, SP
L32370:	MOV	#L33246, R0		; ", \   "
L32374:	MOV	SP, R1
L32376:	MOV	(R0)+, (R1)+
L32400:	MOV	(R0)+, (R1)+
L32402:	MOV	(R0)+, (R1)+
L32404:	CALL	L10562
L32410:	MOV	SP, R4
L32412:	CALL	L26426
L32416:	CMP	053434(R5), #004000	; CMDCODE = JSR ?
L32424:	BEQ	L32432
L32426:	JMP	L32456
; THEN
L32432:	MOV	#L33326, -(SP)
L32436:	CALL	L52316			; PSHSET
L32442:	MOV	R5, R0
L32444:	ADD	#052356, R0
L32450:	MOV	R0, -(SP)
L32452:	CALL	L52360			; POPSET
; END IF
L32456:	MOV	SP, R4
L32460:	CALL	L27360
L32464:	JMP	L33224
; CASE OF CMDTYPE = 7
L32470:	MOV	SP, R4
L32472:	CALL	L26426
L32476:	MOV	SP, R4
L32500:	CALL	L27360
L32504:	SUB	#000006, SP
L32510:	MOV	#033256, R0
L32514:	MOV	SP, R1
L32516:	MOV	(R0)+, (R1)+
L32520:	MOV	(R0)+, (R1)+
L32522:	MOV	(R0)+, (R1)+
L32524:	CALL	L10562
L32530:	MOV	SP, R4
L32532:	CALL	L26502
L32536:	CLR	(SP)
L32540:	CLR	000002(SP)
L32544:	MOV	SP, R4
L32546:	CALL	L27360
L32552:	JMP	L33224
; CASE OF CMDTYPE = 12 - SUB/BISB/BICB/BITB/CMPB/MOVB
L32556:	MOV	SP, R4
L32560:	CALL	L26502
L32564:	MOV	SP, R4
L32566:	CALL	L27360
L32572:	SUB	#000006, SP
L32576:	MOV	#033266, R0
L32602:	MOV	SP, R1
L32604:	MOV	(R0)+, (R1)+
L32606:	MOV	(R0)+, (R1)+
L32610:	MOV	(R0)+, (R1)+
L32612:	CALL	L10562
L32616:	MOV	SP, R4
L32620:	CALL	L26426
L32624:	MOV	SP, R4
L32626:	CALL	L27360
L32632:	JMP	L33224
; CASE OF CMDTYPE = 5  - команды перехода Bxx
L32636:	MOV	053432(R5), R0
L32642:	BIC	#177400, R0		; Оставляем смещение
L32646:	MOV	R0, 000006(SP)		; SP06 = смещение
L32652:	CMP	000006(SP), #000200	; Смещение >= 0200 ?
L32660:	BGE	L32666
L32662:	JMP	L32674
; THEN
L32666:	ADD	#177400, 000006(SP)	; расширение знака SP06
; END IF
L32674:	MOV	#L33316, -(SP)
L32700:	CALL	L52316			; PSHSET
L32704:	MOV	R5, R0
L32706:	ADD	#052356, R0
L32712:	MOV	R0, -(SP)
L32714:	CALL	L52360			; POPSET
L32720:	SUB	#000006, SP
L32724:	MOV	SP, R0
L32726:	MOV	053402(R5), (R0)+
L32732:	MOV	053404(R5), (R0)+
L32736:	MOV	053406(R5), (R0)+
L32742:	MOV	000014(SP), R0		; SP06
L32746:	ASL	R0
L32750:	ADD	053410(R5), R0
L32754:	MOV	R0, -(SP)
L32756:	CALL	L15350
L32762:	JMP	L33224
; CASE OF CMDTYPE = 13 - SOB
L32766:	MOV	SP, R4
L32770:	CALL	L26502
L32774:	CLR	(SP)
L32776:	CLR	000002(SP)
L33002:	MOV	SP, R4
L33004:	CALL	L27360
L33010:	SUB	#000006, SP
L33014:	MOV	#L33276, R0	; ", \   "
L33020:	MOV	SP, R1
L33022:	MOV	(R0)+, (R1)+	; Копируем 6 символов на стек
L33024:	MOV	(R0)+, (R1)+	;
L33026:	MOV	(R0)+, (R1)+	;
L33030:	CALL	L10562
L33034:	MOV	053432(R5), R0
L33040:	BIC	#177700, R0		; 0..77
L33044:	MOV	R0, 000006(SP)
L33050:	MOV	#L33306, -(SP)		; Множество
L33054:	CALL	L52316			; PSHSET
L33060:	MOV	R5, R0
L33062:	ADD	#052356, R0
L33066:	MOV	R0, -(SP)
L33070:	CALL	L52360			; POPSET
L33074:	SUB	#000006, SP
L33100:	MOV	SP, R0
L33102:	MOV	053402(R5), (R0)+
L33106:	MOV	053404(R5), (R0)+
L33112:	MOV	053406(R5), (R0)+
L33116:	MOV	000014(SP), R0
L33122:	ASL	R0
L33124:	MOV	053410(R5), R1
L33130:	SUB	R0, R1
L33132:	MOV	R1, -(SP)
L33134:	CALL	L15350
L33140:	JMP	L33224
; CASE OF CMDTYPE = 10 - TRAP/EMT
L33144:	CLR	-(SP)
L33146:	MOV	053432(R5), -(SP)
L33152:	CALL	L10426
L33156:	MOV	(SP)+, R0
L33160:	MOV	R0, -(SP)
L33162:	CALL	L11032
L33166:	JMP	L33224
; CASE OF CMDTYPE = 3, 4, 11, либо завершение CASE OF
L33172:	JMP	L33224
; Адреса переходов по CASE OF CMDTYPE
L33176:	.WORD	L32222		; 1
L33200:	.WORD	L32174		; 2
L33202:	.WORD	L33172		; 3
L33204:	.WORD	L33172		; 4
L33206:	.WORD	L32636		; 5  - команды перехода Bxx
L33210:	.WORD	L32342		; 6
L33212:	.WORD	L32470		; 7
L33214:	.WORD	L33144		; 10 - TRAP/EMT
L33216:	.WORD	L33172		; 11
L33220:	.WORD	L32556		; 12
L33222:	.WORD	L32766		; 13 - SOB
; END OF CASE OF
L33224:	CALL	010516
L33230:	ADD	#000020, SP
L33234:	RETURN
;
L33236:	.ASCIZ	/RN\   /<0>
L33246:	.ASCIZ	/, \   /<0>
L33256:	.ASCIZ	/, \   /<0>
L33266:	.ASCIZ	/, \   /<0>
L33276:	.ASCIZ	/, \   /<0>
;
L33306:	.WORD	000040		; Множество для SOB
L33310:	.WORD	0
L33312:	.WORD	0
L33314:	.WORD	0
L33316:	.WORD	000040		; Множество для Bxx команд перехода
L33320:	.WORD	0
L33322:	.WORD	0
L33324:	.WORD	0
L33326:	.WORD	000010		; Множество для команд XOR/JSR
L33330:	.WORD	0
L33332:	.WORD	0
L33334:	.WORD	0
L33336:	.WORD	000010		; Множество для CALL
L33340:	.WORD	0
L33342:	.WORD	0
L33344:	.WORD	0
L33346:	.WORD	000020		; Множество для JMP
L33350:	.WORD	0
L33352:	.WORD	0
L33354:	.WORD	0
L33356:	.WORD	000302
L33360:	.WORD	0
L33362:	.WORD	0
L33364:	.WORD	0
;
L33366:	MOV	(R4), R4
L33370:	MOV	(R4), R4
L33372:	MOV	(R4), R4
L33374:	MOV	(R4), R4
L33376:	MOV	(R4), R4
L33400:	MOV	(R4), R4
L33402:	MOV	(R4), R4
L33404:	MOV	(R4), R4
;
L33406:	MOV	R4, -(SP)
L33410:	JSR	R0, L53000		; SVREG
L33414:	CMP	#000040, 000016(SP)
L33422:	BLOS	L33430
L33424:	CLR	R0
L33426:	BR	L33434
L33430:	MOV	#000001, R0
L33434:	CMP	000016(SP), #000177
L33442:	BLOS	L33450
L33444:	CLR	R1
L33446:	BR	L33454
L33450:	MOV	#000001, R1
L33454:	COMB	R1
L33456:	BICB	R1, R0
L33460:	CMP	000016(SP), #000007
L33466:	BEQ	L33474
L33470:	CLR	R1
L33472:	BR	L33500
L33474:	MOV	#000001, R1
L33500:	BISB	R0, R1
L33502:	CMP	000016(SP), #000011
L33510:	BEQ	L33516
L33512:	CLR	R0
L33514:	BR	L33522
L33516:	MOV	#000001, R0
L33522:	BISB	R1, R0
L33524:	CMP	000016(SP), #000015
L33532:	BEQ	L33540
L33534:	CLR	R1
L33536:	BR	L33544
L33540:	MOV	#000001, R1
L33544:	BISB	R0, R1
L33546:	CMP	000016(SP), #000012
L33554:	BEQ	L33562
L33556:	CLR	R0
L33560:	BR	L33566
L33562:	MOV	#000001, R0
L33566:	BISB	R1, R0
L33570:	CMP	000016(SP), #000014
L33576:	BEQ	L33604
L33600:	CLR	R1
L33602:	BR	L33610
L33604:	MOV	#000001, R1
L33610:	BISB	R0, R1
L33612:	CMP	000016(SP), #000200
L33620:	BEQ	L33626
L33622:	CLR	R0
L33624:	BR	L33632
L33626:	MOV	#000001, R0
L33632:	BISB	R1, R0
L33634:	TST	000016(SP)
L33640:	BEQ	L33646
L33642:	CLR	R1
L33644:	BR	L33652
L33646:	MOV	#000001, R1
L33652:	BISB	R0, R1
L33654:	MOVB	R1, 000020(SP)
L33660:	JSR	R0, L53030		; UNREG
L33664:	MOV	000002(SP), 000004(SP)
L33672:	ADD	#000004, SP
L33676:	RETURN
;
L33700:	MOV	(R4), R4
L33702:	MOV	(R4), R4
L33704:	MOV	(R4), R4
L33706:	MOV	(R4), R4
L33710:	MOV	(R4), R4
L33712:	MOV	(R4), R4
L33714:	MOV	(R4), R4
L33716:	MOV	(R4), R4
;
L33720:	MOV	R4, -(SP)
L33722:	CALL	L53046			; STKCHK
L33726:	MOV	(SP), R0
L33730:	TST	000074(R0)
L33734:	BGT	L33742
L33736:	JMP	L35252
L33742:	CALL	L10544
L33746:	MOV	(SP), R0
L33750:	MOV	(SP), R1
L33752:	MOV	000074(R1), R1
L33756:	CMP	R1, #000001		; 1
L33762:	BLT	L33772
L33764:	CMP	R1, #000074		; 60.
L33770:	BLE	L33776
L33772:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L33776:	ADD	R0, R1
L34000:	TSTB	177777(R1)
L34004:	BNE	L34012
L34006:	CLR	R0
L34010:	BR	L34016
L34012:	MOV	#000001, R0
L34016:	MOV	(SP), R1
L34020:	CMP	000074(R1), #000001
L34026:	BEQ	L34034
L34030:	CLR	R1
L34032:	BR	L34040
L34034:	MOV	#000001, R1
L34040:	BISB	R0, R1
L34042:	BNE	L34050
L34044:	JMP	L34100
;
L34050:	SUB	#000006, SP
L34054:	MOV	#L35266, R0		; ".ASCII"
L34060:	MOV	SP, R1
L34062:	MOV	(R0)+, (R1)+
L34064:	MOV	(R0)+, (R1)+
L34066:	MOV	(R0)+, (R1)+
L34070:	CALL	L10562
L34074:	JMP	L34142
;
L34100:	SUB	#000006, SP
L34104:	MOV	#L35276, R0		; ".ASCIZ"
L34110:	MOV	SP, R1
L34112:	MOV	(R0)+, (R1)+
L34114:	MOV	(R0)+, (R1)+
L34116:	MOV	(R0)+, (R1)+
L34120:	CALL	L10562
L34124:	MOV	(SP), R0
L34126:	MOV	(SP), R1
L34130:	MOV	000074(R1), R1
L34134:	DEC	R1
L34136:	MOV	R1, 000074(R0)
L34142:	CALL	L10544
L34146:	MOV	(SP), R0
L34150:	MOVB	#000042, 000101(R0)
L34156:	MOV	(SP), R0
L34160:	ADD	#000076, R0
L34164:	MOV	R0, -(SP)
L34166:	MOV	#000001, -(SP)
L34172:	MOV	000004(SP), R0
L34176:	MOV	000074(R0), -(SP)
L34202:	MOV	000002(SP), @000004(SP)
L34210:	CMP	@000004(SP), (SP)
L34214:	BLE	L34222
L34216:	JMP	L34322
L34222:	MOV	000006(SP), R0
L34226:	MOV	000006(SP), R1
L34232:	MOV	000076(R1), R1
L34236:	CMP	R1, #000001		; 1
L34242:	BLT	L34252
L34244:	CMP	R1, #000074		; 60.
L34250:	BLE	L34256
L34252:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L34256:	ADD	R0, R1
L34260:	MOV	000006(SP), R0
L34264:	CMPB	177777(R1), 000101(R0)
L34272:	BEQ	L34300
L34274:	JMP	L34312
L34300:	MOV	000006(SP), R0
L34304:	MOVB	#000057, 000101(R0)
L34312:	INC	@000004(SP)
L34316:	JMP	L34210
L34322:	ADD	#000006, SP
L34326:	MOV	(SP), R0
L34330:	CMPB	(R0), #000040
L34334:	BGE	L34342
L34336:	JMP	L34356
L34342:	MOV	(SP), R0
L34344:	CLR	-(SP)
L34346:	MOVB	000101(R0), (SP)
L34352:	CALL	L10442
L34356:	MOV	(SP), R0
L34360:	ADD	#000076, R0
L34364:	MOV	R0, -(SP)
L34366:	MOV	#000001, -(SP)
L34372:	MOV	000004(SP), R0
L34376:	MOV	000074(R0), -(SP)
L34402:	MOV	000002(SP), @000004(SP)
L34410:	CMP	@000004(SP), (SP)
L34414:	BLE	L34422
L34416:	JMP	L35160
L34422:	MOV	000006(SP), R0
L34426:	MOV	000006(SP), R1
L34432:	MOV	000076(R1), R1
L34436:	CMP	R1, #000001		; 1
L34442:	BLT	L34452
L34444:	CMP	R1, #000074		; 60.
L34450:	BLE	L34456
L34452:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L34456:	ADD	R0, R1
L34460:	CMPB	177777(R1), #000040
L34466:	BGE	L34474
L34470:	JMP	L34550
L34474:	MOV	000006(SP), R0
L34500:	MOV	000006(SP), R1
L34504:	MOV	000076(R1), R1
L34510:	CMP	R1, #000001		; 1
L34514:	BLT	L34524
L34516:	CMP	R1, #000074		; 60.
L34522:	BLE	L34530
L34524:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L34530:	ADD	R0, R1
L34532:	CLR	-(SP)
L34534:	MOVB	177777(R1), (SP)
L34540:	CALL	L10442
L34544:	JMP	L35150
L34550:	MOV	000006(SP), R0
L34554:	CMP	000076(R0), #000001
L34562:	BGT	L34570
L34564:	JMP	L34662
L34570:	MOV	000006(SP), R0
L34574:	MOV	000006(SP), R1
L34600:	MOV	000076(R1), R1
L34604:	DEC	R1
L34606:	CMP	R1, #000001		; 1
L34612:	BLT	L34622
L34614:	CMP	R1, #000074		; 60
L34620:	BLE	L34626
L34622:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L34626:	ADD	R0, R1
L34630:	CMPB	177777(R1), #000040
L34636:	BGE	L34644
L34640:	JMP	L34662
L34644:	MOV	000006(SP), R0
L34650:	CLR	-(SP)
L34652:	MOVB	000101(R0), (SP)
L34656:	CALL	L10442
L34662:	MOV	#000074, -(SP)
L34666:	CALL	L10442
L34672:	MOV	000006(SP), R0
L34676:	MOV	000006(SP), R1
L34702:	MOV	000006(SP), R2
L34706:	MOV	000076(R2), R2
L34712:	CMP	R2, #000001		; 1
L34716:	BLT	L34726
L34720:	CMP	R2, #000074		; 60
L34724:	BLE	L34732
L34726:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L34732:	ADD	R1, R2
L34734:	MOVB	177777(R2), R1
L34740:	MOV	R1, 000102(R0)
L34744:	MOV	000006(SP), R0
L34750:	TST	000102(R0)
L34754:	BLT	L34762
L34756:	JMP	L35006
L34762:	MOV	000006(SP), R0
L34766:	MOV	000006(SP), R1
L34772:	MOV	000102(R1), R1
L34776:	ADD	#000400, R1
L35002:	MOV	R1, 000102(R0)
L35006:	MOV	000006(SP), R0
L35012:	MOV	000102(R0), -(SP)
L35016:	CALL	L11032
L35022:	MOV	#000076, -(SP)
L35026:	CALL	L10442
L35032:	MOV	000006(SP), R0
L35036:	MOV	000006(SP), R1
L35042:	CMP	000076(R0), 000074(R1)
L35050:	BLT	L35056
L35052:	JMP	L35150
L35056:	MOV	000006(SP), R0
L35062:	MOV	000006(SP), R1
L35066:	MOV	000076(R1), R1
L35072:	INC	R1
L35074:	CMP	R1, #000001		; 1
L35100:	BLT	L35110
L35102:	CMP	R1, #000074		; 60
L35106:	BLE	L35114
L35110:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L35114:	ADD	R0, R1
L35116:	CMPB	177777(R1), #000040
L35124:	BGE	L35132
L35126:	JMP	L35150
L35132:	MOV	000006(SP), R0
L35136:	CLR	-(SP)
L35140:	MOVB	000101(R0), (SP)
L35144:	CALL	L10442
L35150:	INC	@000004(SP)
L35154:	JMP	L34410
L35160:	ADD	#000006, SP
L35164:	MOV	(SP), R0
L35166:	MOV	(SP), R1
L35170:	MOV	000074(R1), R1
L35174:	CMP	R1, #000001		; 1
L35200:	BLT	L35210
L35202:	CMP	R1, #000074		; 60
L35206:	BLE	L35214
L35210:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L35214:	ADD	R0, R1
L35216:	CMPB	177777(R1), #000040
L35224:	BGE	L35232
L35226:	JMP	L35246
L35232:	MOV	(SP), R0
L35234:	CLR	-(SP)
L35236:	MOVB	000101(R0), (SP)
L35242:	CALL	L10442
L35246:	CALL	L10516
L35252:	MOV	(SP), R0
L35254:	CLR	000074(R0)
L35260:	ADD	#000002, SP
L35264:	RETURN
;
L35266:	.ASCIZ	/.ASCII/<0>
L35276:	.ASCIZ	/.ASCIZ/<0>
;
L35306:	MOV	(R4), R4
L35310:	MOV	(R4), R4
L35312:	MOV	(R4), R4
L35314:	MOV	(R4), R4
L35316:	MOV	(R4), R4
L35320:	MOV	(R4), R4
L35322:	MOV	(R4), R4
L35324:	MOV	(R4), R4
;
L35326:	MOV	R4, -(SP)
L35330:	CALL	L53046			; STKCHK
L35334:	MOV	(SP), R0
L35336:	MOV	(SP), R1
L35340:	MOV	000074(R1), R1
L35344:	INC	R1
L35346:	MOV	R1, 000074(R0)
L35352:	MOV	(SP), R0
L35354:	MOV	(SP), R1
L35356:	MOV	000074(R1), R1
L35362:	CMP	R1, #000001		; 1
L35366:	BLT	L35376
L35370:	CMP	R1, #000074		; 60.
L35374:	BLE	L35402
L35376:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L35402:	ADD	R0, R1
L35404:	MOVB	000004(SP), 177777(R1)
L35412:	MOV	(SP), R0
L35414:	CMP	000074(R0), #000074
L35422:	BGE	L35430
L35424:	CLR	R0
L35426:	BR	L35434
L35430:	MOV	#000001, R0
L35434:	TST	000004(SP)
L35440:	BEQ	L35446
L35442:	CLR	R1
L35444:	BR	L35452
L35446:	MOV	#000001, R1
L35452:	BISB	R0, R1
L35454:	CMP	000004(SP), #000200
L35462:	BEQ	L35470
L35464:	CLR	R0
L35466:	BR	L35474
L35470:	MOV	#000001, R0
L35474:	BISB	R1, R0
L35476:	BNE	L35504
L35500:	JMP	L35512
L35504:	MOV	SP, R4
L35506:	CALL	L33716
L35512:	INC	053410(R5)
L35516:	MOV	000002(SP), 000004(SP)
L35524:	ADD	#000004, SP
L35530:	RETURN
;
L35532:	SUB	#000106, SP
L35536:	CALL	L53046			; STKCHK
L35542:	CLRB	000100(SP)
L35546:	MOV	053410(R5), R0
L35552:	ADD	#000003, R0
L35556:	CMP	R0, 053424(R5)
L35562:	BLOS	L35570
L35564:	JMP	L36476
L35570:	CMPB	002556(R5), #000003
L35576:	BEQ	L35604
L35600:	JMP	L36476
L35604:	CLR	-(SP)
L35606:	MOV	SP, R4
L35610:	ADD	#000002, R4
L35614:	CLR	-(SP)
L35616:	MOV	002542(R5), -(SP)
L35622:	CALL	L10426
L35626:	MOV	(SP)+, R0
L35630:	MOV	R0, -(SP)
L35632:	MOV	SP, R4
L35634:	ADD	#000004, R4
L35640:	CALL	L33406
L35644:	CLR	-(SP)
L35646:	MOV	002542(R5), -(SP)
L35652:	CALL	L10426
L35656:	MOV	(SP)+, R0
L35660:	BNE	L35666
L35662:	CLR	R0
L35664:	BR	L35672
L35666:	MOV	#000001, R0
L35672:	COMB	R0
L35674:	BICB	R0, (SP)
L35676:	CMP	002534(R5), #000001
L35704:	BEQ	L35712
L35706:	CLR	R0
L35710:	BR	L35716
L35712:	MOV	#000001, R0
L35716:	CLR	-(SP)
L35720:	MOV	SP, R4
L35722:	ADD	#000004, R4
L35726:	CLR	-(SP)
L35730:	MOV	002542(R5), -(SP)
L35734:	CALL	L10432
L35740:	MOV	(SP)+, R1
L35742:	MOV	R1, -(SP)
L35744:	MOV	SP, R4
L35746:	ADD	#000006, R4
L35752:	CALL	L33406
L35756:	CLR	-(SP)
L35760:	MOV	002542(R5), -(SP)
L35764:	CALL	L10432
L35770:	MOV	(SP)+, R1
L35772:	BNE	L36000
L35774:	CLR	R1
L35776:	BR	L36004
L36000:	MOV	#000001, R1
L36004:	COMB	R1
L36006:	BICB	R1, (SP)
L36010:	BISB	(SP)+, R0
L36012:	COMB	R0
L36014:	BICB	R0, (SP)
L36016:	CLR	-(SP)
L36020:	MOV	SP, R4
L36022:	ADD	#000004, R4
L36026:	CLR	-(SP)
L36030:	MOV	002612(R5), -(SP)
L36034:	CALL	L10426
L36040:	MOV	(SP)+, R0
L36042:	MOV	R0, -(SP)
L36044:	MOV	SP, R4
L36046:	ADD	#000006, R4
L36052:	CALL	L33406
L36056:	MOVB	(SP)+, R0
L36060:	COM	R0
L36062:	BICB	R0, (SP)
L36064:	TSTB	(SP)+
L36066:	BNE	L36074
L36070:	JMP	L36476
L36074:	CLR	000074(SP)
L36100:	MOV	SP, R4
L36102:	CLR	-(SP)
L36104:	MOV	002542(R5), -(SP)
L36110:	CALL	L10426
L36114:	MOV	(SP)+, R0
L36116:	MOV	R0, -(SP)
L36120:	MOV	SP, R4
L36122:	ADD	#000002, R4
L36126:	CALL	L35326
L36132:	TST	002534(R5)
L36136:	BEQ	L36144
L36140:	JMP	L36176
L36144:	MOV	SP, R4
L36146:	CLR	-(SP)
L36150:	MOV	002542(R5), -(SP)
L36154:	CALL	L10432
L36160:	MOV	(SP)+, R0
L36162:	MOV	R0, -(SP)
L36164:	MOV	SP, R4
L36166:	ADD	#000002, R4
L36172:	CALL	L35326
L36176:	MOV	R5, R0
L36200:	ADD	#052366, R0
L36204:	MOV	R0, -(SP)
L36206:	CALL	L10436
L36212:	MOV	SP, R4
L36214:	CLR	-(SP)
L36216:	MOV	002542(R5), -(SP)
L36222:	CALL	L10426
L36226:	MOV	(SP)+, R0
L36230:	MOV	R0, -(SP)
L36232:	MOV	SP, R4
L36234:	ADD	#000002, R4
L36240:	CALL	L35326
L36244:	CMP	002534(R5), #000001
L36252:	BEQ	L36260
L36254:	JMP	L36300
L36260:	MOV	R5, R0
L36262:	ADD	#052366, R0
L36266:	MOV	R0, -(SP)
L36270:	CALL	L10436
L36274:	JMP	L36332
L36300:	MOV	#000001, 002534(R5)
L36306:	INC	002536(R5)
L36312:	CLR	-(SP)
L36314:	MOV	002542(R5), -(SP)
L36320:	CALL	L10432
L36324:	MOV	(SP)+, R0
L36326:	MOV	R0, 002542(R5)
L36332:	CMPB	002506(R5), #000003
L36340:	BNE	L36346
L36342:	CLR	R0
L36344:	BR	L36352
L36346:	MOV	#000001, R0
L36352:	CLR	-(SP)
L36354:	MOV	SP, R4
L36356:	ADD	#000002, R4
L36362:	CLR	-(SP)
L36364:	MOV	002542(R5), -(SP)
L36370:	CALL	L10426
L36374:	MOV	(SP)+, R1
L36376:	MOV	R1, -(SP)
L36400:	MOV	SP, R4
L36402:	ADD	#000004, R4
L36406:	CALL	L33406
L36412:	MOVB	(SP)+, R1
L36414:	COMB	R1
L36416:	BICB	#177776, R1
L36422:	BISB	R0, R1
L36424:	CMP	053410(R5), 053424(R5)
L36432:	BHIS	L36440
L36434:	CLR	R0
L36436:	BR	L36444
L36440:	MOV	#000001, R0
L36444:	BISB	R1, R0
L36446:	BNE	L36454
L36450:	JMP	L36212
L36454:	MOVB	#000001, 053400(R5)
L36462:	MOV	SP, R4
L36464:	CALL	L33720
L36470:	MOVB	#000001, 000100(SP)
L36476:	MOVB	000100(SP), R0
L36502:	COMB	R0
L36504:	BICB	#177776, R0
L36510:	BNE	L36516
L36512:	JMP	L36766
L36516:	CALL	L10544
L36522:	MOV	053410(R5), R0
L36526:	INC	R0
L36530:	CMP	053424(R5), R0
L36534:	BEQ	L36542
L36536:	JMP	L36630
L36542:	TST	002534(R5)
L36546:	BEQ	L36554
L36550:	JMP	L36630
L36554:	CLR	-(SP)
L36556:	MOV	002542(R5), -(SP)
L36562:	CALL	L10432
L36566:	MOV	(SP)+, R0
L36570:	MOV	R0, 000104(SP)
L36574:	CLR	-(SP)
L36576:	MOV	002542(R5), -(SP)
L36602:	CALL	L10426
L36606:	MOV	(SP)+, R0
L36610:	MOV	R0, 002542(R5)
L36614:	MOV	#000001, 002534(R5)
L36622:	MOVB	#000001, 053400(R5)
L36630:	TST	002534(R5)
L36634:	BEQ	L36642
L36636:	JMP	L36656
L36642:	MOV	#000040, -(SP)
L36646:	CALL	L10442
L36652:	JMP	L36712
L36656:	SUB	#000006, SP
L36662:	MOV	#036774, R0
L36666:	MOV	SP, R1
L36670:	MOV	(R0)+, (R1)+
L36672:	MOV	(R0)+, (R1)+
L36674:	MOV	(R0)+, (R1)+
L36676:	CALL	L10562
L36702:	CALL	L10544
L36706:	CALL	L16470
L36712:	CALL	L22640
L36716:	CALL	L10516
L36722:	MOV	#000002, R0
L36726:	SUB	002534(R5), R0
L36732:	ADD	053410(R5), R0
L36736:	MOV	R0, 053410(R5)
L36742:	TSTB	053400(R5)
L36746:	BNE	L36754
L36750:	JMP	L36766
L36754:	INC	002536(R5)
L36760:	MOV	000104(SP), 002542(R5)
L36766:	ADD	#000106, SP
L36772:	RETURN
;
L36774:	BIC	(R0), @-(SP)
L36776:	BIS	(R1)+, @(R1)+
L37000:	BIS	000000(R1), R5
L37004:	CALL	L53046			; STKCHK
L37010:	MOV	R5, R0
L37012:	ADD	#053402, R0
L37016:	MOV	SP, R1
L37020:	ADD	#000004, R1
L37024:	MOV	#000006, R2
L37030:	CMPB	(R0)+, (R1)+
L37032:	BNE	L37040
L37034:	DEC	R2
L37036:	BNE	L37030
L37040:	BNE	L37046
L37042:	CLR	R0
L37044:	BR	L37052
L37046:	MOV	#000001, R0
L37052:	CMP	000002(SP), 053410(R5)
L37060:	BNE	L37066
L37062:	CLR	R1
L37064:	BR	L37072
L37066:	MOV	#000001, R1
L37072:	BISB	R0, R1
L37074:	BNE	L37102
L37076:	JMP	L37106
L37102:	CALL	L10516
L37106:	MOV	R5, R0
L37110:	ADD	#053402, R0
L37114:	MOV	SP, R1
L37116:	ADD	#000004, R1
L37122:	MOV	#000006, R2
L37126:	CMPB	(R0)+, (R1)+
L37130:	BNE	L37136
L37132:	DEC	R2
L37134:	BNE	L37126
L37136:	BNE	L37144
L37140:	JMP	L37534
L37144:	SUB	#000006, SP
L37150:	MOV	SP, R0
L37152:	MOV	053402(R5), (R0)+
L37156:	MOV	053404(R5), (R0)+
L37162:	MOV	053406(R5), (R0)+
L37166:	CALL	L12262
L37172:	MOV	004370(R5), R0
L37176:	CMP	R0, #000000		; 0
L37202:	BLT	L37212
L37204:	CMP	R0, #000030		; 24.
L37210:	BLE	L37216
L37212:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L37216:	MOV	R0, -(SP)
L37220:	MOV	#000014, -(SP)
L37224:	CALL	L52624			; UNSMUL
L37230:	MOV	R5, R0
L37232:	ADD	(SP)+, R0
L37234:	MOV	053410(R5), 003722(R0)
L37242:	CALL	L10544
L37246:	MOV	#012674, R0
L37252:	MOV	SP, R1
L37254:	ADD	#000004, R1
L37260:	MOV	#000006, R2
L37264:	CMPB	(R0)+, (R1)+
L37266:	BNE	L37274
L37270:	DEC	R2
L37272:	BNE	L37264
L37274:	BEQ	L37302
L37276:	JMP	L37332
;
L37302:	SUB	#000006, SP
L37306:	MOV	#L37652, R0		; ".ASECT"
L37312:	MOV	SP, R1
L37314:	MOV	(R0)+, (R1)+
L37316:	MOV	(R0)+, (R1)+
L37320:	MOV	(R0)+, (R1)+
L37322:	CALL	L10562
L37326:	JMP	L37410
;
L37332:	SUB	#000006, SP
L37336:	MOV	#L37662, R0		; ".SCEST"
L37342:	MOV	SP, R1
L37344:	MOV	(R0)+, (R1)+
L37346:	MOV	(R0)+, (R1)+
L37350:	MOV	(R0)+, (R1)+
L37352:	CALL	L10562
L37356:	CALL	L10544
L37362:	SUB	#000006, SP
L37366:	MOV	SP, R0
L37370:	MOV	000012(SP), (R0)+
L37374:	MOV	000014(SP), (R0)+
L37400:	MOV	000016(SP), (R0)+
L37404:	CALL	L11602
L37410:	CALL	L10516
L37414:	MOV	000004(SP), 053402(R5)
L37422:	MOV	000006(SP), 053404(R5)
L37430:	MOV	000010(SP), 053406(R5)
L37436:	SUB	#000006, SP
L37442:	MOV	SP, R0
L37444:	MOV	053402(R5), (R0)+
L37450:	MOV	053404(R5), (R0)+
L37454:	MOV	053406(R5), (R0)+
L37460:	CALL	L12262
L37464:	MOV	004370(R5), R0
L37470:	CMP	R0, #000000		; 0
L37474:	BLT	L37504
L37476:	CMP	R0, #000030		; 24.
L37502:	BLE	L37510
L37504:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L37510:	MOV	R0, -(SP)
L37512:	MOV	#000014, -(SP)
L37516:	CALL	L52624			; UNSMUL
L37522:	MOV	R5, R0
L37524:	ADD	(SP)+, R0
L37526:	MOV	003722(R0), 053410(R5)
L37534:	CMP	000002(SP), 053410(R5)
L37542:	BNE	L37550
L37544:	JMP	L37640
L37550:	SUB	#000006, SP
L37554:	MOV	#L37672, R0		; ". = \ "
L37560:	MOV	SP, R1
L37562:	MOV	(R0)+, (R1)+
L37564:	MOV	(R0)+, (R1)+
L37566:	MOV	(R0)+, (R1)+
L37570:	CALL	L10562
L37574:	SUB	#000006, SP
L37600:	MOV	SP, R0
L37602:	MOV	000012(SP), (R0)+
L37606:	MOV	000014(SP), (R0)+
L37612:	MOV	000016(SP), (R0)+
L37616:	MOV	000010(SP), -(SP)
L37622:	CALL	L15214
L37626:	CALL	L10516
L37632:	MOV	000002(SP), 053410(R5)
L37640:	MOV	(SP), 000010(SP)
L37644:	ADD	#000010, SP
L37650:	RETURN
;
L37652:	.ASCIZ	/.ASECT/<0>
L37662:	.ASCIZ	/.CSECT/<0>
L37672:	.ASCIZ	/. = \ /<0>
;
; $BEGIN - сюда переходим после START
L37702:	ADD	#053502, L50064		; $KORE += 22338.
L37710:	CALL	L53046			; STKCHK
L37714:	MOV	#L50032, -(SP)
L37720:	CALL	L52316			; PSHSET
L37724:	MOV	R5, R0
L37726:	ADD	#053462, R0
L37732:	MOV	R0, -(SP)
L37734:	CALL	L52360			; POPSET
L37740:	MOV	#L50022, -(SP)
L37744:	CALL	L52316			; PSHSET
L37750:	MOV	R5, R0
L37752:	ADD	#053472, R0
L37756:	MOV	R0, -(SP)
L37760:	CALL	L52360			; POPSET
L37764:	CALL	L10376
L37770:	MOV	#L50012, -(SP)
L37774:	CALL	L52316			; PSHSET
L40000:	MOV	R5, R0
L40002:	ADD	#002640, R0
L40006:	MOV	R0, -(SP)
L40010:	CALL	L52360			; POPSET
L40014:	MOV	#000001, 000400(R5)
L40022:	CLR	004366(R5)
L40026:	CLR	007200(R5)
L40032:	CALL	L15160
L40036:	CLR	053426(R5)		; MRKEDINSTR := 0
L40042:	CLR	053430(R5)
L40046:	MOV	R5, R0
L40050:	ADD	#002676, R0
L40054:	MOV	R0, -(SP)
L40056:	CLR	-(SP)
L40060:	MOV	#000002, -(SP)
L40064:	MOV	000002(SP), @000004(SP)
L40072:	CMP	@000004(SP), (SP)
L40076:	BLE	L40104
L40100:	JMP	L47216
L40104:	MOV	R5, R0
L40106:	ADD	#052366, R0
L40112:	MOV	R0, -(SP)
L40114:	MOV	#000003, -(SP)
L40120:	MOV	#000001, -(SP)
L40124:	CALL	L10402
L40130:	MOV	R5, R0
L40132:	ADD	#002700, R0
L40136:	MOV	R0, -(SP)
L40140:	CLR	-(SP)
L40142:	MOV	#000002, -(SP)
L40146:	CALL	L10402
L40152:	MOVB	#000001, 001412(R5)
L40160:	CLRB	002426(R5)
L40164:	MOV	R5, R0
L40166:	ADD	#052366, R0
L40172:	MOV	R0, -(SP)
L40174:	MOV	R5, R0
L40176:	ADD	#001414, R0
L40202:	MOV	R0, -(SP)
L40204:	CALL	L10422
L40210:	MOV	R5, R0
L40212:	ADD	#052366, R0
L40216:	MOV	R0, -(SP)
L40220:	CALL	L10436
L40224:	MOV	R5, R0
L40226:	ADD	#052366, R0
L40232:	MOV	R0, -(SP)
L40234:	CALL	L10436
L40240:	CLRB	053400(R5)
L40244:	CLR	053456(R5)
L40250:	MOVB	053400(R5), R0
L40254:	COMB	R0
L40256:	BICB	#177776, R0
L40262:	BNE	L40270
L40264:	JMP	L40304
L40270:	MOV	R5, R0
L40272:	ADD	#052366, R0
L40276:	MOV	R0, -(SP)
L40300:	CALL	L10436
L40304:	CLRB	053400(R5)
L40310:	TST	053456(R5)
L40314:	BGT	L40322
L40316:	JMP	L40442
L40322:	CMPB	002506(R5), #000001
L40330:	BNE	L40336
L40332:	CLR	R0
L40334:	BR	L40342
L40336:	MOV	#000001, R0
L40342:	CMPB	002516(R5), #000004
L40350:	BNE	L40356
L40352:	CLR	R1
L40354:	BR	L40362
L40356:	MOV	#000001, R1
L40362:	BISB	R0, R1
L40364:	MOV	R5, R0
L40366:	ADD	#002520, R0
L40372:	MOV	R0, -(SP)
L40374:	CALL	L52316			; PSHSET
L40400:	MOV	#000003, -(SP)
L40404:	CALL	L52134			; DOIN
L40410:	BNE	L40416
L40412:	CLR	R0
L40414:	BR	L40422
L40416:	MOV	#000001, R0
L40422:	BISB	R1, R0
L40424:	BNE	L40432
L40426:	JMP	L40442
L40432:	CALL	L10516
L40436:	CLR	053456(R5)
L40442:	MOVB	002506(R5), R0
L40446:	SUB	#000001, R0
L40452:	BGE	L40460
L40454:	JMP	L47122
L40460:	CMP	#000005, R0
L40464:	BGE	L40472
L40466:	JMP	L47122
L40472:	ASL	R0
L40474:	JMP	@047126(R0)
L40500:	MOVB	002516(R5), R0
L40504:	SUB	#000000, R0
L40510:	BGE	L40516
L40512:	JMP	L44102
L40516:	CMP	#000006, R0
L40522:	BGE	L40530
L40524:	JMP	L44102
L40530:	ASL	R0
L40532:	JMP	@044106(R0)
L40536:	CALL	L10544
L40542:	SUB	#000006, SP
L40546:	MOV	#047240, R0		; ".ENABL"
L40552:	MOV	SP, R1
L40554:	MOV	(R0)+, (R1)+
L40556:	MOV	(R0)+, (R1)+
L40560:	MOV	(R0)+, (R1)+
L40562:	CALL	L10562
L40566:	CALL	L10544
L40572:	SUB	#000006, SP
L40576:	MOV	#047250, R0
L40602:	MOV	SP, R1
L40604:	MOV	(R0)+, (R1)+
L40606:	MOV	(R0)+, (R1)+
L40610:	MOV	(R0)+, (R1)+
L40612:	CALL	L10562
L40616:	CALL	L10516
L40622:	CALL	L10544
L40626:	SUB	#000006, SP
L40632:	MOV	#047260, R0
L40636:	MOV	SP, R1
L40640:	MOV	(R0)+, (R1)+
L40642:	MOV	(R0)+, (R1)+
L40644:	MOV	(R0)+, (R1)+
L40646:	CALL	L10562
L40652:	CALL	L10544
L40656:	SUB	#000006, SP
L40662:	MOV	#047270, R0
L40666:	MOV	SP, R1
L40670:	MOV	(R0)+, (R1)+
L40672:	MOV	(R0)+, (R1)+
L40674:	MOV	(R0)+, (R1)+
L40676:	CALL	L10562
L40702:	CALL	L10516
L40706:	CALL	L10516
L40712:	CALL	L10544
L40716:	SUB	#000006, SP
L40722:	MOV	#047300, R0
L40726:	MOV	SP, R1
L40730:	MOV	(R0)+, (R1)+
L40732:	MOV	(R0)+, (R1)+
L40734:	MOV	(R0)+, (R1)+
L40736:	CALL	L10562
L40742:	CALL	L10544
L40746:	SUB	#000006, SP
L40752:	MOV	SP, R0
L40754:	MOV	002510(R5), (R0)+
L40760:	MOV	002512(R5), (R0)+
L40764:	MOV	002514(R5), (R0)+
L40770:	CALL	L10562
L40774:	CALL	L10516
L41000:	JMP	L44124
L41004:	MOV	002510(R5), 053446(R5)	; -> VAR53446
L41012:	MOV	002512(R5), 053450(R5)
L41020:	MOV	002514(R5), 053452(R5)
L41026:	MOV	002530(R5), 053454(R5)
L41034:	JMP	L44124
L41040:	MOV	R5, R0
L41042:	ADD	#002520, R0
L41046:	MOV	R0, -(SP)
L41050:	CALL	L52316			; PSHSET
L41054:	MOV	#000003, -(SP)
L41060:	CALL	L52134			; DOIN
L41064:	BEQ	L41072
L41066:	JMP	L41276
L41072:	TST	053456(R5)
L41076:	BEQ	L41104
L41100:	JMP	L41200
L41104:	CALL	L10544
L41110:	SUB	#000006, SP
L41114:	MOV	#047310, R0
L41120:	MOV	SP, R1
L41122:	MOV	(R0)+, (R1)+
L41124:	MOV	(R0)+, (R1)+
L41126:	MOV	(R0)+, (R1)+
L41130:	CALL	L10562
L41134:	CALL	L10544
L41140:	SUB	#000006, SP
L41144:	MOV	SP, R0
L41146:	MOV	002510(R5), (R0)+
L41152:	MOV	002512(R5), (R0)+
L41156:	MOV	002514(R5), (R0)+
L41162:	CALL	L11602
L41166:	MOV	#000001, 053456(R5)
L41174:	JMP	L41246
L41200:	MOV	#000054, -(SP)
L41204:	CALL	L10442
L41210:	CALL	L10544
L41214:	SUB	#000006, SP
L41220:	MOV	SP, R0
L41222:	MOV	002510(R5), (R0)+
L41226:	MOV	002512(R5), (R0)+
L41232:	MOV	002514(R5), (R0)+
L41236:	CALL	L11602
L41242:	INC	053456(R5)
L41246:	CMP	053456(R5), #000006
L41254:	BGE	L41262
L41256:	JMP	L41272
L41262:	CALL	L10516
L41266:	CLR	053456(R5)
L41272:	JMP	L42220
L41276:	MOV	002676(R5), R0
L41302:	SUB	#000000, R0
L41306:	BGE	L41314
L41310:	JMP	L42206
L41314:	CMP	#000002, R0
L41320:	BGE	L41326
L41322:	JMP	L42206
L41326:	ASL	R0
L41330:	JMP	@042212(R0)
L41334:	MOV	#012674, R0
L41340:	MOV	R5, R1
L41342:	ADD	#053402, R1
L41346:	MOV	#000006, R2
L41352:	CMPB	(R0)+, (R1)+
L41354:	BNE	L41362
L41356:	DEC	R2
L41360:	BNE	L41352
L41362:	BNE	L41370
L41364:	JMP	L41732
L41370:	SUB	#000006, SP
L41374:	MOV	SP, R0
L41376:	MOV	002510(R5), (R0)+
L41402:	MOV	002512(R5), (R0)+
L41406:	MOV	002514(R5), (R0)+
L41412:	SUB	#000006, SP
L41416:	MOV	SP, R0
L41420:	MOV	053402(R5), (R0)+
L41424:	MOV	053404(R5), (R0)+
L41430:	MOV	053406(R5), (R0)+
L41434:	MOV	002530(R5), -(SP)
L41440:	CALL	L13120
L41444:	TST	007202(R5)
L41450:	BNE	L41456
L41452:	JMP	L41732
L41456:	MOV	#L50002, -(SP)
L41462:	CALL	L52316			; PSHSET
L41466:	MOV	R5, R0
L41470:	ADD	#052356, R0
L41474:	MOV	R0, -(SP)
L41476:	CALL	L52360			; POPSET
L41502:	MOV	002530(R5), R0
L41506:	BIC	#177776, R0
L41512:	BNE	L41520
L41514:	JMP	L41564
L41520:	MOV	R5, R0
L41522:	ADD	#052356, R0
L41526:	MOV	R0, -(SP)
L41530:	CALL	L52316			; PSHSET
L41534:	MOV	#L47772, -(SP)
L41540:	CALL	L52316			; PSHSET
L41544:	CALL	L52236			; SETOR
L41550:	MOV	R5, R0
L41552:	ADD	#052356, R0
L41556:	MOV	R0, -(SP)
L41560:	CALL	L52360			; POPSET
L41564:	SUB	#000006, SP
L41570:	MOV	SP, R0
L41572:	MOV	053402(R5), (R0)+
L41576:	MOV	053404(R5), (R0)+
L41602:	MOV	053406(R5), (R0)+
L41606:	MOV	002530(R5), -(SP)
L41612:	CALL	L13666
L41616:	CLR	-(SP)
L41620:	SUB	#000006, SP
L41624:	MOV	SP, R0
L41626:	MOV	053402(R5), (R0)+
L41632:	MOV	053404(R5), (R0)+
L41636:	MOV	053406(R5), (R0)+
L41642:	MOV	002530(R5), -(SP)
L41646:	CALL	L13314
L41652:	TSTB	(SP)+
L41654:	BNE	L41662
L41656:	JMP	L41732
L41662:	MOV	052350(R5), R0
L41666:	CMP	R0, #000000		; 0
L41672:	BLT	L41702
L41674:	CMP	R0, #001750		; 1000.
L41700:	BLE	L41706
L41702:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L41706:	MOV	R0, -(SP)
L41710:	MOV	#000022, -(SP)		; 18.
L41714:	CALL	L52624			; UNSMUL
L41720:	MOV	R5, R0
L41722:	ADD	(SP)+, R0
L41724:	MOV	007202(R5), 007224(R0)
L41732:	JMP	L42220
L41736:	MOV	#012674, R0
L41742:	MOV	R5, R1
L41744:	ADD	#053402, R1
L41750:	MOV	#000006, R2
L41754:	CMPB	(R0)+, (R1)+
L41756:	BNE	L41764
L41760:	DEC	R2
L41762:	BNE	L41754
L41764:	BEQ	L41772
L41766:	JMP	L42066
L41772:	SUB	#000006, SP
L41776:	MOV	SP, R0
L42000:	MOV	002510(R5), (R0)+
L42004:	MOV	002512(R5), (R0)+
L42010:	MOV	002514(R5), (R0)+
L42014:	CLR	-(SP)
L42016:	CALL	L12056
L42022:	SUB	#000006, SP
L42026:	MOV	#047320, R0
L42032:	MOV	SP, R1
L42034:	MOV	(R0)+, (R1)+
L42036:	MOV	(R0)+, (R1)+
L42040:	MOV	(R0)+, (R1)+
L42042:	CALL	L10562
L42046:	MOV	002530(R5), -(SP)
L42052:	CALL	L11032
L42056:	CALL	L10516
L42062:	JMP	L42202
L42066:	CLR	-(SP)
L42070:	SUB	#000006, SP
L42074:	MOV	SP, R0
L42076:	MOV	053402(R5), (R0)+
L42102:	MOV	053404(R5), (R0)+
L42106:	MOV	053406(R5), (R0)+
L42112:	MOV	002530(R5), -(SP)
L42116:	CALL	L13314
L42122:	MOVB	(SP)+, R0
L42124:	COMB	R0
L42126:	BICB	#177776, R0
L42132:	BNE	L42140
L42134:	JMP	L42202
L42140:	SUB	#000006, SP
L42144:	MOV	SP, R0
L42146:	MOV	053402(R5), (R0)+
L42152:	MOV	053404(R5), (R0)+
L42156:	MOV	053406(R5), (R0)+
L42162:	MOV	002530(R5), -(SP)
L42166:	CALL	L37004
L42172:	CALL	L16656
L42176:	JMP	L42202
L42202:	JMP	L42220
L42206:	JMP	L42220
L42212:	BIC	(R3), @(R4)+
L42214:	BIC	(R2)+, SP
L42216:	BIC	(PC), @(SP)+
L42220:	JMP	L44124
L42224:	MOV	#012674, R0
L42230:	MOV	R5, R1
L42232:	ADD	#002510, R1
L42236:	MOV	#000006, R2
L42242:	CMPB	(R0)+, (R1)+
L42244:	BNE	L42252
L42246:	DEC	R2
L42250:	BNE	L42242
L42252:	BEQ	L42260
L42254:	JMP	L42444
L42260:	CALL	L10516
L42264:	CALL	L10544
L42270:	SUB	#000006, SP
L42274:	MOV	#047330, R0
L42300:	MOV	SP, R1
L42302:	MOV	(R0)+, (R1)+
L42304:	MOV	(R0)+, (R1)+
L42306:	MOV	(R0)+, (R1)+
L42310:	CALL	L10562
L42314:	CALL	L10544
L42320:	CALL	L10544
L42324:	CALL	L10516
L42330:	TST	002530(R5)
L42334:	BNE	L42342
L42336:	JMP	L42412
L42342:	CALL	L10544
L42346:	SUB	#000006, SP
L42352:	MOV	#047340, R0
L42356:	MOV	SP, R1
L42360:	MOV	(R0)+, (R1)+
L42362:	MOV	(R0)+, (R1)+
L42364:	MOV	(R0)+, (R1)+
L42366:	CALL	L10562
L42372:	CALL	L10544
L42376:	MOV	002530(R5), -(SP)
L42402:	CALL	L11032
L42406:	CALL	L10516
L42412:	MOV	#012674, R0
L42416:	MOV	(R0)+, 053402(R5)
L42422:	MOV	(R0)+, 053404(R5)
L42426:	MOV	(R0)+, 053406(R5)
L42432:	MOV	002530(R5), 053410(R5)
L42440:	JMP	L43764
L42444:	SUB	#000006, SP
L42450:	MOV	SP, R0
L42452:	MOV	002510(R5), (R0)+
L42456:	MOV	002512(R5), (R0)+
L42462:	MOV	002514(R5), (R0)+
L42466:	CALL	L12262
L42472:	MOV	004370(R5), R0
L42476:	CMP	R0, #000000		; 0
L42502:	BLT	L42512
L42504:	CMP	R0, #000030		; 24.
L42510:	BLE	L42516
L42512:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L42516:	MOV	R0, -(SP)
L42520:	MOV	#000014, -(SP)
L42524:	CALL	L52624			; UNSMUL
L42530:	MOV	R5, R0
L42532:	ADD	(SP)+, R0
L42534:	MOV	002530(R5), 003720(R0)
L42542:	CALL	L10516
L42546:	CALL	L10544
L42552:	MOV	R5, R0
L42554:	ADD	#002520, R0
L42560:	MOV	R0, -(SP)
L42562:	CALL	L52316			; PSHSET
L42566:	MOV	R5, R0
L42570:	ADD	#053462, R0
L42574:	MOV	R0, -(SP)
L42576:	CALL	L52316			; PSHSET
L42602:	CALL	L52420			; SETEQ
L42606:	BEQ	L42614
L42610:	CLR	R0
L42612:	BR	L42620
L42614:	MOV	#000001, R0
L42620:	MOV	#047350, R1
L42624:	MOV	R5, R2
L42626:	ADD	#002510, R2
L42632:	MOV	#000006, R3
L42636:	CMPB	(R1)+, (R2)+
L42640:	BNE	L42646
L42642:	DEC	R3
L42644:	BNE	L42636
L42646:	BEQ	L42654
L42650:	CLR	R1
L42652:	BR	L42660
L42654:	MOV	#000001, R1
L42660:	MOV	R5, R2
L42662:	ADD	#002520, R2
L42666:	MOV	R2, -(SP)
L42670:	CALL	L52316			; PSHSET
L42674:	MOV	R5, R2
L42676:	ADD	#053472, R2
L42702:	MOV	R2, -(SP)
L42704:	CALL	L52316			; PSHSET
L42710:	CALL	L52420			; SETEQ
L42714:	BEQ	L42722
L42716:	CLR	R2
L42720:	BR	L42726
L42722:	MOV	#000001, R2
L42726:	COMB	R2
L42730:	BICB	R2, R1
L42732:	BISB	R0, R1
L42734:	BNE	L42742
L42736:	JMP	L43024
L42742:	SUB	#000006, SP
L42746:	MOV	#047360, R0
L42752:	MOV	SP, R1
L42754:	MOV	(R0)+, (R1)+
L42756:	MOV	(R0)+, (R1)+
L42760:	MOV	(R0)+, (R1)+
L42762:	CALL	L10562
L42766:	CALL	L10544
L42772:	SUB	#000006, SP
L42776:	MOV	SP, R0
L43000:	MOV	002510(R5), (R0)+
L43004:	MOV	002512(R5), (R0)+
L43010:	MOV	002514(R5), (R0)+
L43014:	CALL	L11602
L43020:	JMP	L43536
L43024:	SUB	#000006, SP
L43030:	MOV	#047370, R0
L43034:	MOV	SP, R1
L43036:	MOV	(R0)+, (R1)+
L43040:	MOV	(R0)+, (R1)+
L43042:	MOV	(R0)+, (R1)+
L43044:	CALL	L10562
L43050:	CALL	L10544
L43054:	SUB	#000006, SP
L43060:	MOV	SP, R0
L43062:	MOV	002510(R5), (R0)+
L43066:	MOV	002512(R5), (R0)+
L43072:	MOV	002514(R5), (R0)+
L43076:	CALL	L11602
L43102:	MOV	R5, R0
L43104:	ADD	#002520, R0
L43110:	MOV	R0, -(SP)
L43112:	CALL	L52316			; PSHSET
L43116:	MOV	R5, R0
L43120:	ADD	#053472, R0
L43124:	MOV	R0, -(SP)
L43126:	CALL	L52316			; PSHSET
L43132:	CALL	L52420			; SETEQ
L43136:	BNE	L43144
L43140:	JMP	L43536
L43144:	MOV	R5, R0
L43146:	ADD	#002520, R0
L43152:	MOV	R0, -(SP)
L43154:	CALL	L52316			; PSHSET
L43160:	MOV	#000004, -(SP)
L43164:	CALL	L52134			; DOIN
L43170:	BNE	L43176
L43172:	JMP	L43226
L43176:	SUB	#000006, SP
L43202:	MOV	#047400, R0
L43206:	MOV	SP, R1
L43210:	MOV	(R0)+, (R1)+
L43212:	MOV	(R0)+, (R1)+
L43214:	MOV	(R0)+, (R1)+
L43216:	CALL	L10562
L43222:	JMP	L43226
L43226:	MOV	R5, R0
L43230:	ADD	#002520, R0
L43234:	MOV	R0, -(SP)
L43236:	CALL	L52316			; PSHSET
L43242:	MOV	#000007, -(SP)
L43246:	CALL	L52134			; DOIN
L43252:	BNE	L43260
L43254:	JMP	L43310
L43260:	SUB	#000006, SP
L43264:	MOV	#047410, R0
L43270:	MOV	SP, R1
L43272:	MOV	(R0)+, (R1)+
L43274:	MOV	(R0)+, (R1)+
L43276:	MOV	(R0)+, (R1)+
L43300:	CALL	L10562
L43304:	JMP	L43310
L43310:	MOV	R5, R0
L43312:	ADD	#002520, R0
L43316:	MOV	R0, -(SP)
L43320:	CALL	L52316			; PSHSET
L43324:	MOV	#000002, -(SP)
L43330:	CALL	L52134			; DOIN
L43334:	BNE	L43342
L43336:	JMP	L43372
L43342:	SUB	#000006, SP
L43346:	MOV	#047420, R0
L43352:	MOV	SP, R1
L43354:	MOV	(R0)+, (R1)+
L43356:	MOV	(R0)+, (R1)+
L43360:	MOV	(R0)+, (R1)+
L43362:	CALL	L10562
L43366:	JMP	L43372
L43372:	MOV	R5, R0
L43374:	ADD	#002520, R0
L43400:	MOV	R0, -(SP)
L43402:	CALL	L52316			; PSHSET
L43406:	MOV	#000005, -(SP)
L43412:	CALL	L52134			; DOIN
L43416:	BNE	L43424
L43420:	JMP	L43430
L43424:	JMP	L43454
L43430:	SUB	#000006, SP
L43434:	MOV	#047430, R0
L43440:	MOV	SP, R1
L43442:	MOV	(R0)+, (R1)+
L43444:	MOV	(R0)+, (R1)+
L43446:	MOV	(R0)+, (R1)+
L43450:	CALL	L10562
L43454:	MOV	R5, R0
L43456:	ADD	#002520, R0
L43462:	MOV	R0, -(SP)
L43464:	CALL	L52316			; PSHSET
L43470:	MOV	#000006, -(SP)
L43474:	CALL	L52134			; DOIN
L43500:	BNE	L43506
L43502:	JMP	L43536
L43506:	SUB	#000006, SP
L43512:	MOV	#047440, R0
L43516:	MOV	SP, R1
L43520:	MOV	(R0)+, (R1)+
L43522:	MOV	(R0)+, (R1)+
L43524:	MOV	(R0)+, (R1)+
L43526:	CALL	L10562
L43532:	JMP	L43536
L43536:	CALL	L10516
L43542:	MOV	002510(R5), 053402(R5)
L43550:	MOV	002512(R5), 053404(R5)
L43556:	MOV	002514(R5), 053406(R5)
L43564:	CLR	053410(R5)
L43570:	SUB	#000006, SP
L43574:	MOV	SP, R0
L43576:	MOV	002510(R5), (R0)+
L43602:	MOV	002512(R5), (R0)+
L43606:	MOV	002514(R5), (R0)+
L43612:	CLR	-(SP)
L43614:	CALL	L15214
L43620:	MOV	#000072, -(SP)
L43624:	CALL	L10442
L43630:	MOV	004370(R5), R0
L43634:	CMP	R0, #000000		; 0
L43640:	BLT	L43650
L43642:	CMP	R0, #000030		; 24.
L43646:	BLE	L43654
L43650:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L43654:	MOV	R0, -(SP)
L43656:	MOV	#000014, -(SP)
L43662:	CALL	L52624			; UNSMUL
L43666:	MOV	R5, R0
L43670:	ADD	(SP)+, R0
L43672:	CMP	002530(R5), 003724(R0)
L43700:	BNE	L43706
L43702:	JMP	L43760
L43706:	CALL	L10544
L43712:	SUB	#000006, SP
L43716:	MOV	#047450, R0
L43722:	MOV	SP, R1
L43724:	MOV	(R0)+, (R1)+
L43726:	MOV	(R0)+, (R1)+
L43730:	MOV	(R0)+, (R1)+
L43732:	CALL	L10562
L43736:	CALL	L10544
L43742:	MOV	002530(R5), -(SP)
L43746:	CALL	L11032
L43752:	MOV	002530(R5), 053410(R5)
L43760:	CALL	L10516
L43764:	JMP	L44124
L43770:	CALL	L10544
L43774:	SUB	#000006, SP
L44000:	MOV	#047460, R0
L44004:	MOV	SP, R1
L44006:	MOV	(R0)+, (R1)+
L44010:	MOV	(R0)+, (R1)+
L44012:	MOV	(R0)+, (R1)+
L44014:	CALL	L10562
L44020:	CALL	L10544
L44024:	MOV	#000057, -(SP)
L44030:	CALL	L10442
L44034:	SUB	#000006, SP
L44040:	MOV	SP, R0
L44042:	MOV	002510(R5), (R0)+
L44046:	MOV	002512(R5), (R0)+
L44052:	MOV	002514(R5), (R0)+
L44056:	CALL	L10562
L44062:	MOV	#000057, -(SP)
L44066:	CALL	L10442
L44072:	CALL	L10516
L44076:	JMP	L44124
L44102:	JMP	L44124
; Таблица переходов
L44106:	.WORD	L40536
L44110:	.WORD	L44102
L44112:	.WORD	L44102
L44114:	.WORD	L41004
L44116:	.WORD	L41040
L44120:	.WORD	L42224
L44122:	.WORD	L43770

L44124:	JMP	L47142
L44130:	CALL	L16656
L44134:	CMP	002536(R5), 053410(R5)
L44142:	BNE	L44150
L44144:	JMP	L44326
L44150:	CALL	L10516
L44154:	SUB	#000006, SP
L44160:	MOV	#047470, R0
L44164:	MOV	SP, R1
L44166:	MOV	(R0)+, (R1)+
L44170:	MOV	(R0)+, (R1)+
L44172:	MOV	(R0)+, (R1)+
L44174:	CALL	L10562
L44200:	MOV	#000040, -(SP)
L44204:	CALL	L10442
L44210:	MOV	053410(R5), -(SP)
L44214:	CALL	L11032
L44220:	SUB	#000006, SP
L44224:	MOV	#047500, R0
L44230:	MOV	SP, R1
L44232:	MOV	(R0)+, (R1)+
L44234:	MOV	(R0)+, (R1)+
L44236:	MOV	(R0)+, (R1)+
L44240:	CALL	L10562
L44244:	SUB	#000006, SP
L44250:	MOV	#047510, R0
L44254:	MOV	SP, R1
L44256:	MOV	(R0)+, (R1)+
L44260:	MOV	(R0)+, (R1)+
L44262:	MOV	(R0)+, (R1)+
L44264:	CALL	L10562
L44270:	CALL	L10516
L44274:	SUB	#000006, SP
L44300:	MOV	SP, R0
L44302:	MOV	053402(R5), (R0)+
L44306:	MOV	053404(R5), (R0)+
L44312:	MOV	053406(R5), (R0)+
L44316:	MOV	002536(R5), -(SP)
L44322:	CALL	L37004
L44326:	MOV	053410(R5), R0
L44332:	BIC	#177776, R0
L44336:	BEQ	L44344
L44340:	CLR	R0
L44342:	BR	L44350
L44344:	MOV	#000001, R0
L44350:	TST	002534(R5)
L44354:	BEQ	L44362
L44356:	CLR	R1
L44360:	BR	L44366
L44362:	MOV	#000001, R1
L44366:	COMB	R1
L44370:	BICB	R1, R0
L44372:	MOV	R5, R1
L44374:	ADD	#053414, R1
L44400:	MOV	R1, -(SP)
L44402:	CALL	L52316			; PSHSET
L44406:	MOV	#L47762, -(SP)
L44412:	CALL	L52316			; PSHSET
L44416:	CALL	L52420			; SETEQ
L44422:	BNE	L44430
L44424:	CLR	R1
L44426:	BR	L44434
L44430:	MOV	#000001, R1
L44434:	MOV	R5, R2
L44436:	ADD	#053414, R2
L44442:	MOV	R2, -(SP)
L44444:	CALL	L52316			; PSHSET
L44450:	MOV	#000007, -(SP)
L44454:	CALL	L52134			; DOIN
L44460:	BEQ	L44466
L44462:	CLR	R2
L44464:	BR	L44472
L44466:	MOV	#000001, R2
L44472:	COMB	R2
L44474:	BICB	R2, R1
L44476:	MOV	R5, R2
L44500:	ADD	#053414, R2
L44504:	MOV	R2, -(SP)
L44506:	CALL	L52316			; PSHSET
L44512:	MOV	#000010, -(SP)
L44516:	CALL	L52134			; DOIN
L44522:	BNE	L44530
L44524:	CLR	R2
L44526:	BR	L44534
L44530:	MOV	#000001, R2
L44534:	BISB	R1, R2
L44536:	COMB	R2
L44540:	BICB	R2, R0
L44542:	MOV	053410(R5), R1
L44546:	INC	R1
L44550:	CMP	R1, 053424(R5)
L44554:	BNE	L44562
L44556:	CLR	R1
L44560:	BR	L44566
L44562:	MOV	#000001, R1
L44566:	COMB	R1
L44570:	BICB	R1, R0
L44572:	BNE	L44600
L44574:	JMP	L44610
L44600:	CALL	L30060
L44604:	JMP	L44614
L44610:	CALL	L35532
L44614:	JMP	L47142
L44620:	MOVB	002544(R5), R0
L44624:	SUB	#000001, R0
L44630:	BGE	L44636
L44632:	JMP	L46122
L44636:	CMP	#000016, R0
L44642:	BGE	L44650
L44644:	JMP	L46122
L44650:	ASL	R0
L44652:	JMP	@046126(R0)
L44656:	SUB	#000006, SP
L44662:	MOV	SP, R0
L44664:	MOV	002510(R5), (R0)+
L44670:	MOV	002512(R5), (R0)+
L44674:	MOV	002514(R5), (R0)+
L44700:	MOV	002552(R5), -(SP)
L44704:	CALL	L37004
L44710:	SUB	#000006, SP
L44714:	MOV	SP, R0
L44716:	MOV	053402(R5), (R0)+
L44722:	MOV	053404(R5), (R0)+
L44726:	MOV	053406(R5), (R0)+
L44732:	MOV	053410(R5), -(SP)
L44736:	CALL	L15034
L44742:	SUB	#000006, SP
L44746:	MOV	SP, R0
L44750:	MOV	053402(R5), (R0)+
L44754:	MOV	053404(R5), (R0)+
L44760:	MOV	053406(R5), (R0)+
L44764:	CALL	L12262
L44770:	MOV	052350(R5), R3
L44774:	CMP	R3, #000000		; 0
L45000:	BLT	L45010
L45002:	CMP	R3, #001750		; 1000.
L45006:	BLE	L45014
L45010:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L45014:	MOV	R3, -(SP)
L45016:	MOV	#000022, -(SP)
L45022:	CALL	L52624			; UNSMUL
L45026:	MOV	R5, R3
L45030:	ADD	(SP)+, R3
L45032:	ADD	#007204, R3
L45036:	CMP	000004(R3), 004370(R5)
L45044:	BEQ	L45052
L45046:	JMP	L45064
L45052:	MOV	000006(R3), 053424(R5)
L45060:	JMP	L45072
L45064:	MOV	#177777, 053424(R5)
L45072:	CLR	053412(R5)
L45076:	MOV	#L47752, -(SP)
L45102:	CALL	L52316			; PSHSET
L45106:	MOV	R5, R0
L45110:	ADD	#053414, R0
L45114:	MOV	R0, -(SP)
L45116:	CALL	L52360			; POPSET
L45122:	JMP	L46164
L45126:	CALL	L16656
L45132:	CMP	002552(R5), 053424(R5)
L45140:	BLOS	L45146
L45142:	JMP	L45166
L45146:	MOV	002552(R5), R0
L45152:	SUB	053410(R5), R0
L45156:	MOV	R0, 053460(R5)
L45162:	JMP	L45210
L45166:	MOV	053424(R5), R0
L45172:	SUB	053410(R5), R0
L45176:	MOV	R0, 053460(R5)
L45202:	MOVB	#000001, 053400(R5)
L45210:	TST	053460(R5)
L45214:	BLT	L45222
L45216:	CLR	R0
L45220:	BR	L45226
L45222:	MOV	#000001, R0
L45226:	CMP	#000020, 053460(R5)
L45234:	BLT	L45242
L45236:	CLR	R1
L45240:	BR	L45246
L45242:	MOV	#000001, R1
L45246:	BISB	R0, R1
L45250:	BNE	L45256
L45252:	JMP	L45342
L45256:	SUB	#000006, SP
L45262:	MOV	#047520, R0
L45266:	MOV	SP, R1
L45270:	MOV	(R0)+, (R1)+
L45272:	MOV	(R0)+, (R1)+
L45274:	MOV	(R0)+, (R1)+
L45276:	CALL	L10562
L45302:	SUB	#000006, SP
L45306:	MOV	#047530, R0
L45312:	MOV	SP, R1
L45314:	MOV	(R0)+, (R1)+
L45316:	MOV	(R0)+, (R1)+
L45320:	MOV	(R0)+, (R1)+
L45322:	MOV	053460(R5), -(SP)
L45326:	CALL	L12056
L45332:	CALL	L10516
L45336:	JMP	L45654
L45342:	MOV	053460(R5), R0
L45346:	BIC	#177776, R0
L45352:	BEQ	L45360
L45354:	JMP	L45452
L45360:	CALL	L10544
L45364:	SUB	#000006, SP
L45370:	MOV	#047540, R0
L45374:	MOV	SP, R1
L45376:	MOV	(R0)+, (R1)+
L45400:	MOV	(R0)+, (R1)+
L45402:	MOV	(R0)+, (R1)+
L45404:	CALL	L10562
L45410:	CALL	L10544
L45414:	MOV	053460(R5), R0
L45420:	TST	R0
L45422:	BPL	045426
L45424:	DEC	R0
L45426:	ASR	R0
L45430:	BPL	045434
L45432:	INC	R0
L45434:	MOV	R0, -(SP)
L45436:	CALL	L11032
L45442:	CALL	L10516
L45446:	JMP	L45654
L45452:	CMP	053460(R5), #000001
L45460:	BEQ	L45466
L45462:	JMP	L45604
L45466:	MOV	053410(R5), R0
L45472:	BIC	#177776, R0
L45476:	BNE	L45504
L45500:	JMP	L45544
L45504:	CALL	L10544
L45510:	SUB	#000006, SP
L45514:	MOV	#047550, R0
L45520:	MOV	SP, R1
L45522:	MOV	(R0)+, (R1)+
L45524:	MOV	(R0)+, (R1)+
L45526:	MOV	(R0)+, (R1)+
L45530:	CALL	L10562
L45534:	CALL	L10516
L45540:	JMP	L45600
L45544:	CALL	L10544
L45550:	SUB	#000006, SP
L45554:	MOV	#047560, R0
L45560:	MOV	SP, R1
L45562:	MOV	(R0)+, (R1)+
L45564:	MOV	(R0)+, (R1)+
L45566:	MOV	(R0)+, (R1)+
L45570:	CALL	L10562
L45574:	CALL	L10516
L45600:	JMP	L45654
L45604:	CALL	L10544
L45610:	SUB	#000006, SP
L45614:	MOV	#047570, R0
L45620:	MOV	SP, R1
L45622:	MOV	(R0)+, (R1)+
L45624:	MOV	(R0)+, (R1)+
L45626:	MOV	(R0)+, (R1)+
L45630:	CALL	L10562
L45634:	CALL	L10544
L45640:	MOV	053460(R5), -(SP)
L45644:	CALL	L11032
L45650:	CALL	L10516
L45654:	ADD	053460(R5), 053410(R5)
L45662:	JMP	L46164
L45666:	CALL	L16656
L45672:	CALL	L10544
L45676:	TST	002546(R5)
L45702:	BEQ	L45710
L45704:	JMP	L45724
L45710:	MOV	#000040, -(SP)
L45714:	CALL	L10442
L45720:	JMP	L45754
L45724:	SUB	#000006, SP
L45730:	MOV	#047600, R0
L45734:	MOV	SP, R1
L45736:	MOV	(R0)+, (R1)+
L45740:	MOV	(R0)+, (R1)+
L45742:	MOV	(R0)+, (R1)+
L45744:	CALL	L10562
L45750:	CALL	L10544
L45754:	MOV	#L47742, -(SP)
L45760:	CALL	L52316			; PSHSET
L45764:	MOV	R5, R0
L45766:	ADD	#052356, R0
L45772:	MOV	R0, -(SP)
L45774:	CALL	L52360			; POPSET
L46000:	CALL	L22640
L46004:	CALL	L10516
L46010:	MOV	#000002, R0
L46014:	SUB	002546(R5), R0
L46020:	ADD	053410(R5), R0
L46024:	MOV	R0, 053410(R5)
L46030:	JMP	L46164
L46034:	CALL	L16656
L46040:	CALL	L10544
L46044:	SUB	#000006, SP
L46050:	MOV	#L47610, R0		; ".LIMIT"
L46054:	MOV	SP, R1
L46056:	MOV	(R0)+, (R1)+
L46060:	MOV	(R0)+, (R1)+
L46062:	MOV	(R0)+, (R1)+
L46064:	CALL	L10562
L46070:	CALL	L10516
L46074:	MOV	R5, R0
L46076:	ADD	#052366, R0
L46102:	MOV	R0, -(SP)
L46104:	CALL	L10436
L46110:	ADD	#000004, 053410(R5)
L46116:	JMP	L46164
L46122:	JMP	L46164
L46126:	BIC	@-(SP), 045666(SP)
L46132:	BIC	@-(SP), 045666(SP)
L46136:	BIC	@-(SP), 045666(SP)
L46142:	BIC	-(SP), @-(SP)
L46144:	BIC	@-(R1), (SP)+
L46146:	BIC	046122(R0), @(R4)+
L46152:	BIC	045666(R1), (R2)+
L46156:	BIC	@-(SP), 045666(SP)
L46162:	.WORD	045666

L46164:	JMP	047142
L46170:	CMP	002676(R5), #000002
L46176:	BEQ	L46204
L46200:	JMP	L46704
L46204:	MOV	#L47620, -(SP)		; "?DEC-I-LABELS USED : "
L46210:	MOV	#000025, -(SP)
L46214:	CLR	-(SP)
L46216:	CALL	L51702			; WRSTG
L46222:	MOV	052346(R5), -(SP)	; LABELS
L46226:	MOV	#000004, -(SP)
L46232:	CALL	L51354			; WRNM
L46236:	CALL	L51326			; WRLN
L46242:	CLR	-(SP)
L46244:	SUB	#000006, SP
L46250:	MOV	#012674, R0
L46254:	MOV	SP, R1
L46256:	MOV	(R0)+, (R1)+
L46260:	MOV	(R0)+, (R1)+
L46262:	MOV	(R0)+, (R1)+
L46264:	CLR	-(SP)
L46266:	CALL	L13314
L46272:	TSTB	(SP)+
L46274:	BNE	L46302
L46276:	JMP	L46302
L46302:	MOV	052352(R5), 052350(R5)
L46310:	CLR	053456(R5)
L46314:	CMP	053456(R5), #000006
L46322:	BEQ	L46330
L46324:	JMP	L46340
; THEN
L46330:	CALL	L51326			; WRLN
L46334:	CLR	053456(R5)		; VAR53456 := 0
; END IF
L46340:	MOV	052350(R5), R3
L46344:	CMP	R3, #000000		; 0
L46350:	BLT	L46360
L46352:	CMP	R3, #001750		; 1000.
L46356:	BLE	L46364
L46360:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L46364:	MOV	R3, -(SP)
L46366:	MOV	#000022, -(SP)
L46372:	CALL	L52624			; UNSMUL
L46376:	MOV	R5, R3
L46400:	ADD	(SP)+, R3
L46402:	ADD	#007204, R3
L46406:	MOV	R3, R0
L46410:	ADD	#000010, R0
L46414:	MOV	R0, -(SP)
L46416:	CALL	L52316			; PSHSET
L46422:	MOV	#000011, -(SP)
L46426:	CALL	L52134			; DOIN
L46432:	BEQ	L46440
L46434:	JMP	L46550
L46440:	MOV	R3, -(SP)
L46442:	MOV	000004(R3), R0
L46446:	CMP	R0, #000000		; 0
L46452:	BLT	L46462
L46454:	CMP	R0, #000030		; 24.
L46460:	BLE	L46466
L46462:	CALL	L53076			; "ARRAY BOUNDS ERROR"
L46466:	MOV	R0, -(SP)
L46470:	MOV	#000014, -(SP)		; 12.
L46474:	CALL	L52624			; UNSMUL
L46500:	MOV	R5, R0
L46502:	ADD	(SP)+, R0
L46504:	SUB	#000006, SP
L46510:	MOV	SP, R1
L46512:	MOV	003712(R0), (R1)+
L46516:	MOV	003714(R0), (R1)+
L46522:	MOV	003716(R0), (R1)+
L46526:	MOV	000006(R3), -(SP)
L46532:	CALL	L37004
L46536:	MOV	(SP)+, R3
L46540:	MOV	R3, -(SP)
L46542:	CALL	L16656
L46546:	MOV	(SP)+, R3
L46550:	MOV	052350(R5), -(SP)
L46554:	CALL	L14576
L46560:	TST	052350(R5)
L46564:	BEQ	L46572
L46566:	JMP	L46314
L46572:	TST	053456(R5)
L46576:	BNE	L46604
L46600:	JMP	L46610
L46604:	CALL	L51326			; WRLN
L46610:	MOV	#L47646, -(SP)		; "?DEC-I-MRKED INSTR : "
L46614:	MOV	#000025, -(SP)
L46620:	CLR	-(SP)
L46622:	CALL	L51702			; WRSTG
L46626:	MOV	053426(R5), -(SP)	; MRKEDINSTR
L46632:	MOV	#000004, -(SP)
L46636:	CALL	L51354			; WRNM
L46642:	CALL	L51326			; WRLN
L46646:	MOV	#047674, -(SP)
L46652:	MOV	#000025, -(SP)
L46656:	CLR	-(SP)
L46660:	CALL	L51702			; WRSTG
L46664:	MOV	053430(R5), -(SP)
L46670:	MOV	#000004, -(SP)
L46674:	CALL	L51354			; WRNM
L46700:	CALL	L51326			; WRLN
L46704:	CALL	L10516
L46710:	CALL	L10544
L46714:	SUB	#000006, SP
L46720:	MOV	#047722, R0
L46724:	MOV	SP, R1
L46726:	MOV	(R0)+, (R1)+
L46730:	MOV	(R0)+, (R1)+
L46732:	MOV	(R0)+, (R1)+
L46734:	CALL	L10562
L46740:	CALL	L10544
L46744:	MOV	#012674, R0
L46750:	MOV	R5, R1
L46752:	ADD	#053446, R1
L46756:	MOV	#000006, R2
L46762:	CMPB	(R0)+, (R1)+
L46764:	BNE	L46772
L46766:	DEC	R2
L46770:	BNE	L46762
L46772:	BNE	L47000
L46774:	CLR	R0
L46776:	BR	L47004
L47000:	MOV	#000001, R0
L47004:	CMP	053454(R5), #000001
L47012:	BNE	L47020
L47014:	CLR	R1
L47016:	BR	L47024
L47020:	MOV	#000001, R1
L47024:	BISB	R0, R1
L47026:	BNE	L47034
L47030:	JMP	L47112
L47034:	MOV	#L47732, -(SP)
L47040:	CALL	L52316			; PSHSET
L47044:	MOV	R5, R0
L47046:	ADD	#052356, R0
L47052:	MOV	R0, -(SP)
L47054:	CALL	L52360			; POPSET
L47060:	SUB	#000006, SP
L47064:	MOV	SP, R0
L47066:	MOV	053446(R5), (R0)+
L47072:	MOV	053450(R5), (R0)+
L47076:	MOV	053452(R5), (R0)+
L47102:	MOV	053454(R5), -(SP)
L47106:	CALL	L15350
L47112:	CALL	L10516
L47116:	JMP	L47142
L47122:	JMP	L47142
; Таблица переходов для CASE OF ADDR
L47126:	.WORD	040500		; 1
L47130:	.WORD	047122		; 2
L47132:	.WORD	044130		; 3
L47134:	.WORD	044620		; 4
L47136:	.WORD	047122		; 5
L47140:	.WORD	046170		; 6
;
L47142:	CMPB	002506(R5), #000006
L47150:	BEQ	L47156
L47152:	JMP	L40250
L47156:	MOV	R5, R0
L47160:	ADD	#002700, R0
L47164:	MOV	R0, -(SP)
L47166:	CALL	L10416
L47172:	MOV	R5, R0
L47174:	ADD	#052366, R0
L47200:	MOV	R0, -(SP)
L47202:	CALL	L10416
L47206:	INC	@000004(SP)
L47212:	JMP	L40072
L47216:	ADD	#000006, SP
L47222:	TSTB	#000000
L47226:	BNE	L47234
L47230:	JMP	L37764
L47234:	JMP	L50042			; $END
;
L47240:	.ASCIZ	/.ENABL/<0>
L47250:	.ASCIZ	/LC\   /<0>
L47260:	.ASCIZ	/.NLIST/<0>
L47270:	.ASCIZ	/BEX\  /<0>
L47300:	.ASCIZ	/.TITLE/<0>
L47310:	.ASCIZ	/.GLOBL/<0>
L47320:	.ASCIZ	/ == \ /<0>
L47330:	.ASCIZ	/.ASECT/<0>
L47340:	.ASCIZ	/.BLKB\/<0>
L47350:	.ASCIZ	/      /<0>
L47360:	.ASCIZ	/.CSECT/<0>
L47370:	.ASCIZ	/.PSECT/<0>
L47400:	.ASCIZ	/, RO\ /<0>
L47410:	.ASCIZ	/, D\  /<0>
L47420:	.ASCIZ	/, OVR\/<0>
L47430:	.ASCIZ	/, ABS\/<0>
L47440:	.ASCIZ	/, GBL\/<0>
L47450:	.ASCIZ	/.BLKB\/<0>
L47460:	.ASCIZ	/.IDENT/<0>
L47470:	.ASCIZ	/.ERROR/<0>
L47500:	.ASCIZ	/ ; BAD/<0>
L47510:	.ASCIZ	/ LOCTN/<0>
L47520:	.ASCIZ	/  . = /<0>
L47530:	.ASCIZ	/.     /<0>
L47540:	.ASCIZ	/.BLKW /<0>
L47550:	.ASCIZ	/.EVEN\/<0>
L47560:	.ASCIZ	/.ODD\ /<0>
L47570:	.ASCIZ	/.BLKB /<0>
L47600:	.ASCIZ	/.BYTE\/<0>
L47610:	.ASCIZ	/.LIMIT/<0>
L47620:	.ASCIZ	/?DEC-I-LABELS USED : /
L47646:	.ASCIZ	/?DEC-I-MRKED INSTR : /
L47674:	.ASCIZ	/?DEC-I-MKD NO INST : /
L47722:	.ASCIZ	/.END\ /<0>
; Множество
L47732:	.WORD	000020
L47734:	.WORD	000000
L47736:	.WORD	000000
L47740:	.WORD	000000
; Множество
L47742:	.WORD	000002
L47744:	.WORD	000000
L47746:	.WORD	000000
L47750:	.WORD	000000
; Множество
L47752:	.WORD	000000
L47754:	.WORD	000000
L47756:	.WORD	000000
L47760:	.WORD	000000
; Множество
L47762:	.WORD	000004
L47764:	.WORD	000000
L47766:	.WORD	000000
L47770:	.WORD	000000
; Множество
L47772:	.WORD	000004
L47774:	.WORD	000000
L47776:	.WORD	000000
L50000:	.WORD	000000
; Множество
L50002:	.WORD	000001
L50004:	.WORD	000000
L50006:	.WORD	000000
L50010:	.WORD	000000
; Множество
L50012:	.WORD	000000
L50014:	.WORD	000000
L50016:	.WORD	000000
L50020:	.WORD	000000
; Множество
L50022:	.WORD	000050
L50024:	.WORD	000000
L50026:	.WORD	000000
L50030:	.WORD	000000
; Множество
L50032:	.WORD	000154
L50034:	.WORD	000000
L50036:	.WORD	000000
L50040:	.WORD	000000
;
;------------------------------------------------------------------------------
; Начало модулей Паскаля
;
; Модуль SUPMON данные
$END::
L50042:	EMT	350			; .EXIT
L50044:	.WORD	000000
$DEFLE::
L50046:	.WORD	000003
$DEFEX::
L50050:	.WORD	B.10
B.10:
L50052:	.ASCIZ	"DAT"
CH0OPT::
CH0PTR::
$TTY::
L50056:	ADD	R0, (R2)
FILE::
L50060:	.WORD	000000
SETR0::
L50062:	.WORD	000000
$KORE::
L50064:	.WORD	000000
CHNMAP::
L50066:	BPL	L50070
$FREE::
L50070:	.WORD	000000
$RESR6::
L50072:	BNE	L50074
$RESR5::
L50074:	.WORD	053350
$SAV10::
L50076:	.WORD	000010
RTAREA::
L50100:	.WORD	000000
L50102:	.WORD	000000
	.WORD	000000, 000000, 000000, 000000, 000000, 000000, 000000, 000000
	.WORD	000000, 000000, 000000, 000000, 000000, 000000
CRLF::
L50140:	.ASCIZ	<015><012>		; CR LF
L50143:	.ASCIZ	/ - FROM PC /
L50157:	.ASCIZ	/TRAP TO 4/
L50160:	.ASCIZ	/BAD SUPPORT PACKAGE/<015><012>
L50217:	.ASCIZ	/NOT A VALID DEVICE/
L50242:	.ASCIZ	/I/<057>/O CHANNEL NOT OPEN/
L50267:	.ASCIZ	/END OF FILE ON DEVICE/
L50315:	.ASCIZ	/SUPPORT CONDITIONALS ERROR/
L50350:	.ASCIZ	/RESERVED INSTRUCTION TRAP/
L50402:	.ASCIZ	/INTEGER ERROR/
L50422:	.ASCIZ	/EXP OVERFLOW/
L50441:	.ASCIZ	/LOG OF NEGATIVE/
L50463:	.ASCIZ	/SQRT OF NEGATIVE/
L50476:	.ASCIZ	/DEVIDE BY ZERO/
L50515:	.ASCIZ	/MISSING SPECIAL FEATURE/
L50545:	.ASCIZ	/NOT ENOUGH AVAILABLE MEMORY/
L50601:	.ASCIZ	/NEW OF LENGTH 0/
L50621:	.ASCIZ	/BAD SET EXPRESSION/
L50644:	.ASCIZ	/FATAL I/<057>/O ERROR/
L50664:	.ASCIZ	/ARRAY BOUNDS ERROR/
L50707: .ASCIZ	/TOO MANY FILES OPEN/
	.EVEN
;
; Модуль SUPMON
; $START - адрес старта; стек на 001000
START::
L50734:	MOV	L50074, R5		; (L50074) = 053350 -> R5
L50740:	MOV	R5, 050064
L50744:	CLR	050070
L50750:	MOV	#177776, R0
L50754:	EMT	354			; .SETTOP
L50756:	MOV	R0, SP
L50760:	MOV	R0, 050072
L50764:	CMP	#000073, #000073
L50772:	BEQ	L51006
L50774:	MOV	#050171, R0
L51000:	CALL	L51032			; вывод строки R0
L51004:	EMT	350			; .EXIT
L51006:	MOV	#050100, R0
L51012:	MOV	#001400, (R0)
L51016:	MOV	#051124, 000002(R0)
L51024:	EMT	375			; 
L51026:	JMP	L37702			; $BEGIN
;
; Подпрограмма TYPER: Вывод строки символов R0
TYPER::
L51032:	MOV	R1, -(SP)
L51034:	MOV	R0, R1
L51036:	BR	L51044
L51040:	EMT	341
L51042:	BLO	L51040
L51044:	MOVB	(R1)+, R0
L51046:	BNE	L51040
L51050:	MOV	(SP)+, R1
L51052:	RETURN
;
SAVREG::
L51054:	MOV	R4, -(SP)
L51056:	MOV	R3, -(SP)
L51060:	MOV	R2, -(SP)
L51062:	MOV	R1, -(SP)
L51064:	MOV	R0, -(SP)
L51066:	MOV	000012(SP), -(SP)
L51072:	MOV	R5, 000014(SP)
L51076:	RETURN
;
RESREG::
L51100:	MOV	000014(SP), R5
L51104:	MOV	(SP)+, 000012(SP)
L51110:	MOV	(SP)+, R0
L51112:	MOV	(SP)+, R1
L51114:	MOV	(SP)+, R2
L51116:	MOV	(SP)+, R3
L51120:	MOV	(SP)+, R4
L51122:	RETURN
L51124:	BLO	L51170
L51126:	MOV	#050157, R0
L51132:	CALL	L51032				; TYPER
L51136:	MOV	#050143, R0
L51142:	CALL	L51032				; TYPER
L51146:	MOV	(SP), R0
L51150:	CALL	L51236
L51154:	MOV	#050140, R0
L51160:	CALL	L51032				; TYPER
L51164:	JMP	L50042				; $END
L51170:	JSR	R5, 051176
L51174:	BIS	R3, @-(R0)
RTERR::
L51176:	MOV	(R5), R0
L51200:	CALL	L51032				; TYPER
L51204:	MOV	#050143, R0
L51210:	CALL	L51032				; TYPER
L51214:	MOV	R5, R0
L51216:	CALL	L51236
L51222:	MOV	#050140, R0
L51226:	CALL	L51032				; TYPER
L51232:	JMP	L50042				; $END
L51236:	MOV	R0, -(SP)
L51240:	MOV	R1, -(SP)
L51242:	MOV	R0, R1
L51244:	MOV	#000030, R0
L51250:	ROL	R1
L51252:	ROL	R0
L51254:	EMT	341		; .TTYOUT
L51256:	BLO	L51254
L51260:	BIS	#000001, R1
L51264:	MOV	#000006, R0
L51270:	CLC
L51272:	ROL	R1
L51274:	ROL	R0
L51276:	ROL	R1
L51300:	ROL	R0
L51302:	ROL	R1
L51304:	ROL	R0
L51306:	EMT	341		; .TTYOUT
L51310:	BLO	L51306
L51312:	CMP	R1, #100000
L51316:	BNE	L51264
L51320:	MOV	(SP)+, R1
L51322:	MOV	(SP)+, R0
L51324:	RETURN
;
; Модуль SUPWLN
; Подпрограмма: Перевод строки возврат каретки
WRLN::
$B36::
L51326:	MOV	#L50056, L50060		; -> FILE
WRLNFL::
$B38::
L51334:	MOV	#L50140, -(SP)		; CRLF
L51340:	MOV	#000002, -(SP)
L51344:	CLR	-(SP)
L51346:	CALL	L51710			; WRSTGF
L51352:	RETURN
;
; Модуль SUPWNM
; Процедура вывода числа, два слова на стеке
WRNM::
L51354:	MOV	#050056, 050060		; -> FILE
WRNMFL::
$B26::
L51362:	CALL	L53104
L51366:	CALL	L51054			; SAVREG
L51372:	CLR	R3
L51374:	MOV	000020(SP), R1
L51400:	MOV	000016(SP), R5
L51404:	BNE	L51412
L51406:	MOV	#000015, R5
L51412:	BPL	L51432
L51414:	ADD	#000007, R5
L51420:	NEG	R5
L51422:	INC	R3
L51424:	MOV	#051650, R4
L51430:	BR	L51456
L51432:	SUB	#000005, R5
L51436:	CMP	R1, #100000
L51442:	BLO	L51452
L51444:	DEC	R5
L51446:	COM	R3
L51450:	NEG	R1
L51452:	MOV	#051664, R4
L51456:	CLR	R2
L51460:	TST	R5
L51462:	BLE	L51500
L51464:	MOV	#000040, R0
L51470:	CALL	L53270		; PUTCHF
L51474:	DEC	R5
L51476:	BNE	L51470
L51500:	TST	(R4)+
L51502:	BEQ	L51520
L51504:	CLR	R0
L51506:	ROL	R1
L51510:	ROL	R0
L51512:	ROR	R1
L51514:	TST	R0
L51516:	BR	L51534
L51520:	CMP	(R4), #000001
L51524:	BNE	L51530
L51526:	INC	R2
L51530:	CLR	R0
L51532:	DIV	(R4)+, R0
L51534:	BNE	L51554
L51536:	TST	R2
L51540:	BNE	L51554
L51542:	INC	R5
L51544:	BLE	L51610
L51546:	MOV	#000040, R0
L51552:	BR	L51604
L51554:	INC	R2
L51556:	ADD	#000060, R0
L51562:	TST	R3
L51564:	BGE	L51604
L51566:	CLR	R3
L51570:	MOV	R0, -(SP)
L51572:	MOV	#000055, R0
L51576:	CALL	L53270			; PUTCHF
L51602:	MOV	(SP)+, R0
L51604:	CALL	L53270			; PUTCHF
L51610:	TST	(R4)
L51612:	BNE	L51520
L51614:	TST	R3
L51616:	BLE	L51630
L51620:	MOV	#000102, R0
L51624:	CALL	L53270			; PUTCHF
L51630:	CALL	L53346
L51634:	CALL	L51100			; RESREG
L51640:	MOV	(SP)+, (SP)
L51642:	MOV	(SP)+, (SP)
L51644:	JMP	L53162
;
L51650:	.WORD	177777
L51652:	MOV	R0, R0
L51654:	BNE	L51656
L51656:	JMP	R0
L51660:	.WORD	000010
L51662:	.WORD	1
L51664:	.WORD	0
L51666:	CMP	@(R4)+, (R0)+
L51670:	BEQ	L51612
L51672:	JMP	-(R4)
L51674:	.WORD	000012
L51676:	.WORD	1
L51700:	.WORD	0
;
; Модуль SUPWST
;
WRSTG::
$B32::
L51702:	MOV	#050056, 050060		; -> FILE
WRSTGF::
$B34::
L51710:	JSR	R5, 053106		; SETIO
L51714:	.WORD	000012
L51716:	MOV	R1, -(SP)
L51720:	MOV	R2, -(SP)
L51722:	MOV	000020(SP), R1
L51726:	MOV	000022(SP), R2
L51732:	SUB	R2, R1
L51734:	BLE	L51752
L51736:	MOV	#000040, R0
L51742:	CALL	L53224
L51746:	DEC	R1
L51750:	BNE	L51742
L51752:	MOV	000024(SP), R1
L51756:	TST	R2
L51760:	BEQ	L51774
L51762:	MOVB	(R1)+, R0
L51764:	CALL	L53224
L51770:	DEC	R2
L51772:	BNE	L51762
L51774:	CALL	L53346
L52000:	MOV	(SP)+, R2
L52002:	MOV	(SP)+, R1
L52004:	RETURN
;
; Модуль SUPSET
;
INSERT::
$B50::
L52006:	MOV	R0, L50062		; $KORE
L52012:	MOVB	000002(SP), R0
L52016:	MOV	(SP)+, (SP)
L52020:	BR	L52044
L52022:	MOV	R0, -(SP)
L52024:	JSR	R1, 052062
L52030:	BIS	R1, 000004(R2)
L52034:	MOV	(SP)+, R2
L52036:	MOV	(SP)+, R1
L52040:	MOV	(SP)+, R0
L52042:	INC	R0
L52044:	CMPB	R0, 000002(SP)
L52050:	BLOS	L52022
L52052:	MOV	(SP)+, (SP)
L52054:	MOV	050062, R0
L52060:	RETURN
;
L52062:	MOV	R2, -(SP)
L52064:	MOV	R1, -(SP)
L52066:	CMP	R0, #000077
L52072:	BHI	L52126
L52074:	MOV	R0, R2
L52076:	ASH	#177774, R2
L52102:	ASL	R2
L52104:	ADD	SP, R2
L52106:	ADD	#000010, R2
L52112:	MOV	#000001, R1
L52116:	BIC	#177760, R0
L52122:	ASH	R0, R1
L52124:	RETURN
;
L52126:	JSR	R5, 051176
L52132:	BIS	SP, (R1)+
;
DOIN::
$B40::
L52134:	MOV	R0, 050062
L52140:	MOVB	000002(SP), R0
L52144:	MOV	(SP)+, (SP)
L52146:	CMP	R0, #000077
L52152:	BLOS	L52162
L52154:	CLR	000004(SP)
L52160:	BR	L52202
L52162:	JSR	R1, 052062
L52166:	MOV	(R2), 000012(SP)
L52172:	MOV	R1, 000010(SP)
L52176:	MOV	(SP)+, R2
L52200:	MOV	(SP)+, R1
L52202:	MOV	(SP)+, 000006(SP)
L52206:	TST	(SP)+
L52210:	MOV	050062, R0
L52214:	BIT	(SP)+, (SP)+
L52216:	RETURN
;
SETDIF::
$B48::
L52220:	JSR	R0, L52560
L52224:	BIC	(R1)+, (R0)+
L52226:	BIC	(R1)+, (R0)+
L52230:	BIC	(R1)+, (R0)+
L52232:	BIC	(R1)+, (R0)+
L52234:	BR	L52252
;
SETOR::
$B56::
L52236:	JSR	R0, L52560
L52242:	BIS	(R1)+, (R0)+
L52244:	BIS	(R1)+, (R0)+
L52246:	BIS	(R1)+, (R0)+
L52250:	BIS	(R1)+, (R0)+
L52252:	MOV	(SP)+, R1
L52254:	MOV	(SP)+, R0
L52256:	MOV	(SP)+, 000006(SP)
L52262:	ADD	#000006, SP
L52266:	RETURN
;
SETAND::
$B58::
L52270:	JSR	R0, L52560
L52274:	COM	(R1)
L52276:	BIC	(R1)+, (R0)+
L52300:	COM	(R1)
L52302:	BIC	(R1)+, (R0)+
L52304:	COM	(R1)
L52306:	BIC	(R1)+, (R0)+
L52310:	COM	(R1)
L52312:	BIC	(R1)+, (R0)+
L52314:	BR	L52252
;
PSHSET::
$B52::
L52316:	MOV	R0, L50062
L52322:	MOV	000002(SP), R0
L52326:	MOV	(SP)+, (SP)
L52330:	CMP	(R0)+, (R0)+
L52332:	MOV	(R0), -(SP)
L52334:	MOV	-(R0), -(SP)
L52336:	MOV	-(R0), -(SP)
L52340:	MOV	000006(SP), -(SP)
L52344:	MOV	000006(R0), 000010(SP)
L52352:	MOV	050062, R0
L52356:	RETURN
;
POPSET::
$B54::
L52360:	MOV	R0, L50062
L52364:	MOV	000002(SP), R0
L52370:	MOV	(SP)+, (SP)
L52372:	MOV	000010(SP), 000006(R0)
L52400:	MOV	(SP)+, 000006(SP)
L52404:	MOV	(SP)+, (R0)+
L52406:	MOV	(SP)+, (R0)+
L52410:	MOV	(SP)+, (R0)
L52412:	MOV	L50062, R0
L52416:	RETURN
;
SETEQ::
$B42::
L52420:	JSR	R0, L52560
L52424:	CMP	(R1)+, (R0)+
L52426:	BNE	L52464
L52430:	CMP	(R1)+, (R0)+
L52432:	BNE	L52464
L52434:	CMP	(R1)+, (R0)+
L52436:	BNE	L52464
L52440:	CMP	(R1)+, (R0)+
L52442:	BNE	L52464
L52444:	MOV	(SP)+, R1
L52446:	MOV	(SP)+, R0
L52450:	MOV	(SP)+, 000016(SP)
L52454:	ADD	#000016, SP
L52460:	SEZ
L52462:	RETURN
L52464:	MOV	(SP)+, R1
L52466:	MOV	(SP)+, R0
L52470:	MOV	(SP)+, 000016(SP)
L52474:	ADD	#000016, SP
L52500:	CLZ
L52502:	RETURN
;
SETGE::
$B46::
L52504:	JSR	R0, L52560
L52510:	BIC	(R1)+, (R0)+
L52512:	BNE	L52464
L52514:	BIC	(R1)+, (R0)+
L52516:	BNE	L52464
L52520:	BIC	(R1)+, (R0)+
L52522:	BNE	L52464
L52524:	BIC	(R1), (R0)
L52526:	BNE	L52464
L52530:	BR	L52444
;
SETLE::
$B44::
L52532:	JSR	R0, L52560
L52536:	BIC	(R0)+, (R1)+
L52540:	BNE	L52464
L52542:	BIC	(R0)+, (R1)+
L52544:	BNE	L52464
L52546:	BIC	(R0)+, (R1)+
L52550:	BNE	L52464
L52552:	BIC	(R0), (R1)
L52554:	BNE	L52464
L52556:	BR	L52444
;
L52560:	MOV	R1, -(SP)
L52562:	MOV	R0, -(SP)
L52564:	MOV	SP, R1
L52566:	ADD	#000010, R1
L52572:	MOV	R1, R0
L52574:	ADD	#000010, R0
L52600:	RETURN
;
; Модуль SUPINT
;
L52602:	MOV	R0, -(SP)
L52604:	MOV	R1, -(SP)
L52606:	CLR	R0
L52610:	MOV	000012(SP), R1
L52614:	BPL	L52620
L52616:	DEC	R0
L52620:	JMP	@000004(SP)
;
UNSMUL::
$B116::
L52624:	CALL	L52602
L52630:	CLR	R0
L52632:	MUL	000010(SP), R1
L52636:	BR	L52746
;
UNSDIV::
$B118::
L52640:	CALL	L52602
L52644:	CLR	R0
L52646:	DIV	000010(SP), R0
L52652:	BLO	L52772
L52654:	MOV	R0, R1
L52656:	BR	L52746
;
UNSMOD::
$B120::
L52660:	CALL	L52602
L52664:	CLR	R0
L52666:	DIV	000010(SP), R0
L52672:	BLO	L52772
L52674:	BR	L52746
;
DOMUL::
$B78::
L52676:	CALL	L52602
L52702:	MUL	000010(SP), R1
L52706:	BLO	L52764
L52710:	BR	L52746
;
DODIV::
$B80::
L52712:	CALL	L52602
L52716:	DIV	000010(SP), R0
L52722:	BLO	L52772
L52724:	BVS	052772
L52726:	MOV	R0, R1
L52730:	BR	L52746
;
DOMOD::
$B82::
L52732:	CALL	L52602
L52736:	DIV	000010(SP), R0
L52742:	BLO	L52772
L52744:	BVS	052764
L52746:	MOV	R1, 000012(SP)
L52752:	MOV	(SP)+, R1
L52754:	MOV	(SP)+, R0
L52756:	TST	(SP)+
L52760:	MOV	(SP)+, (SP)
L52762:	RETURN
L52764:	JSR	R5, 051176
L52770:	BIS	R4, R2
L52772:	JSR	R5, 051176
L52776:	.WORD	L50476			; "DIVIDE BY ZERO"
;
; Модуль SUPREG
;
SVREG::
$B74::
L53000: MOV	L50060, -(SP)
L53004:	MOV	R1, -(SP)
L53006:	MOV	R2, -(SP)
L53010:	MOV	R3, -(SP)
L53012:	MOV	SP, R1
L53014:	SUB	#000030, R1
L53020:	CMP	R1, 050064
L53024:	BLOS	L53064
L53026:	MOV	R0, PC
;
UNREG::
$B76::
L53030:	TST	(SP)+
L53032:	MOV	(SP)+, R3
L53034:	MOV	(SP)+, R2
L53036:	MOV	(SP)+, R1
L53040:	MOV	(SP)+, L50060		; -> FILE
L53044:	RTS	R0
;
STKCHK::
$B127::
L53046:	MOV	SP, R1
L53050:	SUB	#000030, R1
L53054:	CMP	R1, 050064
L53060:	BLOS	L53064
L53062:	RETURN
L53064:	CLR	050064
L53070:	JSR	R5, 051176
L53074:	.WORD	L50545			; "NOT ENOUGH AVAILABLE MEMORY"
$B125::
$$B125::
L53076:	JSR	R5, 051176
L53102:	.WORD	L50664			; "ARRAY BOUNDS ERROR"
;
; Модуль SUPIO
;
CHKOPN::
L53104:	RETURN
;
SETIO::
L53106:	MOV	(R5)+, -(SP)
L53110:	ADD	SP, (SP)
L53112:	MOV	R4, -(SP)
L53114:	MOV	R0, -(SP)
L53116:	MOV	R5, -(SP)
L53120:	MOV	@#L50060, R5
L53124:	MOV	R5, R4
L53126:	CMP	R5, #050056
L53132:	BEQ	L53140
L53134:	ADD	#000014, R4
L53140:	CALL	@(SP)+
L53142:	MOV	(SP)+, R0
L53144:	MOV	(SP)+, R4
L53146:	MOV	000002(SP), R5
L53152:	MOV	000004(SP), @000000(SP)
L53160:	MOV	(SP), SP
;
KLUDGE::
L53162:	RETURN
;
CHKRW::
L53164:	BLO	L53170
L53166:	RETURN
;
CHKRWE::
L53170:	CMPB	@#000052, #000001
L53176:	BLO	L53210
L53200:	BHI	L53216
L53202:	JSR	R5, 051176
L53206:	BIS	SP, -(R4)
B.104:
L53210:	JSR	R5, 051176
L53214:	.WORD	L50242			; "I/O CHANNEL NOT OPEN"
B.112:
L53216:	JSR	R5, 051176
L53222:	.WORD	L50267
;
; Модуль SUPIOO
;
PUTCHR::
L53224:	CMP	R5, #050056
L53230:	BNE	L53240
L53232:	EMT	341
L53234:	BLO	L53232
L53236:	RETURN
L53240:	MOVB	R0, @000000(R5)
L53244:	INC	(R5)
L53246:	MOV	000006(R5), -(SP)
L53252:	ADD	#001000, (SP)
L53256:	CMP	(SP)+, (R5)
L53260:	BHI	L53266
L53262:	CALL	L53306			; FORCER
L53266:	RETURN
;
; Процедура вывода символа
PUTCHF::
L53270:	MOV	R5, -(SP)
L53272:	MOV	L50060, R5
L53276:	CALL	L53224
L53302:	MOV	(SP)+, R5
L53304:	RETURN
;
DUMPBF::
FORCER::
L53306:	CMP	R5, #050056
L53312:	BEQ	L53346
L53314:	CLR	000012(R5)
L53320:	MOV	R0, -(SP)
L53322:	MOV	R5, R0
L53324:	TST	(R0)+
L53326:	EMT	375			; 
L53330:	CALL	L53164			; CHKRW
L53334:	MOV	(SP)+, R0
L53336:	MOV	000006(R5), (R5)
L53342:	INC	000004(R5)
;
FORCE::
FORCEF::
L53346:	RETURN
;
;------------------------------------------------------------------------------
;
; R5 = 053350 - базовый адрес для переменных
L53350:	.WORD
; ARRAY	000000(R5) VAR00	Массив из 16 байт
;
; WORD	000400(R5) VAR400
; REC	000402(R5) VAR402	Запись 522. байта
;
; WORD	001410(R5)
; BYTE	001412(R5) VAR1412	Boolean?
; REC	001414(R5) VAR1414	Запись 522. байта
; BYTE	002426(R5) VAR2426	Boolean
;
; WORD	002470(R5)
;
; WORD	002506(R5)
; WORD	002510(R5)
; WORD	002512(R5)
; WORD	002514(R5)
; BYTE	002516(R5)
;
; WORD	002530(R5)
; WORD	002532(R5)
; WORD	002534(R5)
; WORD	002536(R5)
; WORD	002540(R5)
; WORD	002542(R5)
; BYTE	002544(R5)
; WORD	002546(R5)
; WORD	002550(R5)
; WORD	002552(R5)
; WORD	002554(R5)
; WORD	002556(R5)
; WORD	002560(R5)
; WORD	002562(R5)
; WORD	002564(R5)
; BYTE	002566(R5)
;
; WORD	002600(R5)
; WORD	002602(R5)
; WORD	002604(R5)
; WORD	002606(R5)
; WORD	002610(R5)
; WORD	002612(R5)
; BYTE	002614(R5)
; WORD	002616(R5)
; WORD	002620(R5)
; WORD	002622(R5)
; WORD	002624(R5)
;
; WORD	002646(R5)
;
; WORD	002652(R5)
;
; WORD	002676(R5) VAR2676
; WORD	002700(R5) VAR2700	Запись 522. байта
; ARRAY	003712(R5) VAR3712	ARRAY [0..30] OF RECB14(14)
; WORD	004366(R5)
; WORD	004370(R5)
; ARRAY	004372(R5) VAR4372	Массив 0..100 по 14. байт
; WORD	007200(R5)
; WORD	007202(R5)
; ARRAY	007204(R5) VAR7204	Массив 0..1000 по 18. байт
; WORD	052346(R5)		LABELS - number of labels used
; WORD	052350(R5)
; WORD	052352(R5)
; WORD	052354(R5)
; SET	052356(R5)		Множество, 8 байт
; REC	052366(R5)		Запись 522. байта
; BYTE	053400(R5)		Boolean
;
; WORD	053412(R5)
;
; WORD	053426(R5)		MRKEDINSTR
; WORD	053430(R5)
; WORD	053432(R5)
; WORD	053434(R5) CMDCODE	Код команды
; BYTE	053436(R5) CMDTYPE	Тип команды 0..15 (кроме 3, 4, 11)
;	0  - SCC/SEN/SEZ/SEV/SEC/CCC/CLN/CLV/CLC/NOP/RETURN/RTT/RTI - без параметров
;	1  - MTPD/MFPD/ASLB/ASRB/ROLB/RORB/TSTB/SBCB/ADCB/NEGB/DECB/INCB/COMB/CLRB/JMP/SWAB
;	2  - RTS / FDIV/FMUL/FSUB/FADD
;	5  - команды перехода Bxx
;	6  - XOR/JSR
;	10 - TRAP/EMT
;	12 - SUB/BISB/BICB/BITB/CMPB/MOVB
;	13 - SOB
;	14 - Sxx/Cxx установка/снятие флагов
;	15 - MTPS/MFPS
; ARRAY	053440(R5) VAR53440	Массив 1..6 of char - Обозначение команды
; ARRAY	053446(R5) VAR53446	Массив 1..6 of char
; WORD	053454(R5) VAR53454	Integer
; WORD	053456(R5) VAR53456	Integer
; WORD	053460(R5) VAR53460	Integer
;
; SET	053462(R5) VAR53462	Множество
; SET	053472(R5) VAR53472	Множество
;------------------------------------------------------------------------------
	.END	START
